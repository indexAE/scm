{"ast":null,"code":"import _objectSpread from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\n\n// 分类数据\n\nexport default {\n  __name: 'index',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var categoryData = ref([]);\n    var dialogVisible = ref(false);\n    var isEdit = ref(false);\n    var formRef = ref(null);\n\n    // 表单数据\n    var form = reactive({\n      parentId: null,\n      name: '',\n      code: '',\n      sort: 0\n    });\n\n    // 表单验证规则\n    var rules = {\n      name: [{\n        required: true,\n        message: '请输入分类名称',\n        trigger: 'blur'\n      }],\n      code: [{\n        required: true,\n        message: '请输入分类编码',\n        trigger: 'blur'\n      }]\n    };\n\n    // 获取分类数据\n    var getCategoryData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/api/product/categories/tree');\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              result = _context.sent;\n              if (result.code === 0) {\n                categoryData.value = result.data || [];\n              } else {\n                ElMessage.error(result.message || '获取分类数据失败');\n              }\n              _context.next = 14;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取分类数据失败:', _context.t0);\n              ElMessage.error('获取分类数据失败');\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return function getCategoryData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 新增分类\n    var handleAdd = function handleAdd() {\n      isEdit.value = false;\n      form.parentId = null;\n      form.name = '';\n      form.code = '';\n      form.sort = 0;\n      dialogVisible.value = true;\n    };\n\n    // 编辑分类\n    var handleEdit = function handleEdit(row) {\n      isEdit.value = true;\n      form.id = row.id;\n      form.parentId = row.parentId;\n      form.name = row.name;\n      form.code = row.code;\n      form.sort = row.sort;\n      dialogVisible.value = true;\n    };\n\n    // 切换状态\n    var handleToggleStatus = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(row) {\n        var action, response, result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              action = row.status === 'enabled' ? '禁用' : '启用';\n              _context2.prev = 1;\n              _context2.next = 4;\n              return ElMessageBox.confirm(\"\\u786E\\u8BA4\".concat(action, \"\\u8BE5\\u5206\\u7C7B\\u5417\\uFF1F\"), '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 4:\n              _context2.next = 6;\n              return fetch(\"/api/product/categories/\".concat(row.id, \"/status\"), {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  status: row.status === 'enabled' ? 'disabled' : 'enabled'\n                })\n              });\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return response.json();\n            case 9:\n              result = _context2.sent;\n              if (!(result.code === 0)) {\n                _context2.next = 16;\n                break;\n              }\n              ElMessage.success('状态更新成功');\n              _context2.next = 14;\n              return getCategoryData();\n            case 14:\n              _context2.next = 17;\n              break;\n            case 16:\n              ElMessage.error(result.message || '状态更新失败');\n            case 17:\n              _context2.next = 22;\n              break;\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](1);\n              if (_context2.t0 !== 'cancel') {\n                console.error('更新状态失败:', _context2.t0);\n                ElMessage.error('更新状态失败');\n              }\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 19]]);\n      }));\n      return function handleToggleStatus(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 提交表单\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (formRef.value) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.next = 4;\n              return formRef.value.validate(/*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(valid) {\n                  var url, method, response, result;\n                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                    while (1) switch (_context3.prev = _context3.next) {\n                      case 0:\n                        if (!valid) {\n                          _context3.next = 24;\n                          break;\n                        }\n                        _context3.prev = 1;\n                        url = isEdit.value ? \"/api/product/categories/\".concat(form.id) : '/api/product/categories';\n                        method = isEdit.value ? 'PUT' : 'POST';\n                        _context3.next = 6;\n                        return fetch(url, {\n                          method: method,\n                          headers: {\n                            'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify(form)\n                        });\n                      case 6:\n                        response = _context3.sent;\n                        _context3.next = 9;\n                        return response.json();\n                      case 9:\n                        result = _context3.sent;\n                        if (!(result.code === 0)) {\n                          _context3.next = 17;\n                          break;\n                        }\n                        ElMessage.success(isEdit.value ? '更新成功' : '创建成功');\n                        dialogVisible.value = false;\n                        _context3.next = 15;\n                        return getCategoryData();\n                      case 15:\n                        _context3.next = 18;\n                        break;\n                      case 17:\n                        ElMessage.error(result.message || (isEdit.value ? '更新失败' : '创建失败'));\n                      case 18:\n                        _context3.next = 24;\n                        break;\n                      case 20:\n                        _context3.prev = 20;\n                        _context3.t0 = _context3[\"catch\"](1);\n                        console.error(isEdit.value ? '更新分类失败:' : '创建分类失败:', _context3.t0);\n                        ElMessage.error(isEdit.value ? '更新失败' : '创建失败');\n                      case 24:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }, _callee3, null, [[1, 20]]);\n                }));\n                return function (_x2) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function handleSubmit() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 过滤分类选项，排除当前分类及其子分类\n    var filterCategories = function filterCategories(categories, currentId) {\n      if (!categories) return [];\n\n      // 递归查找所有子分类ID\n      var _findChildrenIds = function findChildrenIds(category) {\n        var ids = [category.id];\n        if (category.children) {\n          category.children.forEach(function (child) {\n            ids = ids.concat(_findChildrenIds(child));\n          });\n        }\n        return ids;\n      };\n\n      // 深拷贝分类数据\n      var cloneCategories = JSON.parse(JSON.stringify(categories));\n\n      // 获取当前分类及其所有子分类的ID\n      var excludeIds = currentId ? cloneCategories.filter(function (item) {\n        return item.id === currentId;\n      }).reduce(function (ids, item) {\n        return ids.concat(_findChildrenIds(item));\n      }, []) : [];\n\n      // 过滤掉当前分类及其子分类\n      return cloneCategories.filter(function (item) {\n        return !excludeIds.includes(item.id);\n      });\n    };\n\n    // 设置上级分类对话框\n    var setParentDialogVisible = ref(false);\n    var currentCategory = ref(null);\n    var selectedParentId = ref(null);\n\n    // 处理设置上级分类\n    var handleSetParent = function handleSetParent(row) {\n      currentCategory.value = row;\n      selectedParentId.value = null;\n      setParentDialogVisible.value = true;\n    };\n\n    // 提交设置上级分类\n    var handleSetParentSubmit = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(!currentCategory.value || !selectedParentId.value)) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 2:\n              _context5.prev = 2;\n              _context5.next = 5;\n              return fetch(\"/api/product/categories/\".concat(currentCategory.value.id), {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(_objectSpread(_objectSpread({}, currentCategory.value), {}, {\n                  parentId: selectedParentId.value\n                }))\n              });\n            case 5:\n              response = _context5.sent;\n              _context5.next = 8;\n              return response.json();\n            case 8:\n              result = _context5.sent;\n              if (!(result.code === 0)) {\n                _context5.next = 16;\n                break;\n              }\n              ElMessage.success('设置上级分类成功');\n              setParentDialogVisible.value = false;\n              _context5.next = 14;\n              return getCategoryData();\n            case 14:\n              _context5.next = 17;\n              break;\n            case 16:\n              ElMessage.error(result.message || '设置上级分类失败');\n            case 17:\n              _context5.next = 23;\n              break;\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](2);\n              console.error('设置上级分类失败:', _context5.t0);\n              ElMessage.error('设置上级分类失败');\n            case 23:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, null, [[2, 19]]);\n      }));\n      return function handleSetParentSubmit() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      getCategoryData();\n    });\n    var __returned__ = {\n      categoryData: categoryData,\n      dialogVisible: dialogVisible,\n      isEdit: isEdit,\n      formRef: formRef,\n      form: form,\n      rules: rules,\n      getCategoryData: getCategoryData,\n      handleAdd: handleAdd,\n      handleEdit: handleEdit,\n      handleToggleStatus: handleToggleStatus,\n      handleSubmit: handleSubmit,\n      filterCategories: filterCategories,\n      setParentDialogVisible: setParentDialogVisible,\n      currentCategory: currentCategory,\n      selectedParentId: selectedParentId,\n      handleSetParent: handleSetParent,\n      handleSetParentSubmit: handleSetParentSubmit,\n      ref: ref,\n      reactive: reactive,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","categoryData","dialogVisible","isEdit","formRef","form","parentId","name","code","sort","rules","required","message","trigger","getCategoryData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","sent","json","value","data","error","t0","console","stop","apply","arguments","handleAdd","handleEdit","row","id","handleToggleStatus","_ref3","_callee2","action","_callee2$","_context2","status","confirm","concat","confirmButtonText","cancelButtonText","type","method","headers","body","JSON","stringify","success","_x","handleSubmit","_ref4","_callee4","_callee4$","_context4","abrupt","validate","_ref5","_callee3","valid","url","_callee3$","_context3","_x2","filterCategories","categories","currentId","findChildrenIds","category","ids","children","forEach","child","cloneCategories","parse","excludeIds","filter","item","reduce","includes","setParentDialogVisible","currentCategory","selectedParentId","handleSetParent","handleSetParentSubmit","_ref6","_callee5","_callee5$","_context5","_objectSpread"],"sources":["C:/Users/indexae/Desktop/scm日志/scm/frontend/src/views/product/category/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"category-manage\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>商品分类管理</span>\r\n          <div>\r\n            <el-button type=\"primary\" @click=\"handleAdd\">新增分类</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 分类树形表格 -->\r\n      <el-table\r\n        :data=\"categoryData\"\r\n        row-key=\"id\"\r\n        border\r\n        :tree-props=\"{ children: 'children' }\"\r\n      >\r\n        <el-table-column prop=\"name\" label=\"分类名称\" />\r\n        <el-table-column prop=\"code\" label=\"分类编码\" />\r\n        <el-table-column prop=\"sort\" label=\"排序\" width=\"100\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.status === 'enabled' ? 'success' : 'danger'\">\r\n              {{ scope.row.status === 'enabled' ? '启用' : '禁用' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"300\">\r\n          <template #default=\"scope\">\r\n            <el-button link @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button\r\n              :type=\"scope.row.status === 'enabled' ? 'danger' : 'success'\"\r\n              link\r\n              @click=\"handleToggleStatus(scope.row)\"\r\n            >\r\n              {{ scope.row.status === 'enabled' ? '禁用' : '启用' }}\r\n            </el-button>\r\n            <el-button \r\n              type=\"primary\" \r\n              link \r\n              @click=\"handleSetParent(scope.row)\"\r\n              v-if=\"!scope.row.parentId\"\r\n            >\r\n              设为上级分类\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n\r\n    <!-- 分类表单对话框 -->\r\n    <el-dialog\r\n      :title=\"isEdit ? '编辑分类' : '新增分类'\"\r\n      v-model=\"dialogVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-form-item label=\"上级分类\">\r\n          <el-cascader\r\n            v-model=\"form.parentId\"\r\n            :options=\"isEdit ? filterCategories(categoryData.value, form.id) : categoryData\"\r\n            :props=\"{\r\n              checkStrictly: true,\r\n              label: 'name',\r\n              value: 'id',\r\n              emitPath: false,\r\n              expandTrigger: 'hover'\r\n            }\"\r\n            clearable\r\n            placeholder=\"请选择上级分类\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"请输入分类名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类编码\" prop=\"code\">\r\n          <el-input v-model=\"form.code\" placeholder=\"请输入分类编码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"排序\" prop=\"sort\">\r\n          <el-input-number v-model=\"form.sort\" :min=\"0\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 设置上级分类对话框 -->\r\n    <el-dialog\r\n      title=\"设置上级分类\"\r\n      v-model=\"setParentDialogVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form label-width=\"100px\">\r\n        <el-form-item label=\"当前分类\">\r\n          <el-input :value=\"currentCategory?.name\" disabled />\r\n        </el-form-item>\r\n        <el-form-item label=\"上级分类\">\r\n          <el-cascader\r\n            v-model=\"selectedParentId\"\r\n            :options=\"categoryData\"\r\n            :props=\"{\r\n              checkStrictly: true,\r\n              label: 'name',\r\n              value: 'id',\r\n              emitPath: false,\r\n              expandTrigger: 'hover'\r\n            }\"\r\n            clearable\r\n            placeholder=\"请选择上级分类\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"setParentDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSetParentSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\n// 分类数据\r\nconst categoryData = ref([])\r\nconst dialogVisible = ref(false)\r\nconst isEdit = ref(false)\r\nconst formRef = ref(null)\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  parentId: null,\r\n  name: '',\r\n  code: '',\r\n  sort: 0\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  name: [\r\n    { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n  ],\r\n  code: [\r\n    { required: true, message: '请输入分类编码', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 获取分类数据\r\nconst getCategoryData = async () => {\r\n  try {\r\n    const response = await fetch('/api/product/categories/tree')\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      categoryData.value = result.data || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取分类数据失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取分类数据失败:', error)\r\n    ElMessage.error('获取分类数据失败')\r\n  }\r\n}\r\n\r\n// 新增分类\r\nconst handleAdd = () => {\r\n  isEdit.value = false\r\n  form.parentId = null\r\n  form.name = ''\r\n  form.code = ''\r\n  form.sort = 0\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑分类\r\nconst handleEdit = (row) => {\r\n  isEdit.value = true\r\n  form.id = row.id\r\n  form.parentId = row.parentId\r\n  form.name = row.name\r\n  form.code = row.code\r\n  form.sort = row.sort\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 切换状态\r\nconst handleToggleStatus = async (row) => {\r\n  const action = row.status === 'enabled' ? '禁用' : '启用'\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确认${action}该分类吗？`,\r\n      '提示',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    const response = await fetch(`/api/product/categories/${row.id}/status`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        status: row.status === 'enabled' ? 'disabled' : 'enabled'\r\n      })\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      ElMessage.success('状态更新成功')\r\n      await getCategoryData()\r\n    } else {\r\n      ElMessage.error(result.message || '状态更新失败')\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      console.error('更新状态失败:', error)\r\n      ElMessage.error('更新状态失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const url = isEdit.value \r\n          ? `/api/product/categories/${form.id}`\r\n          : '/api/product/categories'\r\n        \r\n        const method = isEdit.value ? 'PUT' : 'POST'\r\n        const response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(form)\r\n        })\r\n\r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          ElMessage.success(isEdit.value ? '更新成功' : '创建成功')\r\n          dialogVisible.value = false\r\n          await getCategoryData()\r\n        } else {\r\n          ElMessage.error(result.message || (isEdit.value ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(isEdit.value ? '更新分类失败:' : '创建分类失败:', error)\r\n        ElMessage.error(isEdit.value ? '更新失败' : '创建失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 过滤分类选项，排除当前分类及其子分类\r\nconst filterCategories = (categories, currentId) => {\r\n  if (!categories) return []\r\n  \r\n  // 递归查找所有子分类ID\r\n  const findChildrenIds = (category) => {\r\n    let ids = [category.id]\r\n    if (category.children) {\r\n      category.children.forEach(child => {\r\n        ids = ids.concat(findChildrenIds(child))\r\n      })\r\n    }\r\n    return ids\r\n  }\r\n\r\n  // 深拷贝分类数据\r\n  const cloneCategories = JSON.parse(JSON.stringify(categories))\r\n  \r\n  // 获取当前分类及其所有子分类的ID\r\n  const excludeIds = currentId ? cloneCategories\r\n    .filter(item => item.id === currentId)\r\n    .reduce((ids, item) => ids.concat(findChildrenIds(item)), [])\r\n    : []\r\n\r\n  // 过滤掉当前分类及其子分类\r\n  return cloneCategories.filter(item => !excludeIds.includes(item.id))\r\n}\r\n\r\n// 设置上级分类对话框\r\nconst setParentDialogVisible = ref(false)\r\nconst currentCategory = ref(null)\r\nconst selectedParentId = ref(null)\r\n\r\n// 处理设置上级分类\r\nconst handleSetParent = (row) => {\r\n  currentCategory.value = row\r\n  selectedParentId.value = null\r\n  setParentDialogVisible.value = true\r\n}\r\n\r\n// 提交设置上级分类\r\nconst handleSetParentSubmit = async () => {\r\n  if (!currentCategory.value || !selectedParentId.value) return\r\n  \r\n  try {\r\n    const response = await fetch(`/api/product/categories/${currentCategory.value.id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        ...currentCategory.value,\r\n        parentId: selectedParentId.value\r\n      })\r\n    })\r\n\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      ElMessage.success('设置上级分类成功')\r\n      setParentDialogVisible.value = false\r\n      await getCategoryData()\r\n    } else {\r\n      ElMessage.error(result.message || '设置上级分类失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('设置上级分类失败:', error)\r\n    ElMessage.error('设置上级分类失败')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  getCategoryData()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.category-manage {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}