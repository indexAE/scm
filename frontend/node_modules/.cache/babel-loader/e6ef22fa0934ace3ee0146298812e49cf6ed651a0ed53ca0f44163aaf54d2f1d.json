{"ast":null,"code":"import _toConsumableArray from \"C:/Users/indexae/Desktop/scm/scm/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"sale-return-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"page-header\"\n};\nvar _hoisted_3 = {\n  style: {\n    \"float\": \"right\",\n    \"color\": \"#8492a6\",\n    \"font-size\": \"13px\"\n  }\n};\nvar _hoisted_4 = {\n  style: {\n    \"float\": \"right\",\n    \"color\": \"#8492a6\",\n    \"font-size\": \"13px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($setup.id ? '编辑退货单' : '新增退货单'), 1 /* TEXT */)]), _createVNode(_component_el_form, {\n    ref: \"formRef\",\n    model: $setup.form,\n    rules: $setup.rules,\n    \"label-width\": \"100px\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        label: \"退货单号\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.form.returnNo,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $setup.form.returnNo = $event;\n            }),\n            disabled: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"关联订单\",\n        prop: \"orderId\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_select, {\n            modelValue: $setup.form.orderId,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $setup.form.orderId = $event;\n            }),\n            placeholder: \"请选择关联订单\",\n            onChange: $setup.handleOrderChange,\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.orderList, function (item) {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: item.id,\n                  label: item.orderNo,\n                  value: item.id\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createElementVNode(\"span\", null, _toDisplayString(item.orderNo), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, _toDisplayString(item.customerName), 1 /* TEXT */)];\n                  }),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"value\"]);\n              }), 128 /* KEYED_FRAGMENT */))];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"客户名称\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.form.customerName,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $setup.form.customerName = $event;\n            }),\n            disabled: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"经办人\",\n        prop: \"handlerId\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_select, {\n            modelValue: $setup.form.handlerId,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n              return $setup.form.handlerId = $event;\n            }),\n            placeholder: \"请选择经办人\",\n            onChange: $setup.handleHandlerChange,\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.handlerList, function (item) {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: item.id,\n                  label: item.name,\n                  value: item.id\n                }, {\n                  \"default\": _withCtx(function () {\n                    return [_createElementVNode(\"span\", null, _toDisplayString(item.name), 1 /* TEXT */)];\n                  }),\n                  _: 2 /* DYNAMIC */\n                }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"value\"]);\n              }), 128 /* KEYED_FRAGMENT */))];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"退货商品\",\n        prop: \"items\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.form.items, function (item, index) {\n            return _openBlock(), _createElementBlock(\"div\", {\n              key: index,\n              \"class\": \"return-item\"\n            }, [_createVNode(_component_el_select, {\n              modelValue: item.productId,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return item.productId = $event;\n              },\n              placeholder: \"请选择商品\",\n              onChange: function onChange(val) {\n                return $setup.handleProductChange(val, index);\n              },\n              style: {\n                \"width\": \"200px\"\n              }\n            }, {\n              \"default\": _withCtx(function () {\n                return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.productList, function (product) {\n                  return _openBlock(), _createBlock(_component_el_option, {\n                    key: product.id,\n                    label: product.name,\n                    value: product.id\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createElementVNode(\"span\", null, _toDisplayString(product.name), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(product.spec), 1 /* TEXT */)];\n                    }),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"value\"]);\n                }), 128 /* KEYED_FRAGMENT */))];\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"]), _createVNode(_component_el_input, {\n              modelValue: item.spec,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return item.spec = $event;\n              },\n              placeholder: \"规格\",\n              disabled: \"\",\n              style: {\n                \"width\": \"120px\"\n              }\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input, {\n              modelValue: item.unit,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return item.unit = $event;\n              },\n              placeholder: \"单位\",\n              disabled: \"\",\n              style: {\n                \"width\": \"80px\"\n              }\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input_number, {\n              modelValue: item.quantity,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return item.quantity = $event;\n              },\n              min: 1,\n              max: item.maxQuantity,\n              onChange: function onChange() {\n                return $setup.calculateItemAmount(index);\n              },\n              style: {\n                \"width\": \"120px\"\n              }\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"max\", \"onChange\"]), _createVNode(_component_el_input_number, {\n              modelValue: item.unitPrice,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return item.unitPrice = $event;\n              },\n              min: 0,\n              precision: 2,\n              disabled: \"\",\n              style: {\n                \"width\": \"120px\"\n              }\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_input, {\n              modelValue: item.totalPrice,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return item.totalPrice = $event;\n              },\n              disabled: \"\",\n              style: {\n                \"width\": \"120px\"\n              }\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"]), _createVNode(_component_el_button, {\n              type: \"danger\",\n              onClick: function onClick($event) {\n                return $setup.handleDeleteItem(index);\n              }\n            }, {\n              \"default\": _withCtx(function () {\n                return _toConsumableArray(_cache[7] || (_cache[7] = [_createTextVNode(\"删除\")]));\n              }),\n              _: 2 /* DYNAMIC */\n            }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]);\n          }), 128 /* KEYED_FRAGMENT */)), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $setup.handleAddItem\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[8] || (_cache[8] = [_createTextVNode(\"添加商品\")]);\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"退货说明\",\n        prop: \"remark\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.form.remark,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n              return $setup.form.remark = $event;\n            }),\n            type: \"textarea\",\n            rows: 3,\n            placeholder: \"请输入退货说明\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"总金额\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.form.totalAmount,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n              return $setup.form.totalAmount = $event;\n            }),\n            disabled: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $setup.handleSubmit,\n            loading: $setup.submitting\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString($setup.id ? '更新' : '提交'), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_el_button, {\n            onClick: _cache[6] || (_cache[6] = function ($event) {\n              return $setup.router.back();\n            })\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[9] || (_cache[9] = [_createTextVNode(\"取消\")]);\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","id","_createVNode","_component_el_form","ref","model","form","rules","_withCtx","_component_el_form_item","label","_component_el_input","modelValue","returnNo","_cache","$event","disabled","_","prop","_component_el_select","orderId","placeholder","onChange","handleOrderChange","_Fragment","_renderList","orderList","item","_createBlock","_component_el_option","key","orderNo","value","_hoisted_3","customerName","handlerId","handleHandlerChange","handlerList","name","items","index","productId","onUpdateModelValue","val","handleProductChange","productList","product","_hoisted_4","spec","unit","_component_el_input_number","quantity","min","max","maxQuantity","calculateItemAmount","unitPrice","precision","totalPrice","_component_el_button","type","onClick","handleDeleteItem","_toConsumableArray","_createTextVNode","handleAddItem","remark","rows","totalAmount","handleSubmit","loading","submitting","router","back"],"sources":["C:\\Users\\indexae\\Desktop\\scm\\scm\\frontend\\src\\views\\sale\\return\\form.vue"],"sourcesContent":["<template>\r\n  <div class=\"sale-return-form\">\r\n    <div class=\"page-header\">\r\n      <h2>{{ id ? '编辑退货单' : '新增退货单' }}</h2>\r\n    </div>\r\n\r\n    <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n      <el-form-item label=\"退货单号\">\r\n        <el-input v-model=\"form.returnNo\" disabled />\r\n      </el-form-item>\r\n      \r\n      <el-form-item label=\"关联订单\" prop=\"orderId\">\r\n        <el-select \r\n          v-model=\"form.orderId\" \r\n          placeholder=\"请选择关联订单\" \r\n          @change=\"handleOrderChange\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in orderList\"\r\n            :key=\"item.id\"\r\n            :label=\"item.orderNo\"\r\n            :value=\"item.id\"\r\n          >\r\n            <span>{{ item.orderNo }}</span>\r\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">\r\n              {{ item.customerName }}\r\n            </span>\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"客户名称\">\r\n        <el-input v-model=\"form.customerName\" disabled />\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"经办人\" prop=\"handlerId\">\r\n        <el-select \r\n          v-model=\"form.handlerId\" \r\n          placeholder=\"请选择经办人\"\r\n          @change=\"handleHandlerChange\"\r\n          style=\"width: 100%\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in handlerList\"\r\n            :key=\"item.id\"\r\n            :label=\"item.name\"\r\n            :value=\"item.id\"\r\n          >\r\n            <span>{{ item.name }}</span>\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"退货商品\" prop=\"items\">\r\n        <div v-for=\"(item, index) in form.items\" :key=\"index\" class=\"return-item\">\r\n          <el-select\r\n            v-model=\"item.productId\"\r\n            placeholder=\"请选择商品\"\r\n            @change=\"(val) => handleProductChange(val, index)\"\r\n            style=\"width: 200px\"\r\n          >\r\n            <el-option\r\n              v-for=\"product in productList\"\r\n              :key=\"product.id\"\r\n              :label=\"product.name\"\r\n              :value=\"product.id\"\r\n            >\r\n              <span>{{ product.name }}</span>\r\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">\r\n                {{ product.spec }}\r\n              </span>\r\n            </el-option>\r\n          </el-select>\r\n          \r\n          <el-input v-model=\"item.spec\" placeholder=\"规格\" disabled style=\"width: 120px\" />\r\n          <el-input v-model=\"item.unit\" placeholder=\"单位\" disabled style=\"width: 80px\" />\r\n          \r\n          <el-input-number\r\n            v-model=\"item.quantity\"\r\n            :min=\"1\"\r\n            :max=\"item.maxQuantity\"\r\n            @change=\"() => calculateItemAmount(index)\"\r\n            style=\"width: 120px\"\r\n          />\r\n          \r\n          <el-input-number\r\n            v-model=\"item.unitPrice\"\r\n            :min=\"0\"\r\n            :precision=\"2\"\r\n            disabled\r\n            style=\"width: 120px\"\r\n          />\r\n          \r\n          <el-input\r\n            v-model=\"item.totalPrice\"\r\n            disabled\r\n            style=\"width: 120px\"\r\n          />\r\n          \r\n          <el-button type=\"danger\" @click=\"handleDeleteItem(index)\">删除</el-button>\r\n        </div>\r\n        \r\n        <el-button type=\"primary\" @click=\"handleAddItem\">添加商品</el-button>\r\n      </el-form-item>\r\n      \r\n      <el-form-item label=\"退货说明\" prop=\"remark\">\r\n        <el-input\r\n          v-model=\"form.remark\"\r\n          type=\"textarea\"\r\n          :rows=\"3\"\r\n          placeholder=\"请输入退货说明\"\r\n        />\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"总金额\">\r\n        <el-input v-model=\"form.totalAmount\" disabled />\r\n      </el-form-item>\r\n      \r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\" :loading=\"submitting\">\r\n          {{ id ? '更新' : '提交' }}\r\n        </el-button>\r\n        <el-button @click=\"router.back()\">取消</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst formRef = ref(null)\r\nconst submitting = ref(false)\r\n\r\n// 获取路由参数\r\nconst id = route.query.id\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  returnNo: '',\r\n  orderId: '',\r\n  orderNo: '',\r\n  customerId: '',\r\n  customerName: '',\r\n  totalAmount: 0,\r\n  remark: '',\r\n  handlerId: '',\r\n  handlerName: '',\r\n  items: []\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  orderId: [{ required: true, message: '请选择关联订单', trigger: 'change' }],\r\n  handlerId: [{ required: true, message: '请选择经办人', trigger: 'change' }],\r\n  remark: [{ required: true, message: '请输入退货说明', trigger: 'blur' }],\r\n  items: [{ required: true, type: 'array', message: '请添加退货商品', trigger: 'change' }]\r\n}\r\n\r\n// 订单列表\r\nconst orderList = ref([])\r\n// 商品列表\r\nconst productList = ref([])\r\n// 经办人列表\r\nconst handlerList = ref([])\r\n\r\n// 获取订单列表\r\nconst getOrders = async () => {\r\n  try {\r\n    const response = await fetch('/api/sale/orders?status=approved', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      orderList.value = result.data.list || []\r\n      // 打印订单列表数据,用于调试\r\n      console.log('订单列表:', orderList.value)\r\n    } else {\r\n      ElMessage.error(result.message || '获取订单列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单列表失败:', error)\r\n    ElMessage.error('获取订单列表失败')\r\n  }\r\n}\r\n\r\n// 获取订单详情\r\nconst getOrderDetail = async (orderId) => {\r\n  try {\r\n    console.log('获取订单详情,orderId:', orderId)\r\n    const response = await fetch(`/api/sale/orders/${orderId}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      const order = result.data\r\n      if (!order) {\r\n        ElMessage.error('获取订单详情失败: 订单不存在')\r\n        return\r\n      }\r\n      \r\n      console.log('订单原始数据:', order)\r\n      \r\n      form.orderNo = order.orderNo\r\n      form.customerId = order.customerId\r\n      form.customerName = order.customerName\r\n      \r\n      // 不再覆盖productList\r\n      console.log('商品列表:', productList.value)\r\n    } else {\r\n      ElMessage.error(result.message || '获取订单详情失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单详情失败:', error)\r\n    ElMessage.error('获取订单详情失败')\r\n  }\r\n}\r\n\r\n// 处理订单选择变化\r\nconst handleOrderChange = (orderId) => {\r\n  if (orderId) {\r\n    getOrderDetail(orderId)\r\n    // 清空已选商品\r\n    form.items = []\r\n  }\r\n}\r\n\r\n// 处理商品选择变化\r\nconst handleProductChange = (productId, index) => {\r\n  console.log('选择商品:', productId, '索引:', index)\r\n  console.log('当前商品列表:', productList.value)\r\n  \r\n  const product = productList.value.find(p => p.id === productId)\r\n  console.log('找到的商品:', product)\r\n  \r\n  if (product) {\r\n    form.items[index] = {\r\n      ...form.items[index],\r\n      productId: product.id,\r\n      productName: product.name,\r\n      spec: product.spec,\r\n      unit: product.unit,\r\n      unitPrice: product.price,\r\n      quantity: 1\r\n    }\r\n    calculateItemAmount(index)\r\n  }\r\n}\r\n\r\n// 计算商品金额\r\nconst calculateItemAmount = (index) => {\r\n  const item = form.items[index]\r\n  if (item.quantity && item.unitPrice) {\r\n    item.totalPrice = (item.quantity * item.unitPrice).toFixed(2)\r\n  }\r\n  calculateTotalAmount()\r\n}\r\n\r\n// 计算总金额\r\nconst calculateTotalAmount = () => {\r\n  form.totalAmount = form.items.reduce((sum, item) => {\r\n    return sum + (parseFloat(item.totalPrice) || 0)\r\n  }, 0).toFixed(2)\r\n}\r\n\r\n// 添加商品\r\nconst handleAddItem = () => {\r\n  form.items.push({\r\n    productId: '',\r\n    productName: '',\r\n    spec: '',\r\n    unit: '',\r\n    quantity: 1,\r\n    unitPrice: 0,\r\n    totalPrice: 0\r\n  })\r\n}\r\n\r\n// 删除商品\r\nconst handleDeleteItem = (index) => {\r\n  form.items.splice(index, 1)\r\n  calculateTotalAmount()\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      submitting.value = true\r\n      try {\r\n        const url = id ? `/api/sale/returns/${id}` : '/api/sale/returns'\r\n        const method = id ? 'PUT' : 'POST'\r\n        \r\n        // 准备提交数据\r\n        const submitData = {\r\n          ...form,\r\n          customerId: form.customerId,\r\n          totalAmount: parseFloat(form.totalAmount),\r\n          handlerId: form.handlerId,\r\n          handlerName: form.handlerName,\r\n          status: 'pending', // 设置初始状态\r\n          items: form.items.map(item => ({\r\n            orderId: form.orderId,\r\n            productId: item.productId,\r\n            productName: item.productName,\r\n            spec: item.spec,\r\n            unit: item.unit,\r\n            quantity: parseInt(item.quantity),\r\n            unitPrice: parseFloat(item.unitPrice),\r\n            totalPrice: parseFloat(item.totalPrice)\r\n          }))\r\n        }\r\n        \r\n        // 删除returnNo字段\r\n        delete submitData.returnNo\r\n        \r\n        // 打印提交的数据用于调试\r\n        console.log('提交的数据:', submitData)\r\n        \r\n        const response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(submitData)\r\n        })\r\n        \r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          ElMessage.success(id ? '更新成功' : '创建成功')\r\n          router.back()\r\n        } else {\r\n          ElMessage.error(result.message || (id ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(id ? '更新退货单失败:' : '创建退货单失败:', error)\r\n        ElMessage.error(id ? '更新失败' : '创建失败')\r\n      } finally {\r\n        submitting.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 获取退货单详情\r\nconst getDetail = async () => {\r\n  try {\r\n    const response = await fetch(`/api/sale/returns/${id}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      Object.assign(form, result.data)\r\n      // 获取关联订单的商品列表\r\n      if (form.orderId) {\r\n        await getOrderDetail(form.orderId)\r\n      }\r\n    } else {\r\n      ElMessage.error(result.message || '获取退货单详情失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取退货单详情失败:', error)\r\n    ElMessage.error('获取退货单详情失败')\r\n  }\r\n}\r\n\r\n// 获取商品列表\r\nconst getProducts = async () => {\r\n  try {\r\n    const response = await fetch('/api/products', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      productList.value = result.data.list || []\r\n      console.log('商品列表:', productList.value)\r\n    } else {\r\n      ElMessage.error(result.message || '获取商品列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取商品列表失败:', error)\r\n    ElMessage.error('获取商品列表失败')\r\n  }\r\n}\r\n\r\n// 获取经办人列表\r\nconst getHandlers = async () => {\r\n  try {\r\n    const response = await fetch('/api/handlers', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      handlerList.value = result.data.list || []\r\n      console.log('经办人列表数据:', handlerList.value)\r\n    } else {\r\n      ElMessage.error(result.message || '获取经办人列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取经办人列表失败:', error)\r\n    ElMessage.error('获取经办人列表失败')\r\n  }\r\n}\r\n\r\n// 处理经办人选择变化\r\nconst handleHandlerChange = (handlerId) => {\r\n  if (handlerId) {\r\n    const handler = handlerList.value.find(h => h.id === handlerId)\r\n    if (handler) {\r\n      form.handlerName = handler.name\r\n    }\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  // 获取商品列表\r\n  await getProducts()\r\n  // 获取订单列表\r\n  await getOrders()\r\n  // 获取经办人列表\r\n  await getHandlers()\r\n  \r\n  // 如果是编辑模式，获取退货单详情\r\n  if (id) {\r\n    await getDetail()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.sale-return-form {\r\n  padding: 20px;\r\n}\r\n\r\n.page-header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.return-item {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 10px;\r\n  align-items: center;\r\n}\r\n</style> "],"mappings":";;;;EACO,SAAM;AAAkB;;EACtB,SAAM;AAAa;;EAuBVA,KAAqD,EAArD;IAAA;IAAA;IAAA;EAAA;AAAqD;;EA4CnDA,KAAqD,EAArD;IAAA;IAAA;IAAA;EAAA;AAAqD;;;;;;;;;uBApEvEC,mBAAA,CA6HM,OA7HNC,UA6HM,GA5HJC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAAqC,YAAAE,gBAAA,CAA9BC,MAAA,CAAAC,EAAE,qC,GAGXC,YAAA,CAuHUC,kBAAA;IAvHDC,GAAG,EAAC,SAAS;IAAEC,KAAK,EAAEL,MAAA,CAAAM,IAAI;IAAGC,KAAK,EAAEP,MAAA,CAAAO,KAAK;IAAE,aAAW,EAAC;;IANpE,WAAAC,QAAA,CAOM;MAAA,OAEe,CAFfN,YAAA,CAEeO,uBAAA;QAFDC,KAAK,EAAC;MAAM;QAPhC,WAAAF,QAAA,CAQQ;UAAA,OAA6C,CAA7CN,YAAA,CAA6CS,mBAAA;YARrDC,UAAA,EAQ2BZ,MAAA,CAAAM,IAAI,CAACO,QAAQ;YARxC,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAQ2Bf,MAAA,CAAAM,IAAI,CAACO,QAAQ,GAAAE,MAAA;YAAA;YAAEC,QAAQ,EAAR;;;QAR1CC,CAAA;UAWMf,YAAA,CAmBeO,uBAAA;QAnBDC,KAAK,EAAC,MAAM;QAACQ,IAAI,EAAC;;QAXtC,WAAAV,QAAA,CAYQ;UAAA,OAiBY,CAjBZN,YAAA,CAiBYiB,oBAAA;YA7BpBP,UAAA,EAamBZ,MAAA,CAAAM,IAAI,CAACc,OAAO;YAb/B,uBAAAN,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAamBf,MAAA,CAAAM,IAAI,CAACc,OAAO,GAAAL,MAAA;YAAA;YACrBM,WAAW,EAAC,SAAS;YACpBC,QAAM,EAAEtB,MAAA,CAAAuB,iBAAiB;YAC1B7B,KAAmB,EAAnB;cAAA;YAAA;;YAhBV,WAAAc,QAAA,CAmBY;cAAA,OAAyB,E,kBAD3Bb,mBAAA,CAUY6B,SAAA,QA5BtBC,WAAA,CAmB2BzB,MAAA,CAAA0B,SAAS,EAnBpC,UAmBmBC,IAAI;qCADbC,YAAA,CAUYC,oBAAA;kBARTC,GAAG,EAAEH,IAAI,CAAC1B,EAAE;kBACZS,KAAK,EAAEiB,IAAI,CAACI,OAAO;kBACnBC,KAAK,EAAEL,IAAI,CAAC1B;;kBAtBzB,WAAAO,QAAA,CAwBY;oBAAA,OAA+B,CAA/BX,mBAAA,CAA+B,cAAAE,gBAAA,CAAtB4B,IAAI,CAACI,OAAO,kBACrBlC,mBAAA,CAEO,QAFPoC,UAEO,EAAAlC,gBAAA,CADF4B,IAAI,CAACO,YAAY,iB;;kBA1BlCjB,CAAA;;;;YAAAA,CAAA;;;QAAAA,CAAA;UAgCMf,YAAA,CAEeO,uBAAA;QAFDC,KAAK,EAAC;MAAM;QAhChC,WAAAF,QAAA,CAiCQ;UAAA,OAAiD,CAAjDN,YAAA,CAAiDS,mBAAA;YAjCzDC,UAAA,EAiC2BZ,MAAA,CAAAM,IAAI,CAAC4B,YAAY;YAjC5C,uBAAApB,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAiC2Bf,MAAA,CAAAM,IAAI,CAAC4B,YAAY,GAAAnB,MAAA;YAAA;YAAEC,QAAQ,EAAR;;;QAjC9CC,CAAA;UAoCMf,YAAA,CAgBeO,uBAAA;QAhBDC,KAAK,EAAC,KAAK;QAACQ,IAAI,EAAC;;QApCrC,WAAAV,QAAA,CAqCQ;UAAA,OAcY,CAdZN,YAAA,CAcYiB,oBAAA;YAnDpBP,UAAA,EAsCmBZ,MAAA,CAAAM,IAAI,CAAC6B,SAAS;YAtCjC,uBAAArB,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAsCmBf,MAAA,CAAAM,IAAI,CAAC6B,SAAS,GAAApB,MAAA;YAAA;YACvBM,WAAW,EAAC,QAAQ;YACnBC,QAAM,EAAEtB,MAAA,CAAAoC,mBAAmB;YAC5B1C,KAAmB,EAAnB;cAAA;YAAA;;YAzCV,WAAAc,QAAA,CA4CY;cAAA,OAA2B,E,kBAD7Bb,mBAAA,CAOY6B,SAAA,QAlDtBC,WAAA,CA4C2BzB,MAAA,CAAAqC,WAAW,EA5CtC,UA4CmBV,IAAI;qCADbC,YAAA,CAOYC,oBAAA;kBALTC,GAAG,EAAEH,IAAI,CAAC1B,EAAE;kBACZS,KAAK,EAAEiB,IAAI,CAACW,IAAI;kBAChBN,KAAK,EAAEL,IAAI,CAAC1B;;kBA/CzB,WAAAO,QAAA,CAiDY;oBAAA,OAA4B,CAA5BX,mBAAA,CAA4B,cAAAE,gBAAA,CAAnB4B,IAAI,CAACW,IAAI,iB;;kBAjD9BrB,CAAA;;;;YAAAA,CAAA;;;QAAAA,CAAA;UAsDMf,YAAA,CAkDeO,uBAAA;QAlDDC,KAAK,EAAC,MAAM;QAACQ,IAAI,EAAC;;QAtDtC,WAAAV,QAAA,CAuDa;UAAA,OAAmC,E,kBAAxCb,mBAAA,CA8CM6B,SAAA,QArGdC,WAAA,CAuDqCzB,MAAA,CAAAM,IAAI,CAACiC,KAAK,EAvD/C,UAuDqBZ,IAAI,EAAEa,KAAK;iCAAxB7C,mBAAA,CA8CM;cA9CoCmC,GAAG,EAAEU,KAAK;cAAE,SAAM;gBAC1DtC,YAAA,CAiBYiB,oBAAA;cAzEtBP,UAAA,EAyDqBe,IAAI,CAACc,SAAS;cAzDnC,gCAAAC,mBAAA3B,MAAA;gBAAA,OAyDqBY,IAAI,CAACc,SAAS,GAAA1B,MAAA;cAAA;cACvBM,WAAW,EAAC,OAAO;cAClBC,QAAM,WAANA,QAAMA,CAAGqB,GAAG;gBAAA,OAAK3C,MAAA,CAAA4C,mBAAmB,CAACD,GAAG,EAAEH,KAAK;cAAA;cAChD9C,KAAoB,EAApB;gBAAA;cAAA;;cA5DZ,WAAAc,QAAA,CA+Dc;gBAAA,OAA8B,E,kBADhCb,mBAAA,CAUY6B,SAAA,QAxExBC,WAAA,CA+DgCzB,MAAA,CAAA6C,WAAW,EA/D3C,UA+DqBC,OAAO;uCADhBlB,YAAA,CAUYC,oBAAA;oBARTC,GAAG,EAAEgB,OAAO,CAAC7C,EAAE;oBACfS,KAAK,EAAEoC,OAAO,CAACR,IAAI;oBACnBN,KAAK,EAAEc,OAAO,CAAC7C;;oBAlE9B,WAAAO,QAAA,CAoEc;sBAAA,OAA+B,CAA/BX,mBAAA,CAA+B,cAAAE,gBAAA,CAAtB+C,OAAO,CAACR,IAAI,kBACrBzC,mBAAA,CAEO,QAFPkD,UAEO,EAAAhD,gBAAA,CADF+C,OAAO,CAACE,IAAI,iB;;oBAtE/B/B,CAAA;;;;cAAAA,CAAA;oGA2EUf,YAAA,CAA+ES,mBAAA;cA3EzFC,UAAA,EA2E6Be,IAAI,CAACqB,IAAI;cA3EtC,gCAAAN,mBAAA3B,MAAA;gBAAA,OA2E6BY,IAAI,CAACqB,IAAI,GAAAjC,MAAA;cAAA;cAAEM,WAAW,EAAC,IAAI;cAACL,QAAQ,EAAR,EAAQ;cAACtB,KAAoB,EAApB;gBAAA;cAAA;4EACxDQ,YAAA,CAA8ES,mBAAA;cA5ExFC,UAAA,EA4E6Be,IAAI,CAACsB,IAAI;cA5EtC,gCAAAP,mBAAA3B,MAAA;gBAAA,OA4E6BY,IAAI,CAACsB,IAAI,GAAAlC,MAAA;cAAA;cAAEM,WAAW,EAAC,IAAI;cAACL,QAAQ,EAAR,EAAQ;cAACtB,KAAmB,EAAnB;gBAAA;cAAA;4EAExDQ,YAAA,CAMEgD,0BAAA;cApFZtC,UAAA,EA+EqBe,IAAI,CAACwB,QAAQ;cA/ElC,gCAAAT,mBAAA3B,MAAA;gBAAA,OA+EqBY,IAAI,CAACwB,QAAQ,GAAApC,MAAA;cAAA;cACrBqC,GAAG,EAAE,CAAC;cACNC,GAAG,EAAE1B,IAAI,CAAC2B,WAAW;cACrBhC,QAAM,WAANA,QAAMA,CAAA;gBAAA,OAAQtB,MAAA,CAAAuD,mBAAmB,CAACf,KAAK;cAAA;cACxC9C,KAAoB,EAApB;gBAAA;cAAA;+FAGFQ,YAAA,CAMEgD,0BAAA;cA5FZtC,UAAA,EAuFqBe,IAAI,CAAC6B,SAAS;cAvFnC,gCAAAd,mBAAA3B,MAAA;gBAAA,OAuFqBY,IAAI,CAAC6B,SAAS,GAAAzC,MAAA;cAAA;cACtBqC,GAAG,EAAE,CAAC;cACNK,SAAS,EAAE,CAAC;cACbzC,QAAQ,EAAR,EAAQ;cACRtB,KAAoB,EAApB;gBAAA;cAAA;4EAGFQ,YAAA,CAIES,mBAAA;cAlGZC,UAAA,EA+FqBe,IAAI,CAAC+B,UAAU;cA/FpC,gCAAAhB,mBAAA3B,MAAA;gBAAA,OA+FqBY,IAAI,CAAC+B,UAAU,GAAA3C,MAAA;cAAA;cACxBC,QAAQ,EAAR,EAAQ;cACRtB,KAAoB,EAApB;gBAAA;cAAA;4EAGFQ,YAAA,CAAwEyD,oBAAA;cAA7DC,IAAI,EAAC,QAAQ;cAAEC,OAAK,WAALA,OAAKA,CAAA9C,MAAA;gBAAA,OAAEf,MAAA,CAAA8D,gBAAgB,CAACtB,KAAK;cAAA;;cApGjE,WAAAhC,QAAA,CAoGoE;gBAAA,OAAAuD,kBAAA,CAAEjD,MAAA,QAAAA,MAAA,OApGtEkD,gBAAA,CAoGoE,IAAE,E;;cApGtE/C,CAAA;;0CAuGQf,YAAA,CAAiEyD,oBAAA;YAAtDC,IAAI,EAAC,SAAS;YAAEC,OAAK,EAAE7D,MAAA,CAAAiE;;YAvG1C,WAAAzD,QAAA,CAuGyD;cAAA,OAAIM,MAAA,QAAAA,MAAA,OAvG7DkD,gBAAA,CAuGyD,MAAI,E;;YAvG7D/C,CAAA;;;QAAAA,CAAA;UA0GMf,YAAA,CAOeO,uBAAA;QAPDC,KAAK,EAAC,MAAM;QAACQ,IAAI,EAAC;;QA1GtC,WAAAV,QAAA,CA2GQ;UAAA,OAKE,CALFN,YAAA,CAKES,mBAAA;YAhHVC,UAAA,EA4GmBZ,MAAA,CAAAM,IAAI,CAAC4D,MAAM;YA5G9B,uBAAApD,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OA4GmBf,MAAA,CAAAM,IAAI,CAAC4D,MAAM,GAAAnD,MAAA;YAAA;YACpB6C,IAAI,EAAC,UAAU;YACdO,IAAI,EAAE,CAAC;YACR9C,WAAW,EAAC;;;QA/GtBJ,CAAA;UAmHMf,YAAA,CAEeO,uBAAA;QAFDC,KAAK,EAAC;MAAK;QAnH/B,WAAAF,QAAA,CAoHQ;UAAA,OAAgD,CAAhDN,YAAA,CAAgDS,mBAAA;YApHxDC,UAAA,EAoH2BZ,MAAA,CAAAM,IAAI,CAAC8D,WAAW;YApH3C,uBAAAtD,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAoH2Bf,MAAA,CAAAM,IAAI,CAAC8D,WAAW,GAAArD,MAAA;YAAA;YAAEC,QAAQ,EAAR;;;QApH7CC,CAAA;UAuHMf,YAAA,CAKeO,uBAAA;QA5HrB,WAAAD,QAAA,CAwHQ;UAAA,OAEY,CAFZN,YAAA,CAEYyD,oBAAA;YAFDC,IAAI,EAAC,SAAS;YAAEC,OAAK,EAAE7D,MAAA,CAAAqE,YAAY;YAAGC,OAAO,EAAEtE,MAAA,CAAAuE;;YAxHlE,WAAA/D,QAAA,CAyHU;cAAA,OAAsB,CAzHhCwD,gBAAA,CAAAjE,gBAAA,CAyHaC,MAAA,CAAAC,EAAE,+B;;YAzHfgB,CAAA;0CA2HQf,YAAA,CAAgDyD,oBAAA;YAApCE,OAAK,EAAA/C,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAAEf,MAAA,CAAAwE,MAAM,CAACC,IAAI;YAAA;;YA3HtC,WAAAjE,QAAA,CA2H0C;cAAA,OAAEM,MAAA,QAAAA,MAAA,OA3H5CkD,gBAAA,CA2H0C,IAAE,E;;YA3H5C/C,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}