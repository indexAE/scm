{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'index',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var route = useRoute();\n    var tableData = ref([]);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var total = ref(0);\n    var currentStock = ref(0);\n\n    // 获取操作类型显示文本\n    var getOperationType = function getOperationType(type) {\n      var types = {\n        'adjust': '调整',\n        'inbound': '入库',\n        'outbound': '出库'\n      };\n      return types[type] || type;\n    };\n\n    // 获取库存明细记录\n    var getRecords = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var offset, response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              offset = (currentPage.value - 1) * pageSize.value;\n              _context.next = 4;\n              return fetch(\"http://127.0.0.1:8080/api/warehouse/stocks/\".concat(route.query.id, \"/records?offset=\").concat(offset, \"&limit=\").concat(pageSize.value), {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n            case 7:\n              result = _context.sent;\n              if (result.code === 0) {\n                tableData.value = result.data.list || [];\n                total.value = result.data.total || 0;\n              } else {\n                ElMessage.error(result.message || '获取库存明细记录失败');\n              }\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取库存明细记录失败:', _context.t0);\n              ElMessage.error('获取库存明细记录失败');\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n      return function getRecords() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 分页大小改变\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      getRecords();\n    };\n\n    // 当前页改变\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n      getRecords();\n    };\n\n    // 初始化\n    onMounted(function () {\n      currentStock.value = route.query.quantity || 0;\n      getRecords();\n    });\n    var __returned__ = {\n      route: route,\n      tableData: tableData,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      currentStock: currentStock,\n      getOperationType: getOperationType,\n      getRecords: getRecords,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      ref: ref,\n      onMounted: onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","ElMessage","route","tableData","currentPage","pageSize","total","currentStock","getOperationType","type","types","getRecords","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","offset","response","result","wrap","_callee$","_context","prev","next","value","fetch","concat","query","id","headers","credentials","sent","json","code","data","list","error","message","t0","console","stop","apply","arguments","handleSizeChange","val","handleCurrentChange","quantity"],"sources":["C:/Users/indexae/Desktop/scm/scm/frontend/src/views/warehouse/stock/detail/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"warehouse-stock-detail\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>库存明细</span>\r\n          <el-button @click=\"$router.back()\">返回</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <div class=\"info-section\">\r\n        <el-descriptions :column=\"3\" border>\r\n          <el-descriptions-item label=\"仓库\">{{ route.query.warehouseName }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"商品\">{{ route.query.productName }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"当前库存\">{{ currentStock }}</el-descriptions-item>\r\n        </el-descriptions>\r\n      </div>\r\n\r\n      <div class=\"table-section\">\r\n        <el-table :data=\"tableData\" style=\"width: 100%\" border>\r\n          <el-table-column prop=\"operation_type\" label=\"操作类型\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              {{ getOperationType(row.operation_type) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"quantity\" label=\"变动数量\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              <span :class=\"{ 'text-red': row.quantity < 0, 'text-green': row.quantity > 0 }\">\r\n                {{ row.quantity > 0 ? '+' + row.quantity : row.quantity }}\r\n              </span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"before_quantity\" label=\"变动前数量\" width=\"120\" />\r\n          <el-table-column prop=\"after_quantity\" label=\"变动后数量\" width=\"120\" />\r\n          <el-table-column prop=\"operator_name\" label=\"操作人\" width=\"120\" />\r\n          <el-table-column prop=\"operation_time\" label=\"操作时间\" width=\"180\" />\r\n          <el-table-column prop=\"remark\" label=\"备注\" />\r\n        </el-table>\r\n\r\n        <div class=\"pagination\">\r\n          <el-pagination\r\n            v-model:current-page=\"currentPage\"\r\n            v-model:page-size=\"pageSize\"\r\n            :total=\"total\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            layout=\"total, sizes, prev, pager, next\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst tableData = ref([])\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\nconst currentStock = ref(0)\r\n\r\n// 获取操作类型显示文本\r\nconst getOperationType = (type) => {\r\n  const types = {\r\n    'adjust': '调整',\r\n    'inbound': '入库',\r\n    'outbound': '出库'\r\n  }\r\n  return types[type] || type\r\n}\r\n\r\n// 获取库存明细记录\r\nconst getRecords = async () => {\r\n  try {\r\n    const offset = (currentPage.value - 1) * pageSize.value\r\n    const response = await fetch(`http://127.0.0.1:8080/api/warehouse/stocks/${route.query.id}/records?offset=${offset}&limit=${pageSize.value}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    \r\n    if (result.code === 0) {\r\n      tableData.value = result.data.list || []\r\n      total.value = result.data.total || 0\r\n    } else {\r\n      ElMessage.error(result.message || '获取库存明细记录失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取库存明细记录失败:', error)\r\n    ElMessage.error('获取库存明细记录失败')\r\n  }\r\n}\r\n\r\n// 分页大小改变\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  getRecords()\r\n}\r\n\r\n// 当前页改变\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  getRecords()\r\n}\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  currentStock.value = route.query.quantity || 0\r\n  getRecords()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.warehouse-stock-detail {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.info-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.text-red {\r\n  color: #f56c6c;\r\n}\r\n\r\n.text-green {\r\n  color: #67c23a;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}