{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"role-manage\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"header-buttons\"\n};\nvar _hoisted_4 = {\n  \"class\": \"pagination-container\"\n};\nvar _hoisted_5 = {\n  \"class\": \"dialog-footer\"\n};\nvar _hoisted_6 = {\n  \"class\": \"custom-tree-node\"\n};\nvar _hoisted_7 = {\n  \"class\": \"permission-code\"\n};\nvar _hoisted_8 = {\n  \"class\": \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tag = _resolveComponent(\"el-tag\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _component_el_switch = _resolveComponent(\"el-switch\");\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n  var _component_el_tree = _resolveComponent(\"el-tree\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[15] || (_cache[15] = _createElementVNode(\"span\", null, \"角色管理\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n        type: \"danger\",\n        disabled: !$setup.selectedRoles.length,\n        onClick: $setup.handleBatchDelete\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[13] || (_cache[13] = [_createTextVNode(\"批量删除\")]);\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"disabled\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.handleAdd\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[14] || (_cache[14] = [_createTextVNode(\"添加角色\")]);\n        }),\n        _: 1 /* STABLE */\n      })])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        inline: true,\n        model: $setup.searchForm,\n        \"class\": \"search-form\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"角色名称\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.searchForm.roleName,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.searchForm.roleName = $event;\n                }),\n                placeholder: \"请输入角色名称\",\n                clearable: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"角色编码\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.searchForm.roleCode,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.searchForm.roleCode = $event;\n                }),\n                placeholder: \"请输入角色编码\",\n                clearable: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"状态\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.searchForm.status,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.searchForm.status = $event;\n                }),\n                placeholder: \"请选择状态\",\n                clearable: \"\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_option, {\n                    label: \"启用\",\n                    value: true\n                  }), _createVNode(_component_el_option, {\n                    label: \"禁用\",\n                    value: false\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleSearch\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[16] || (_cache[16] = [_createTextVNode(\"查询\")]);\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_button, {\n                onClick: $setup.handleReset\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[17] || (_cache[17] = [_createTextVNode(\"重置\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"]), _createVNode(_component_el_table, {\n        data: $setup.roles,\n        style: {\n          \"width\": \"100%\"\n        },\n        onSelectionChange: $setup.handleSelectionChange\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            type: \"selection\",\n            width: \"55\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"roleName\",\n            label: \"角色名称\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"roleCode\",\n            label: \"角色编码\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"description\",\n            label: \"描述\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"status\",\n            label: \"状态\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tag, {\n                type: scope.row.status ? 'success' : 'danger'\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString(scope.row.status ? '启用' : '禁用'), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            label: \"操作\",\n            width: \"200\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_button, {\n                size: \"small\",\n                onClick: function onClick($event) {\n                  return $setup.handleEdit(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[18] || (_cache[18] = [_createTextVNode(\"编辑\")]);\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"primary\",\n                onClick: function onClick($event) {\n                  return $setup.handleAssignPermissions(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[19] || (_cache[19] = [_createTextVNode(\"分配权限\")]);\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                size: \"small\",\n                type: \"danger\",\n                onClick: function onClick($event) {\n                  return $setup.handleDelete(scope.row);\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[20] || (_cache[20] = [_createTextVNode(\"删除\")]);\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_pagination, {\n        \"current-page\": $setup.currentPage,\n        \"onUpdate:currentPage\": _cache[3] || (_cache[3] = function ($event) {\n          return $setup.currentPage = $event;\n        }),\n        \"page-size\": $setup.pageSize,\n        \"onUpdate:pageSize\": _cache[4] || (_cache[4] = function ($event) {\n          return $setup.pageSize = $event;\n        }),\n        \"page-sizes\": [10, 20, 50, 100],\n        layout: \"total, sizes, prev, pager, next, jumper\",\n        total: $setup.total,\n        onSizeChange: $setup.handleSizeChange,\n        onCurrentChange: $setup.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])])];\n    }),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 添加/编辑角色对话框 \"), _createVNode(_component_el_dialog, {\n    title: $setup.dialogTitle,\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n      return $setup.dialogVisible = $event;\n    }),\n    width: \"500px\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_5, [_createVNode(_component_el_button, {\n        onClick: _cache[9] || (_cache[9] = function ($event) {\n          return $setup.dialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[21] || (_cache[21] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.handleSubmit\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[22] || (_cache[22] = [_createTextVNode(\"确定\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        model: $setup.roleForm,\n        rules: $setup.rules,\n        ref: \"roleFormRef\",\n        \"label-width\": \"100px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"角色名称\",\n            prop: \"roleName\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.roleForm.roleName,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                  return $setup.roleForm.roleName = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"角色编码\",\n            prop: \"roleCode\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.roleForm.roleCode,\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                  return $setup.roleForm.roleCode = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"描述\",\n            prop: \"description\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.roleForm.description,\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                  return $setup.roleForm.description = $event;\n                }),\n                type: \"textarea\",\n                rows: 2\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"状态\",\n            prop: \"status\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_switch, {\n                modelValue: $setup.roleForm.status,\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n                  return $setup.roleForm.status = $event;\n                })\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"]), _createCommentVNode(\" 权限分配对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.permissionDialogVisible,\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = function ($event) {\n      return $setup.permissionDialogVisible = $event;\n    }),\n    title: '分配权限 - ' + $setup.currentRole.roleName,\n    width: \"50%\"\n  }, {\n    footer: _withCtx(function () {\n      return [_createElementVNode(\"span\", _hoisted_8, [_createVNode(_component_el_button, {\n        onClick: _cache[11] || (_cache[11] = function ($event) {\n          return $setup.permissionDialogVisible = false;\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[23] || (_cache[23] = [_createTextVNode(\"取消\")]);\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.handleSavePermissions\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[24] || (_cache[24] = [_createTextVNode(\"确定\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_tree, {\n        ref: \"permissionTree\",\n        data: $setup.permissionTreeData,\n        props: $setup.defaultProps,\n        \"show-checkbox\": \"\",\n        \"node-key\": \"id\",\n        \"default-checked-keys\": $setup.selectedPermissions,\n        onCheck: $setup.handlePermissionChange\n      }, {\n        \"default\": _withCtx(function (_ref) {\n          var data = _ref.data;\n          return [_createElementVNode(\"span\", _hoisted_6, [_createElementVNode(\"span\", null, _toDisplayString(data.permissionName), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(data.permissionCode), 1 /* TEXT */)])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\", \"default-checked-keys\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"title\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_button","type","disabled","$setup","selectedRoles","length","onClick","handleBatchDelete","_cache","_createTextVNode","_","handleAdd","_component_el_form","inline","model","searchForm","_component_el_form_item","label","_component_el_input","modelValue","roleName","$event","placeholder","clearable","roleCode","_component_el_select","status","_component_el_option","value","handleSearch","handleReset","_component_el_table","data","roles","style","onSelectionChange","handleSelectionChange","_component_el_table_column","width","prop","scope","_component_el_tag","row","_toDisplayString","size","handleEdit","handleAssignPermissions","handleDelete","_hoisted_4","_component_el_pagination","currentPage","pageSize","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_createCommentVNode","_component_el_dialog","title","dialogTitle","dialogVisible","footer","_hoisted_5","handleSubmit","roleForm","rules","ref","description","rows","_component_el_switch","permissionDialogVisible","currentRole","_hoisted_8","handleSavePermissions","_component_el_tree","permissionTreeData","props","defaultProps","selectedPermissions","onCheck","handlePermissionChange","_ref","_hoisted_6","permissionName","_hoisted_7","permissionCode"],"sources":["C:\\Users\\indexae\\Desktop\\scm退货\\scm\\frontend\\src\\views\\RoleManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"role-manage\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>角色管理</span>\r\n          <div class=\"header-buttons\">\r\n            <el-button type=\"danger\" :disabled=\"!selectedRoles.length\" @click=\"handleBatchDelete\">批量删除</el-button>\r\n            <el-button type=\"primary\" @click=\"handleAdd\">添加角色</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 搜索表单 -->\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\r\n        <el-form-item label=\"角色名称\">\r\n          <el-input v-model=\"searchForm.roleName\" placeholder=\"请输入角色名称\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色编码\">\r\n          <el-input v-model=\"searchForm.roleCode\" placeholder=\"请输入角色编码\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"searchForm.status\" placeholder=\"请选择状态\" clearable>\r\n            <el-option label=\"启用\" :value=\"true\" />\r\n            <el-option label=\"禁用\" :value=\"false\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button @click=\"handleReset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <!-- 角色列表 -->\r\n      <el-table \r\n        :data=\"roles\" \r\n        style=\"width: 100%\"\r\n        @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n        <el-table-column prop=\"roleName\" label=\"角色名称\" />\r\n        <el-table-column prop=\"roleCode\" label=\"角色编码\" />\r\n        <el-table-column prop=\"description\" label=\"描述\" />\r\n        <el-table-column prop=\"status\" label=\"状态\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.status ? 'success' : 'danger'\">\r\n              {{ scope.row.status ? '启用' : '禁用' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"primary\"\r\n              @click=\"handleAssignPermissions(scope.row)\"\r\n            >分配权限</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"handleDelete(scope.row)\"\r\n            >删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑角色对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      v-model=\"dialogVisible\" \r\n      width=\"500px\">\r\n      <el-form \r\n        :model=\"roleForm\"\r\n        :rules=\"rules\" \r\n        ref=\"roleFormRef\"\r\n        label-width=\"100px\">\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"roleForm.roleName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色编码\" prop=\"roleCode\">\r\n          <el-input v-model=\"roleForm.roleCode\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"roleForm.description\" \r\n            type=\"textarea\" \r\n            :rows=\"2\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-switch v-model=\"roleForm.status\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 权限分配对话框 -->\r\n    <el-dialog\r\n      v-model=\"permissionDialogVisible\"\r\n      :title=\"'分配权限 - ' + currentRole.roleName\"\r\n      width=\"50%\"\r\n    >\r\n      <el-tree\r\n        ref=\"permissionTree\"\r\n        :data=\"permissionTreeData\"\r\n        :props=\"defaultProps\"\r\n        show-checkbox\r\n        node-key=\"id\"\r\n        :default-checked-keys=\"selectedPermissions\"\r\n        @check=\"handlePermissionChange\"\r\n      >\r\n        <template #default=\"{ data }\">\r\n          <span class=\"custom-tree-node\">\r\n            <span>{{ data.permissionName }}</span>\r\n            <span class=\"permission-code\">{{ data.permissionCode }}</span>\r\n          </span>\r\n        </template>\r\n      </el-tree>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"permissionDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSavePermissions\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { usePermissionStore } from '../stores/permission'\r\n\r\n// 获取权限store\r\nconst permissionStore = usePermissionStore()\r\n\r\n// 角色列表数据\r\nconst roles = ref([])\r\nconst total = ref(0)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst selectedRoles = ref([])\r\n\r\n// 搜索表单数据\r\nconst searchForm = ref({\r\n  roleName: '',\r\n  roleCode: '',\r\n  status: ''\r\n})\r\n\r\n// 对话框相关数据\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('添加角色')\r\nconst roleFormRef = ref(null)\r\nconst roleForm = ref({\r\n  id: null,\r\n  roleName: '',\r\n  roleCode: '',\r\n  description: '',\r\n  status: true\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  roleName: [\r\n    { required: true, message: '请输入角色名称', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n  ],\r\n  roleCode: [\r\n    { required: true, message: '请输入角色编码', trigger: 'blur' },\r\n    { pattern: /^[A-Z_]+$/, message: '角色编码只能包含大写字母和下划线', trigger: 'blur' }\r\n  ],\r\n  description: [\r\n    { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 权限分配相关数据\r\nconst permissionDialogVisible = ref(false)\r\nconst currentRole = ref({})\r\nconst selectedPermissions = ref([])\r\nconst permissionTree = ref(null)\r\n\r\n// 权限树配置\r\nconst defaultProps = {\r\n  children: 'children',\r\n  label: 'permissionName'\r\n}\r\n\r\n// 构建权限树数据\r\nconst permissionTreeData = computed(() => {\r\n  return buildPermissionTree(permissionStore.permissions)\r\n})\r\n\r\n// 构建树形结构\r\nconst buildPermissionTree = (permissions) => {\r\n  const tree = []\r\n  const map = {}\r\n  \r\n  // 首先创建所有节点的映射\r\n  permissions.forEach(permission => {\r\n    map[permission.id] = {\r\n      ...permission,\r\n      children: []\r\n    }\r\n  })\r\n  \r\n  // 构建树结构\r\n  permissions.forEach(permission => {\r\n    const node = map[permission.id]\r\n    if (permission.parentId) {\r\n      const parent = map[permission.parentId]\r\n      if (parent) {\r\n        parent.children.push(node)\r\n      } else {\r\n        tree.push(node)\r\n      }\r\n    } else {\r\n      tree.push(node)\r\n    }\r\n  })\r\n  \r\n  return tree\r\n}\r\n\r\n// 获取角色列表\r\nconst getRoles = async () => {\r\n  try {\r\n    // 构建查询参数\r\n    const params = new URLSearchParams({\r\n      page: currentPage.value,\r\n      size: pageSize.value\r\n    })\r\n    \r\n    if (searchForm.value.roleName) {\r\n      params.append('roleName', searchForm.value.roleName)\r\n    }\r\n    if (searchForm.value.roleCode) {\r\n      params.append('roleCode', searchForm.value.roleCode)\r\n    }\r\n    if (searchForm.value.status !== '') {\r\n      params.append('status', searchForm.value.status)\r\n    }\r\n    \r\n    const res = await fetch(`http://localhost:8000/api/roles?${params.toString()}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      roles.value = data.data.list || []\r\n      total.value = data.data.total || 0\r\n    } else {\r\n      ElMessage.error(data.message || '获取角色列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取角色列表失败:', error)\r\n    ElMessage.error('网络错误,请稍后重试')\r\n  }\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  getRoles()\r\n}\r\n\r\n// 重置搜索\r\nconst handleReset = () => {\r\n  searchForm.value = {\r\n    roleName: '',\r\n    roleCode: '',\r\n    status: ''\r\n  }\r\n  currentPage.value = 1\r\n  getRoles()\r\n}\r\n\r\n// 处理多选\r\nconst handleSelectionChange = (selection) => {\r\n  selectedRoles.value = selection\r\n}\r\n\r\n// 批量删除\r\nconst handleBatchDelete = () => {\r\n  if (!selectedRoles.value.length) {\r\n    ElMessage.warning('请选择要删除的角色')\r\n    return\r\n  }\r\n  \r\n  ElMessageBox.confirm(\r\n    `确定要删除选中的 ${selectedRoles.value.length} 个角色吗？`,\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      const deletePromises = selectedRoles.value.map(role => \r\n        fetch(`http://localhost:8000/api/roles/${role.id}`, {\r\n          method: 'DELETE',\r\n          credentials: 'include'\r\n        }).then(res => res.json())\r\n      )\r\n      \r\n      const results = await Promise.all(deletePromises)\r\n      const hasError = results.some(result => result.code !== 0)\r\n      \r\n      if (hasError) {\r\n        ElMessage.warning('部分角色删除失败')\r\n      } else {\r\n        ElMessage.success('删除成功')\r\n      }\r\n      getRoles()\r\n    } catch (error) {\r\n      console.error('批量删除失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  })\r\n}\r\n\r\n// 添加角色\r\nconst handleAdd = () => {\r\n  roleForm.value = {\r\n    id: null,\r\n    roleName: '',\r\n    roleCode: '',\r\n    description: '',\r\n    status: true\r\n  }\r\n  dialogTitle.value = '添加角色'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑角色\r\nconst handleEdit = (row) => {\r\n  roleForm.value = { ...row }\r\n  dialogTitle.value = '编辑角色'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 删除角色\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm(\r\n    '确定要删除该角色吗？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/roles/${row.id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      })\r\n      const data = await res.json()\r\n      if (data.code === 0) {\r\n        ElMessage.success('删除成功')\r\n        getRoles()\r\n      } else {\r\n        ElMessage.error(data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除角色失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  })\r\n}\r\n\r\n// 打开权限分配对话框\r\nconst handleAssignPermissions = (role) => {\r\n  currentRole.value = role\r\n  // 获取角色当前的权限\r\n  selectedPermissions.value = permissionStore.rolePermissions[role.roleCode] || []\r\n  permissionDialogVisible.value = true\r\n}\r\n\r\n// 处理权限变更\r\nconst handlePermissionChange = () => {\r\n  const checkedNodes = permissionTree.value.getCheckedNodes()\r\n  selectedPermissions.value = checkedNodes.map(node => node.permissionCode)\r\n}\r\n\r\n// 保存权限配置\r\nconst handleSavePermissions = () => {\r\n  permissionStore.updateRolePermissions(currentRole.value.roleCode, selectedPermissions.value)\r\n  ElMessage.success('权限配置已保存')\r\n  permissionDialogVisible.value = false\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!roleFormRef.value) return\r\n  \r\n  try {\r\n    await roleFormRef.value.validate()\r\n    \r\n    const url = roleForm.value.id \r\n      ? `http://localhost:8000/api/roles/${roleForm.value.id}`\r\n      : 'http://localhost:8000/api/roles'\r\n    const method = roleForm.value.id ? 'PUT' : 'POST'\r\n    \r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(roleForm.value)\r\n    })\r\n    \r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      ElMessage.success(roleForm.value.id ? '更新成功' : '添加成功')\r\n      dialogVisible.value = false\r\n      getRoles()\r\n    } else {\r\n      ElMessage.error(data.message || (roleForm.value.id ? '更新失败' : '添加失败'))\r\n    }\r\n  } catch (error) {\r\n    if (error.name === 'ValidationError') {\r\n      ElMessage.error('请检查表单填写是否正确')\r\n    } else {\r\n      console.error('提交表单失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  }\r\n}\r\n\r\n// 分页大小改变\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  getRoles()\r\n}\r\n\r\n// 当前页改变\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  getRoles()\r\n}\r\n\r\nonMounted(() => {\r\n  getRoles()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.role-manage {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}