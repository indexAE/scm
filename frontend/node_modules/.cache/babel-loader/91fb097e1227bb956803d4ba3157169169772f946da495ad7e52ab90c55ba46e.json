{"ast":null,"code":"import \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineStore } from 'pinia';\n\n// 定义权限状态管理\nexport var usePermissionStore = defineStore('permission', {\n  state: function state() {\n    return {\n      // 所有权限列表\n      permissions: [],\n      // 角色权限映射\n      rolePermissions: {\n        admin: ['*'],\n        // 管理员拥有所有权限\n        user: ['VIEW_DASHBOARD', 'VIEW_PROFILE'] // 普通用户基础权限\n      },\n      // 当前用户权限\n      userPermissions: [],\n      // 当前用户角色\n      userRole: ''\n    };\n  },\n  getters: {\n    // 检查是否有指定权限\n    hasPermission: function hasPermission(state) {\n      return function (permission) {\n        if (state.userRole === 'admin') return true;\n        return state.userPermissions.includes(permission);\n      };\n    },\n    // 检查是否有指定权限中的任意一个\n    hasAnyPermission: function hasAnyPermission(state) {\n      return function (permissions) {\n        if (state.userRole === 'admin') return true;\n        return permissions.some(function (permission) {\n          return state.userPermissions.includes(permission);\n        });\n      };\n    },\n    // 检查是否有指定的所有权限\n    hasAllPermissions: function hasAllPermissions(state) {\n      return function (permissions) {\n        if (state.userRole === 'admin') return true;\n        return permissions.every(function (permission) {\n          return state.userPermissions.includes(permission);\n        });\n      };\n    }\n  },\n  actions: {\n    // 初始化权限数据\n    initPermissions: function initPermissions() {\n      // 从localStorage获取用户角色\n      var role = localStorage.getItem('userRole') || 'user';\n      this.userRole = role;\n\n      // 获取角色对应的权限\n      var permissions = this.rolePermissions[role] || [];\n      this.userPermissions = permissions;\n\n      // 保存到localStorage\n      localStorage.setItem('userPermissions', JSON.stringify(permissions));\n    },\n    // 更新用户角色和权限\n    updateUserRole: function updateUserRole(role) {\n      this.userRole = role;\n      this.userPermissions = this.rolePermissions[role] || [];\n\n      // 更新localStorage\n      localStorage.setItem('userRole', role);\n      localStorage.setItem('userPermissions', JSON.stringify(this.userPermissions));\n    },\n    // 添加权限\n    addPermission: function addPermission(permission) {\n      if (!this.permissions.includes(permission)) {\n        this.permissions.push(permission);\n      }\n    },\n    // 移除权限\n    removePermission: function removePermission(permission) {\n      var index = this.permissions.indexOf(permission);\n      if (index > -1) {\n        this.permissions.splice(index, 1);\n      }\n    },\n    // 为角色添加权限\n    addRolePermission: function addRolePermission(role, permission) {\n      if (!this.rolePermissions[role]) {\n        this.rolePermissions[role] = [];\n      }\n      if (!this.rolePermissions[role].includes(permission)) {\n        this.rolePermissions[role].push(permission);\n      }\n    },\n    // 为角色移除权限\n    removeRolePermission: function removeRolePermission(role, permission) {\n      if (this.rolePermissions[role]) {\n        var index = this.rolePermissions[role].indexOf(permission);\n        if (index > -1) {\n          this.rolePermissions[role].splice(index, 1);\n        }\n      }\n    },\n    // 清除权限数据\n    clearPermissions: function clearPermissions() {\n      this.permissions = [];\n      this.userPermissions = [];\n      this.userRole = 'user';\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('userPermissions');\n    }\n  }\n});","map":{"version":3,"names":["defineStore","usePermissionStore","state","permissions","rolePermissions","admin","user","userPermissions","userRole","getters","hasPermission","permission","includes","hasAnyPermission","some","hasAllPermissions","every","actions","initPermissions","role","localStorage","getItem","setItem","JSON","stringify","updateUserRole","addPermission","push","removePermission","index","indexOf","splice","addRolePermission","removeRolePermission","clearPermissions","removeItem"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/stores/permission.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\n// 定义权限状态管理\r\nexport const usePermissionStore = defineStore('permission', {\r\n  state: () => ({\r\n    // 所有权限列表\r\n    permissions: [],\r\n    // 角色权限映射\r\n    rolePermissions: {\r\n      admin: ['*'], // 管理员拥有所有权限\r\n      user: ['VIEW_DASHBOARD', 'VIEW_PROFILE'], // 普通用户基础权限\r\n    },\r\n    // 当前用户权限\r\n    userPermissions: [],\r\n    // 当前用户角色\r\n    userRole: '',\r\n  }),\r\n\r\n  getters: {\r\n    // 检查是否有指定权限\r\n    hasPermission: (state) => (permission) => {\r\n      if (state.userRole === 'admin') return true\r\n      return state.userPermissions.includes(permission)\r\n    },\r\n    \r\n    // 检查是否有指定权限中的任意一个\r\n    hasAnyPermission: (state) => (permissions) => {\r\n      if (state.userRole === 'admin') return true\r\n      return permissions.some(permission => state.userPermissions.includes(permission))\r\n    },\r\n    \r\n    // 检查是否有指定的所有权限\r\n    hasAllPermissions: (state) => (permissions) => {\r\n      if (state.userRole === 'admin') return true\r\n      return permissions.every(permission => state.userPermissions.includes(permission))\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // 初始化权限数据\r\n    initPermissions() {\r\n      // 从localStorage获取用户角色\r\n      const role = localStorage.getItem('userRole') || 'user'\r\n      this.userRole = role\r\n      \r\n      // 获取角色对应的权限\r\n      const permissions = this.rolePermissions[role] || []\r\n      this.userPermissions = permissions\r\n      \r\n      // 保存到localStorage\r\n      localStorage.setItem('userPermissions', JSON.stringify(permissions))\r\n    },\r\n\r\n    // 更新用户角色和权限\r\n    updateUserRole(role) {\r\n      this.userRole = role\r\n      this.userPermissions = this.rolePermissions[role] || []\r\n      \r\n      // 更新localStorage\r\n      localStorage.setItem('userRole', role)\r\n      localStorage.setItem('userPermissions', JSON.stringify(this.userPermissions))\r\n    },\r\n\r\n    // 添加权限\r\n    addPermission(permission) {\r\n      if (!this.permissions.includes(permission)) {\r\n        this.permissions.push(permission)\r\n      }\r\n    },\r\n\r\n    // 移除权限\r\n    removePermission(permission) {\r\n      const index = this.permissions.indexOf(permission)\r\n      if (index > -1) {\r\n        this.permissions.splice(index, 1)\r\n      }\r\n    },\r\n\r\n    // 为角色添加权限\r\n    addRolePermission(role, permission) {\r\n      if (!this.rolePermissions[role]) {\r\n        this.rolePermissions[role] = []\r\n      }\r\n      if (!this.rolePermissions[role].includes(permission)) {\r\n        this.rolePermissions[role].push(permission)\r\n      }\r\n    },\r\n\r\n    // 为角色移除权限\r\n    removeRolePermission(role, permission) {\r\n      if (this.rolePermissions[role]) {\r\n        const index = this.rolePermissions[role].indexOf(permission)\r\n        if (index > -1) {\r\n          this.rolePermissions[role].splice(index, 1)\r\n        }\r\n      }\r\n    },\r\n\r\n    // 清除权限数据\r\n    clearPermissions() {\r\n      this.permissions = []\r\n      this.userPermissions = []\r\n      this.userRole = 'user'\r\n      localStorage.removeItem('userRole')\r\n      localStorage.removeItem('userPermissions')\r\n    }\r\n  }\r\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}