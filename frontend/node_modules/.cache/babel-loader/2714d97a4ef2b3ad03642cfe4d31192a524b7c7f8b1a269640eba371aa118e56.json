{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"profile\"\n};\nvar _hoisted_2 = {\n  \"class\": \"avatar-upload\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_avatar = _resolveComponent(\"el-avatar\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_upload = _resolveComponent(\"el-upload\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createElementVNode(\"div\", {\n        \"class\": \"card-header\"\n      }, [_createElementVNode(\"span\", null, \"个人信息\")], -1 /* HOISTED */)]);\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        model: $setup.profileForm,\n        \"label-width\": \"100px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"头像\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_avatar, {\n                size: 100,\n                src: $setup.profileForm.avatar || 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\n                \"class\": \"preview-avatar\"\n              }, null, 8 /* PROPS */, [\"src\"]), _createVNode(_component_el_upload, {\n                \"class\": \"avatar-uploader\",\n                action: \"/api/upload/avatar\",\n                \"show-file-list\": false,\n                \"on-success\": _ctx.handleAvatarSuccess,\n                \"before-upload\": _ctx.beforeAvatarUpload,\n                accept: \"image/jpeg,image/png,image/gif\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_button, {\n                    type: \"primary\",\n                    \"class\": \"upload-btn\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return _cache[6] || (_cache[6] = [_createTextVNode(\"更换头像\")]);\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"on-success\", \"before-upload\"])])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"用户名\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.username,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.profileForm.username = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"角色类型\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.roleName,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.profileForm.roleName = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"原密码\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.oldPassword,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.profileForm.oldPassword = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入原密码\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"新密码\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.newPassword,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.profileForm.newPassword = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入新密码\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"确认新密码\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.confirmPassword,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                  return $setup.profileForm.confirmPassword = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请再次输入新密码\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleSubmit\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[7] || (_cache[7] = [_createTextVNode(\"保存修改\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","_component_el_form","model","$setup","profileForm","_component_el_form_item","label","_hoisted_2","_component_el_avatar","size","src","avatar","_component_el_upload","action","_ctx","handleAvatarSuccess","beforeAvatarUpload","accept","_component_el_button","type","_createTextVNode","_","_component_el_input","modelValue","username","$event","disabled","roleName","oldPassword","placeholder","newPassword","confirmPassword","onClick","handleSubmit"],"sources":["C:\\Users\\indexae\\Desktop\\scm退货\\scm\\frontend\\src\\views\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>个人信息</span>\n        </div>\n      </template>\n      \n      <el-form :model=\"profileForm\" label-width=\"100px\">\n        <el-form-item label=\"头像\">\n          <div class=\"avatar-upload\">\n            <el-avatar \n              :size=\"100\" \n              :src=\"profileForm.avatar || 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png'\"\n              class=\"preview-avatar\"\n            />\n            <el-upload\n              class=\"avatar-uploader\"\n              action=\"/api/upload/avatar\"\n              :show-file-list=\"false\"\n              :on-success=\"handleAvatarSuccess\"\n              :before-upload=\"beforeAvatarUpload\"\n              accept=\"image/jpeg,image/png,image/gif\"\n            >\n              <el-button type=\"primary\" class=\"upload-btn\">更换头像</el-button>\n            </el-upload>\n          </div>\n        </el-form-item>\n\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"profileForm.username\" disabled />\n        </el-form-item>\n        \n        <el-form-item label=\"角色类型\">\n          <el-input v-model=\"profileForm.roleName\" disabled />\n        </el-form-item>\n        \n        <el-form-item label=\"原密码\">\n          <el-input v-model=\"profileForm.oldPassword\" type=\"password\" placeholder=\"请输入原密码\" />\n        </el-form-item>\n        \n        <el-form-item label=\"新密码\">\n          <el-input v-model=\"profileForm.newPassword\" type=\"password\" placeholder=\"请输入新密码\" />\n        </el-form-item>\n        \n        <el-form-item label=\"确认新密码\">\n          <el-input v-model=\"profileForm.confirmPassword\" type=\"password\" placeholder=\"请再次输入新密码\" />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSubmit\">保存修改</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport { useSettingsStore } from '../stores/settings'\n\nconst profileForm = ref({\n  username: '',\n  roleName: '',\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\n\nconst router = useRouter()\nconst settingsStore = useSettingsStore()\n\n// 获取个人信息\nconst getProfile = async () => {\n  try {\n    const userId = localStorage.getItem('userId')\n    if (!userId) {\n      ElMessage.error('请先登录')\n      router.push('/login')\n      return\n    }\n\n    // 获取用户基本信息和角色信息\n    const userRes = await fetch(`http://localhost:8080/api/users/${userId}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const userData = await userRes.json()\n    console.log('用户数据:', userData)\n    \n    if (userData.code === 0) {\n      profileForm.value.username = userData.data.username\n      profileForm.value.roleName = userData.data.role || userData.data.roleName || '管理员'\n    } else {\n      ElMessage.error(userData.message || '获取用户信息失败')\n    }\n  } catch (error) {\n    console.error('获取个人信息失败:', error)\n    ElMessage.error('获取个人信息失败')\n  }\n}\n\n// 提交修改\nconst handleSubmit = async () => {\n  // 表单验证\n  if (!profileForm.value.oldPassword) {\n    ElMessage.error('请输入原密码')\n    return\n  }\n  if (!profileForm.value.newPassword) {\n    ElMessage.error('请输入新密码')\n    return\n  }\n  if (!profileForm.value.confirmPassword) {\n    ElMessage.error('请确认新密码')\n    return\n  }\n  \n  // 验证新密码长度\n  if (profileForm.value.newPassword.length < settingsStore.passwordMinLength) {\n    ElMessage.error(`新密码长度不能小于${settingsStore.passwordMinLength}位`)\n    return\n  }\n  \n  // 验证新密码\n  if (profileForm.value.newPassword !== profileForm.value.confirmPassword) {\n    ElMessage.error('两次输入的新密码不一致')\n    return\n  }\n\n  try {\n    const userId = localStorage.getItem('userId')\n    if (!userId) {\n      ElMessage.error('请先登录')\n      router.push('/login')\n      return\n    }\n\n    const res = await fetch(`http://localhost:8080/api/users/${userId}/password`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        oldPassword: profileForm.value.oldPassword,\n        newPassword: profileForm.value.newPassword\n      })\n    })\n    \n    const data = await res.json()\n    if (data.code === 0) {\n      ElMessage.success('密码修改成功')\n      // 清空表单\n      profileForm.value.oldPassword = ''\n      profileForm.value.newPassword = ''\n      profileForm.value.confirmPassword = ''\n    } else {\n      ElMessage.error(data.message || '修改密码失败')\n    }\n  } catch (error) {\n    console.error('修改密码失败:', error)\n    ElMessage.error('修改密码失败')\n  }\n}\n\nonMounted(() => {\n  getProfile()\n})\n</script>\n\n<style scoped>\n.profile {\n  padding: 20px;\n}\n\n.box-card {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.avatar-upload {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n}\n\n.preview-avatar {\n  border: 2px solid #dcdfe6;\n}\n\n.upload-btn {\n  margin-top: 8px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}