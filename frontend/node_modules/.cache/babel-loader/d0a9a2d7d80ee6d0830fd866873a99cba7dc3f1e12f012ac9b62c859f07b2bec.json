{"ast":null,"code":"import _objectSpread from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  __name: 'form',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var route = useRoute();\n    var router = useRouter();\n    var formRef = ref(null);\n\n    // 页面模式\n    var mode = computed(function () {\n      return route.query.mode || 'add';\n    });\n    var isEdit = computed(function () {\n      return mode.value === 'edit';\n    });\n    var isView = computed(function () {\n      return mode.value === 'view';\n    });\n\n    // 页面标题\n    var getPageTitle = computed(function () {\n      var titles = {\n        add: '新建入库单',\n        edit: '编辑入库单',\n        view: '查看入库单'\n      };\n      return titles[mode.value] || titles.add;\n    });\n\n    // 表单数据\n    var form = reactive({\n      orderId: '',\n      orderCode: '',\n      warehouseId: '',\n      warehouse: '',\n      handlerId: '',\n      handler: '',\n      remark: '',\n      items: []\n    });\n\n    // 表单验证规则\n    var rules = {\n      orderId: [{\n        required: true,\n        message: '请选择采购订单',\n        trigger: 'change'\n      }],\n      warehouseId: [{\n        required: true,\n        message: '请选择入库仓库',\n        trigger: 'change'\n      }],\n      handlerId: [{\n        required: true,\n        message: '请选择经办人',\n        trigger: 'change'\n      }]\n    };\n\n    // 仓库列表\n    var warehouses = ref([]);\n    // 经办人列表\n    var handlers = ref([]);\n    // 可选的采购订单列表\n    var orderOptions = ref([]);\n\n    // 获取仓库列表\n    var getWarehouses = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, data, _data$data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://127.0.0.1:8080/api/warehouses?status=normal', {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 3:\n              res = _context.sent;\n              console.log('仓库列表API响应:', res);\n              _context.next = 7;\n              return res.json();\n            case 7:\n              data = _context.sent;\n              console.log('仓库列表数据:', data);\n              if (data.code === 0) {\n                warehouses.value = ((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.list) || [];\n              } else {\n                console.error('获取仓库列表失败:', data.message);\n                ElMessage.error(data.message || '获取仓库列表失败');\n              }\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取仓库列表失败:', _context.t0);\n              ElMessage.error('获取仓库列表失败');\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n      return function getWarehouses() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取经办人列表\n    var getHandlers = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res, data, _data$data2;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('http://127.0.0.1:8080/api/handlers?status=enabled', {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 3:\n              res = _context2.sent;\n              console.log('经办人列表API响应:', res);\n              _context2.next = 7;\n              return res.json();\n            case 7:\n              data = _context2.sent;\n              console.log('经办人列表数据:', data);\n              if (data.code === 0) {\n                handlers.value = ((_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.list) || [];\n              } else {\n                console.error('获取经办人列表失败:', data.message);\n                ElMessage.error(data.message || '获取经办人列表失败');\n              }\n              _context2.next = 16;\n              break;\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取经办人列表失败:', _context2.t0);\n              ElMessage.error('获取经办人列表失败');\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 12]]);\n      }));\n      return function getHandlers() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 获取可入库的采购订单列表\n    var getAvailableOrders = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              console.log('开始获取可入库的采购订单列表');\n              _context3.next = 4;\n              return fetch('http://127.0.0.1:8080/api/purchase/orders/available-for-inbound', {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 4:\n              res = _context3.sent;\n              console.log('采购订单API响应:', res);\n              _context3.next = 8;\n              return res.json();\n            case 8:\n              data = _context3.sent;\n              console.log('采购订单数据:', data);\n              if (data.code === 0) {\n                orderOptions.value = data.data || [];\n                console.log('采购订单列表设置完成:', orderOptions.value);\n                if (orderOptions.value.length === 0) {\n                  ElMessage.warning('没有可入库的采购订单');\n                }\n              } else {\n                console.error('获取采购订单列表失败:', data.message);\n                ElMessage.error(data.message || '获取采购订单列表失败');\n              }\n              _context3.next = 17;\n              break;\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('获取采购订单列表失败:', _context3.t0);\n              ElMessage.error('获取采购订单列表失败');\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 13]]);\n      }));\n      return function getAvailableOrders() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 选择采购订单时的处理\n    var handleOrderChange = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(orderId) {\n        var res, data, order, items;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (orderId) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.prev = 2;\n              console.log('开始获取订单明细, orderId:', orderId);\n              _context4.next = 6;\n              return fetch(\"http://127.0.0.1:8080/api/purchase/orders/\".concat(orderId), {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 6:\n              res = _context4.sent;\n              console.log('订单明细API响应:', res);\n              _context4.next = 10;\n              return res.json();\n            case 10:\n              data = _context4.sent;\n              console.log('订单明细数据:', data);\n              if (data.code === 0) {\n                order = data.data;\n                console.log('订单数据:', order);\n                form.orderCode = order.code;\n                // 确保items存在且是数组\n                items = order.items || [];\n                form.items = items.map(function (item) {\n                  return _objectSpread(_objectSpread({}, item), {}, {\n                    orderQuantity: item.quantity,\n                    quantity: item.quantity,\n                    productName: item.productName || item.name\n                  });\n                });\n              } else {\n                console.error('获取订单明细失败:', data.message);\n                ElMessage.error(data.message || '获取订单明细失败');\n              }\n              _context4.next = 19;\n              break;\n            case 15:\n              _context4.prev = 15;\n              _context4.t0 = _context4[\"catch\"](2);\n              console.error('获取订单明细失败:', _context4.t0);\n              ElMessage.error('获取订单明细失败');\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2, 15]]);\n      }));\n      return function handleOrderChange(_x) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 处理仓库选择变化\n    var handleWarehouseChange = function handleWarehouseChange(warehouseId) {\n      var warehouse = warehouses.value.find(function (item) {\n        return item.id === warehouseId;\n      });\n      if (warehouse) {\n        form.warehouse = warehouse.name;\n      }\n    };\n\n    // 处理经办人选择变化\n    var handleHandlerChange = function handleHandlerChange(handlerId) {\n      var handler = handlers.value.find(function (item) {\n        return item.id === handlerId;\n      });\n      if (handler) {\n        form.handler = handler.name;\n      }\n    };\n\n    // 格式化金额\n    var formatAmount = function formatAmount(amount) {\n      if (!amount) return '0.00';\n      return Number(amount).toFixed(2);\n    };\n\n    // 计算总金额\n    var totalAmount = computed(function () {\n      return form.items.reduce(function (sum, item) {\n        return sum + (item.price * item.quantity || 0);\n      }, 0);\n    });\n\n    // 提交表单\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (formRef.value) {\n                _context6.next = 2;\n                break;\n              }\n              return _context6.abrupt(\"return\");\n            case 2:\n              _context6.next = 4;\n              return formRef.value.validate(/*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(valid) {\n                  var submitData, url, method, res, data;\n                  return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                    while (1) switch (_context5.prev = _context5.next) {\n                      case 0:\n                        if (!valid) {\n                          _context5.next = 24;\n                          break;\n                        }\n                        if (!(form.items.length === 0)) {\n                          _context5.next = 4;\n                          break;\n                        }\n                        ElMessage.warning('请选择采购订单');\n                        return _context5.abrupt(\"return\");\n                      case 4:\n                        _context5.prev = 4;\n                        // 构造提交的数据\n                        submitData = {\n                          orderId: form.orderId,\n                          orderCode: form.orderCode,\n                          warehouseId: form.warehouseId,\n                          warehouse: form.warehouse,\n                          handlerId: form.handlerId,\n                          handler: form.handler,\n                          remark: form.remark,\n                          items: form.items.map(function (item) {\n                            return {\n                              orderId: form.orderId,\n                              orderItemId: item.id,\n                              productId: item.productId,\n                              productName: item.productName,\n                              productSpec: item.productSpec,\n                              unit: item.unit,\n                              orderQuantity: item.orderQuantity,\n                              quantity: item.quantity,\n                              price: Number(item.price),\n                              amount: Number((item.price * item.quantity).toFixed(2))\n                            };\n                          }),\n                          amount: Number(totalAmount.value.toFixed(2))\n                        };\n                        console.log('准备提交入库单数据:', submitData);\n                        url = isEdit.value ? \"http://127.0.0.1:8080/api/purchase/inbounds/\".concat(route.query.id) : 'http://127.0.0.1:8080/api/purchase/inbounds';\n                        method = isEdit.value ? 'PUT' : 'POST';\n                        _context5.next = 11;\n                        return fetch(url, {\n                          method: method,\n                          headers: {\n                            'Content-Type': 'application/json',\n                            'Accept': 'application/json'\n                          },\n                          credentials: 'include',\n                          body: JSON.stringify(submitData)\n                        });\n                      case 11:\n                        res = _context5.sent;\n                        console.log('入库单提交响应:', res);\n                        _context5.next = 15;\n                        return res.json();\n                      case 15:\n                        data = _context5.sent;\n                        console.log('入库单提交结果:', data);\n                        if (data.code === 0) {\n                          ElMessage.success(isEdit.value ? '更新成功' : '创建成功');\n                          router.push('/dashboard/purchase/inbound');\n                        } else {\n                          console.error('提交失败:', data);\n                          ElMessage.error(data.message || (isEdit.value ? '更新失败' : '创建失败'));\n                        }\n                        _context5.next = 24;\n                        break;\n                      case 20:\n                        _context5.prev = 20;\n                        _context5.t0 = _context5[\"catch\"](4);\n                        console.error(isEdit.value ? '更新入库单失败:' : '创建入库单失败:', _context5.t0);\n                        ElMessage.error(_context5.t0.message || (isEdit.value ? '更新失败' : '创建失败'));\n                      case 24:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }, _callee5, null, [[4, 20]]);\n                }));\n                return function (_x2) {\n                  return _ref7.apply(this, arguments);\n                };\n              }());\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }));\n      return function handleSubmit() {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // 取消\n    var handleCancel = function handleCancel() {\n      ElMessageBox.confirm('确认放弃当前编辑的内容？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        router.push('/dashboard/purchase/inbound');\n      })[\"catch\"](function () {});\n    };\n\n    // 获取入库单详情\n    var getInboundDetail = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(id) {\n        var res, data, inbound;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              console.log('开始获取入库单详情, id:', id);\n              _context7.next = 4;\n              return fetch(\"http://127.0.0.1:8080/api/purchase/inbounds/\".concat(id), {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 4:\n              res = _context7.sent;\n              console.log('入库单详情API响应:', res);\n              _context7.next = 8;\n              return res.json();\n            case 8:\n              data = _context7.sent;\n              console.log('入库单详情数据:', data);\n              if (data.code === 0) {\n                inbound = data.data;\n                console.log('入库单数据:', inbound);\n\n                // 填充表单数据\n                form.orderId = inbound.orderId;\n                form.orderCode = inbound.orderCode;\n                form.warehouseId = inbound.warehouseId;\n                form.warehouse = inbound.warehouse;\n                form.handlerId = inbound.handlerId;\n                form.handler = inbound.handler;\n                form.remark = inbound.remark;\n                form.items = inbound.items.map(function (item) {\n                  return _objectSpread(_objectSpread({}, item), {}, {\n                    orderQuantity: item.orderQuantity || item.quantity,\n                    quantity: item.quantity,\n                    amount: item.price * item.quantity\n                  });\n                });\n                console.log('表单数据设置完成:', form);\n              } else {\n                console.error('获取入库单详情失败:', data.message);\n                ElMessage.error(data.message || '获取入库单详情失败');\n              }\n              _context7.next = 17;\n              break;\n            case 13:\n              _context7.prev = 13;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.error('获取入库单详情失败:', _context7.t0);\n              ElMessage.error('获取入库单详情失败');\n            case 17:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, null, [[0, 13]]);\n      }));\n      return function getInboundDetail(_x3) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    // 在组件挂载时获取数据\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n      var id;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            id = route.query.id;\n            if (!(id && (isEdit.value || isView.value))) {\n              _context8.next = 4;\n              break;\n            }\n            _context8.next = 4;\n            return getInboundDetail(id);\n          case 4:\n            _context8.next = 6;\n            return Promise.all([getWarehouses(), getHandlers(), getAvailableOrders()]);\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    })));\n    var __returned__ = {\n      route: route,\n      router: router,\n      formRef: formRef,\n      mode: mode,\n      isEdit: isEdit,\n      isView: isView,\n      getPageTitle: getPageTitle,\n      form: form,\n      rules: rules,\n      warehouses: warehouses,\n      handlers: handlers,\n      orderOptions: orderOptions,\n      getWarehouses: getWarehouses,\n      getHandlers: getHandlers,\n      getAvailableOrders: getAvailableOrders,\n      handleOrderChange: handleOrderChange,\n      handleWarehouseChange: handleWarehouseChange,\n      handleHandlerChange: handleHandlerChange,\n      formatAmount: formatAmount,\n      totalAmount: totalAmount,\n      handleSubmit: handleSubmit,\n      handleCancel: handleCancel,\n      getInboundDetail: getInboundDetail,\n      ref: ref,\n      reactive: reactive,\n      computed: computed,\n      onMounted: onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useRoute","useRouter","ElMessage","ElMessageBox","route","router","formRef","mode","query","isEdit","value","isView","getPageTitle","titles","add","edit","view","form","orderId","orderCode","warehouseId","warehouse","handlerId","handler","remark","items","rules","required","message","trigger","warehouses","handlers","orderOptions","getWarehouses","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","_data$data","wrap","_callee$","_context","prev","next","fetch","headers","credentials","sent","console","log","json","code","list","error","t0","stop","apply","arguments","getHandlers","_ref3","_callee2","_data$data2","_callee2$","_context2","getAvailableOrders","_ref4","_callee3","_callee3$","_context3","length","warning","handleOrderChange","_ref5","_callee4","order","_callee4$","_context4","abrupt","concat","map","item","_objectSpread","orderQuantity","quantity","productName","name","_x","handleWarehouseChange","find","id","handleHandlerChange","formatAmount","amount","Number","toFixed","totalAmount","reduce","sum","price","handleSubmit","_ref6","_callee6","_callee6$","_context6","validate","_ref7","_callee5","valid","submitData","url","method","_callee5$","_context5","orderItemId","productId","productSpec","unit","body","JSON","stringify","success","push","_x2","handleCancel","confirm","confirmButtonText","cancelButtonText","type","then","getInboundDetail","_ref8","_callee7","inbound","_callee7$","_context7","_x3","_callee8","_callee8$","_context8","Promise","all"],"sources":["C:/Users/indexae/Desktop/scm日志/scm/frontend/src/views/purchase/inbound/form.vue"],"sourcesContent":["<template>\r\n  <div class=\"inbound-form\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>{{ getPageTitle }}</span>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"100px\" :disabled=\"isView\">\r\n        <!-- 基本信息 -->\r\n        <el-form-item label=\"关联订单\" prop=\"orderId\">\r\n          <el-select \r\n            v-model=\"form.orderId\" \r\n            placeholder=\"请选择采购订单\"\r\n            @change=\"handleOrderChange\"\r\n            style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"item in orderOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.code\"\r\n              :value=\"item.id\">\r\n              <span>订单编号: {{ item.code }}</span>\r\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">\r\n                供应商: {{ item.supplier }}\r\n              </span>\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"入库仓库\" prop=\"warehouseId\">\r\n          <el-select v-model=\"form.warehouseId\" placeholder=\"请选择仓库\" @change=\"handleWarehouseChange\">\r\n            <el-option\r\n              v-for=\"item in warehouses\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"经办人\" prop=\"handlerId\">\r\n          <el-select v-model=\"form.handlerId\" placeholder=\"请选择经办人\" @change=\"handleHandlerChange\">\r\n            <el-option\r\n              v-for=\"item in handlers\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input\r\n            v-model=\"form.remark\"\r\n            type=\"textarea\"\r\n            :rows=\"2\"\r\n            placeholder=\"请输入备注信息\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <!-- 商品明细 -->\r\n        <div class=\"items-section\">\r\n          <div class=\"items-header\">\r\n            <h3>商品明细</h3>\r\n          </div>\r\n\r\n          <el-table :data=\"form.items\" border style=\"width: 100%\">\r\n            <el-table-column prop=\"productName\" label=\"商品名称\" width=\"200\" />\r\n            <el-table-column prop=\"productSpec\" label=\"规格\" width=\"150\" />\r\n            <el-table-column prop=\"unit\" label=\"单位\" width=\"150\" />\r\n            <el-table-column prop=\"orderQuantity\" label=\"订单数量\" width=\"150\" />\r\n            <el-table-column label=\"入库数量\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <el-input-number \r\n                  v-model=\"scope.row.quantity\" \r\n                  :min=\"1\"\r\n                  :max=\"scope.row.orderQuantity\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"price\" label=\"单价\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                {{ formatAmount(scope.row.price) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"amount\" label=\"金额\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                {{ formatAmount(scope.row.price * scope.row.quantity) }}\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n\r\n        <!-- 合计金额 -->\r\n        <div class=\"total-amount\">\r\n          合计金额：{{ formatAmount(totalAmount) }}\r\n        </div>\r\n\r\n        <!-- 表单操作按钮 -->\r\n        <div class=\"form-actions\">\r\n          <el-button @click=\"handleCancel\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst formRef = ref(null)\r\n\r\n// 页面模式\r\nconst mode = computed(() => route.query.mode || 'add')\r\nconst isEdit = computed(() => mode.value === 'edit')\r\nconst isView = computed(() => mode.value === 'view')\r\n\r\n// 页面标题\r\nconst getPageTitle = computed(() => {\r\n  const titles = {\r\n    add: '新建入库单',\r\n    edit: '编辑入库单',\r\n    view: '查看入库单'\r\n  }\r\n  return titles[mode.value] || titles.add\r\n})\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  orderId: '',\r\n  orderCode: '',\r\n  warehouseId: '',\r\n  warehouse: '',\r\n  handlerId: '',\r\n  handler: '',\r\n  remark: '',\r\n  items: []\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  orderId: [\r\n    { required: true, message: '请选择采购订单', trigger: 'change' }\r\n  ],\r\n  warehouseId: [\r\n    { required: true, message: '请选择入库仓库', trigger: 'change' }\r\n  ],\r\n  handlerId: [\r\n    { required: true, message: '请选择经办人', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 仓库列表\r\nconst warehouses = ref([])\r\n// 经办人列表\r\nconst handlers = ref([])\r\n// 可选的采购订单列表\r\nconst orderOptions = ref([])\r\n\r\n// 获取仓库列表\r\nconst getWarehouses = async () => {\r\n  try {\r\n    const res = await fetch('http://127.0.0.1:8080/api/warehouses?status=normal', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('仓库列表API响应:', res)\r\n    const data = await res.json()\r\n    console.log('仓库列表数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      warehouses.value = data.data?.list || []\r\n    } else {\r\n      console.error('获取仓库列表失败:', data.message)\r\n      ElMessage.error(data.message || '获取仓库列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取仓库列表失败:', error)\r\n    ElMessage.error('获取仓库列表失败')\r\n  }\r\n}\r\n\r\n// 获取经办人列表\r\nconst getHandlers = async () => {\r\n  try {\r\n    const res = await fetch('http://127.0.0.1:8080/api/handlers?status=enabled', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('经办人列表API响应:', res)\r\n    const data = await res.json()\r\n    console.log('经办人列表数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      handlers.value = data.data?.list || []\r\n    } else {\r\n      console.error('获取经办人列表失败:', data.message)\r\n      ElMessage.error(data.message || '获取经办人列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取经办人列表失败:', error)\r\n    ElMessage.error('获取经办人列表失败')\r\n  }\r\n}\r\n\r\n// 获取可入库的采购订单列表\r\nconst getAvailableOrders = async () => {\r\n  try {\r\n    console.log('开始获取可入库的采购订单列表')\r\n    const res = await fetch('http://127.0.0.1:8080/api/purchase/orders/available-for-inbound', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('采购订单API响应:', res)\r\n    const data = await res.json()\r\n    console.log('采购订单数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      orderOptions.value = data.data || []\r\n      console.log('采购订单列表设置完成:', orderOptions.value)\r\n      if (orderOptions.value.length === 0) {\r\n        ElMessage.warning('没有可入库的采购订单')\r\n      }\r\n    } else {\r\n      console.error('获取采购订单列表失败:', data.message)\r\n      ElMessage.error(data.message || '获取采购订单列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取采购订单列表失败:', error)\r\n    ElMessage.error('获取采购订单列表失败')\r\n  }\r\n}\r\n\r\n// 选择采购订单时的处理\r\nconst handleOrderChange = async (orderId) => {\r\n  if (!orderId) return\r\n  try {\r\n    console.log('开始获取订单明细, orderId:', orderId)\r\n    const res = await fetch(`http://127.0.0.1:8080/api/purchase/orders/${orderId}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('订单明细API响应:', res)\r\n    const data = await res.json()\r\n    console.log('订单明细数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      const order = data.data\r\n      console.log('订单数据:', order)\r\n      form.orderCode = order.code\r\n      // 确保items存在且是数组\r\n      const items = order.items || []\r\n      form.items = items.map(item => ({\r\n        ...item,\r\n        orderQuantity: item.quantity,\r\n        quantity: item.quantity,\r\n        productName: item.productName || item.name\r\n      }))\r\n    } else {\r\n      console.error('获取订单明细失败:', data.message)\r\n      ElMessage.error(data.message || '获取订单明细失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单明细失败:', error)\r\n    ElMessage.error('获取订单明细失败')\r\n  }\r\n}\r\n\r\n// 处理仓库选择变化\r\nconst handleWarehouseChange = (warehouseId) => {\r\n  const warehouse = warehouses.value.find(item => item.id === warehouseId)\r\n  if (warehouse) {\r\n    form.warehouse = warehouse.name\r\n  }\r\n}\r\n\r\n// 处理经办人选择变化\r\nconst handleHandlerChange = (handlerId) => {\r\n  const handler = handlers.value.find(item => item.id === handlerId)\r\n  if (handler) {\r\n    form.handler = handler.name\r\n  }\r\n}\r\n\r\n// 格式化金额\r\nconst formatAmount = (amount) => {\r\n  if (!amount) return '0.00'\r\n  return Number(amount).toFixed(2)\r\n}\r\n\r\n// 计算总金额\r\nconst totalAmount = computed(() => {\r\n  return form.items.reduce((sum, item) => sum + (item.price * item.quantity || 0), 0)\r\n})\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      if (form.items.length === 0) {\r\n        ElMessage.warning('请选择采购订单')\r\n        return\r\n      }\r\n\r\n      try {\r\n        // 构造提交的数据\r\n        const submitData = {\r\n          orderId: form.orderId,\r\n          orderCode: form.orderCode,\r\n          warehouseId: form.warehouseId,\r\n          warehouse: form.warehouse,\r\n          handlerId: form.handlerId,\r\n          handler: form.handler,\r\n          remark: form.remark,\r\n          items: form.items.map(item => ({\r\n            orderId: form.orderId,\r\n            orderItemId: item.id,\r\n            productId: item.productId,\r\n            productName: item.productName,\r\n            productSpec: item.productSpec,\r\n            unit: item.unit,\r\n            orderQuantity: item.orderQuantity,\r\n            quantity: item.quantity,\r\n            price: Number(item.price),\r\n            amount: Number((item.price * item.quantity).toFixed(2))\r\n          })),\r\n          amount: Number(totalAmount.value.toFixed(2))\r\n        }\r\n\r\n        console.log('准备提交入库单数据:', submitData)\r\n        \r\n        const url = isEdit.value \r\n          ? `http://127.0.0.1:8080/api/purchase/inbounds/${route.query.id}`\r\n          : 'http://127.0.0.1:8080/api/purchase/inbounds'\r\n        \r\n        const method = isEdit.value ? 'PUT' : 'POST'\r\n        const res = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(submitData)\r\n        })\r\n\r\n        console.log('入库单提交响应:', res)\r\n        const data = await res.json()\r\n        console.log('入库单提交结果:', data)\r\n\r\n        if (data.code === 0) {\r\n          ElMessage.success(isEdit.value ? '更新成功' : '创建成功')\r\n          router.push('/dashboard/purchase/inbound')\r\n        } else {\r\n          console.error('提交失败:', data)\r\n          ElMessage.error(data.message || (isEdit.value ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(isEdit.value ? '更新入库单失败:' : '创建入库单失败:', error)\r\n        ElMessage.error(error.message || (isEdit.value ? '更新失败' : '创建失败'))\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 取消\r\nconst handleCancel = () => {\r\n  ElMessageBox.confirm(\r\n    '确认放弃当前编辑的内容？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(() => {\r\n    router.push('/dashboard/purchase/inbound')\r\n  }).catch(() => {})\r\n}\r\n\r\n// 获取入库单详情\r\nconst getInboundDetail = async (id) => {\r\n  try {\r\n    console.log('开始获取入库单详情, id:', id)\r\n    const res = await fetch(`http://127.0.0.1:8080/api/purchase/inbounds/${id}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('入库单详情API响应:', res)\r\n    const data = await res.json()\r\n    console.log('入库单详情数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      const inbound = data.data\r\n      console.log('入库单数据:', inbound)\r\n      \r\n      // 填充表单数据\r\n      form.orderId = inbound.orderId\r\n      form.orderCode = inbound.orderCode\r\n      form.warehouseId = inbound.warehouseId\r\n      form.warehouse = inbound.warehouse\r\n      form.handlerId = inbound.handlerId\r\n      form.handler = inbound.handler\r\n      form.remark = inbound.remark\r\n      form.items = inbound.items.map(item => ({\r\n        ...item,\r\n        orderQuantity: item.orderQuantity || item.quantity,\r\n        quantity: item.quantity,\r\n        amount: item.price * item.quantity\r\n      }))\r\n      \r\n      console.log('表单数据设置完成:', form)\r\n    } else {\r\n      console.error('获取入库单详情失败:', data.message)\r\n      ElMessage.error(data.message || '获取入库单详情失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取入库单详情失败:', error)\r\n    ElMessage.error('获取入库单详情失败')\r\n  }\r\n}\r\n\r\n// 在组件挂载时获取数据\r\nonMounted(async () => {\r\n  const id = route.query.id\r\n  if (id && (isEdit.value || isView.value)) {\r\n    await getInboundDetail(id)\r\n  }\r\n  await Promise.all([\r\n    getWarehouses(),\r\n    getHandlers(),\r\n    getAvailableOrders()\r\n  ])\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.inbound-form {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.items-section {\r\n  margin: 20px 0;\r\n}\r\n\r\n.items-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.total-amount {\r\n  text-align: right;\r\n  margin: 20px 0;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n</style> "],"mappings":";;;;;;;;;;;;;;;;;;;;AA8GA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AACxD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAY;AAChD,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;;;;;;IAEtD,IAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;IACxB,IAAMK,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAC1B,IAAMK,OAAO,GAAGV,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA,IAAMW,IAAI,GAAGT,QAAQ,CAAC;MAAA,OAAMM,KAAK,CAACI,KAAK,CAACD,IAAI,IAAI,KAAK;IAAA,EAAC;IACtD,IAAME,MAAM,GAAGX,QAAQ,CAAC;MAAA,OAAMS,IAAI,CAACG,KAAK,KAAK,MAAM;IAAA,EAAC;IACpD,IAAMC,MAAM,GAAGb,QAAQ,CAAC;MAAA,OAAMS,IAAI,CAACG,KAAK,KAAK,MAAM;IAAA,EAAC;;IAEpD;IACA,IAAME,YAAY,GAAGd,QAAQ,CAAC,YAAM;MAClC,IAAMe,MAAM,GAAG;QACbC,GAAG,EAAE,OAAO;QACZC,IAAI,EAAE,OAAO;QACbC,IAAI,EAAE;MACR,CAAC;MACD,OAAOH,MAAM,CAACN,IAAI,CAACG,KAAK,CAAC,IAAIG,MAAM,CAACC,GAAG;IACzC,CAAC,CAAC;;IAEF;IACA,IAAMG,IAAI,GAAGpB,QAAQ,CAAC;MACpBqB,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,EAAE;MACfC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE;IACT,CAAC,CAAC;;IAEF;IACA,IAAMC,KAAK,GAAG;MACZR,OAAO,EAAE,CACP;QAAES,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAS,CAAC,CAC1D;MACDT,WAAW,EAAE,CACX;QAAEO,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAS,CAAC,CAC1D;MACDP,SAAS,EAAE,CACT;QAAEK,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAS,CAAC;IAE5D,CAAC;;IAED;IACA,IAAMC,UAAU,GAAGlC,GAAG,CAAC,EAAE,CAAC;IAC1B;IACA,IAAMmC,QAAQ,GAAGnC,GAAG,CAAC,EAAE,CAAC;IACxB;IACA,IAAMoC,YAAY,GAAGpC,GAAG,CAAC,EAAE,CAAC;;IAE5B;IACA,IAAMqC,aAAa;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,GAAA,EAAAC,IAAA,EAAAC,UAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAC,KAAK,CAAC,oDAAoD,EAAE;gBAC5EC,OAAO,EAAE;kBACP,QAAQ,EAAE;gBACZ,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cALIV,GAAG,GAAAK,QAAA,CAAAM,IAAA;cAMTC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,GAAG,CAAC;cAAAK,QAAA,CAAAE,IAAA;cAAA,OACXP,GAAG,CAACc,IAAI,CAAC,CAAC;YAAA;cAAvBb,IAAI,GAAAI,QAAA,CAAAM,IAAA;cACVC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEZ,IAAI,CAAC;cAE5B,IAAIA,IAAI,CAACc,IAAI,KAAK,CAAC,EAAE;gBACnBxB,UAAU,CAACpB,KAAK,GAAG,EAAA+B,UAAA,GAAAD,IAAI,CAACA,IAAI,cAAAC,UAAA,uBAATA,UAAA,CAAWc,IAAI,KAAI,EAAE;cAC1C,CAAC,MAAM;gBACLJ,OAAO,CAACK,KAAK,CAAC,WAAW,EAAEhB,IAAI,CAACZ,OAAO,CAAC;gBACxC1B,SAAS,CAACsD,KAAK,CAAChB,IAAI,CAACZ,OAAO,IAAI,UAAU,CAAC;cAC7C;cAACgB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAEDO,OAAO,CAACK,KAAK,CAAC,WAAW,EAAAZ,QAAA,CAAAa,EAAO,CAAC;cACjCvD,SAAS,CAACsD,KAAK,CAAC,UAAU,CAAC;YAAA;YAAA;cAAA,OAAAZ,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAApB,OAAA;MAAA,CAE9B;MAAA,gBAtBKL,aAAaA,CAAA;QAAA,OAAAC,KAAA,CAAAyB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsBlB;;IAED;IACA,IAAMC,WAAW;MAAA,IAAAC,KAAA,GAAA3B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA0B,SAAA;QAAA,IAAAxB,GAAA,EAAAC,IAAA,EAAAwB,WAAA;QAAA,OAAA5B,mBAAA,GAAAM,IAAA,UAAAuB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArB,IAAA,GAAAqB,SAAA,CAAApB,IAAA;YAAA;cAAAoB,SAAA,CAAArB,IAAA;cAAAqB,SAAA,CAAApB,IAAA;cAAA,OAEEC,KAAK,CAAC,mDAAmD,EAAE;gBAC3EC,OAAO,EAAE;kBACP,QAAQ,EAAE;gBACZ,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cALIV,GAAG,GAAA2B,SAAA,CAAAhB,IAAA;cAMTC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEb,GAAG,CAAC;cAAA2B,SAAA,CAAApB,IAAA;cAAA,OACZP,GAAG,CAACc,IAAI,CAAC,CAAC;YAAA;cAAvBb,IAAI,GAAA0B,SAAA,CAAAhB,IAAA;cACVC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,IAAI,CAAC;cAE7B,IAAIA,IAAI,CAACc,IAAI,KAAK,CAAC,EAAE;gBACnBvB,QAAQ,CAACrB,KAAK,GAAG,EAAAsD,WAAA,GAAAxB,IAAI,CAACA,IAAI,cAAAwB,WAAA,uBAATA,WAAA,CAAWT,IAAI,KAAI,EAAE;cACxC,CAAC,MAAM;gBACLJ,OAAO,CAACK,KAAK,CAAC,YAAY,EAAEhB,IAAI,CAACZ,OAAO,CAAC;gBACzC1B,SAAS,CAACsD,KAAK,CAAChB,IAAI,CAACZ,OAAO,IAAI,WAAW,CAAC;cAC9C;cAACsC,SAAA,CAAApB,IAAA;cAAA;YAAA;cAAAoB,SAAA,CAAArB,IAAA;cAAAqB,SAAA,CAAAT,EAAA,GAAAS,SAAA;cAEDf,OAAO,CAACK,KAAK,CAAC,YAAY,EAAAU,SAAA,CAAAT,EAAO,CAAC;cAClCvD,SAAS,CAACsD,KAAK,CAAC,WAAW,CAAC;YAAA;YAAA;cAAA,OAAAU,SAAA,CAAAR,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA,CAE/B;MAAA,gBAtBKF,WAAWA,CAAA;QAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsBhB;;IAED;IACA,IAAMO,kBAAkB;MAAA,IAAAC,KAAA,GAAAjC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAgC,SAAA;QAAA,IAAA9B,GAAA,EAAAC,IAAA;QAAA,OAAAJ,mBAAA,GAAAM,IAAA,UAAA4B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA1B,IAAA,GAAA0B,SAAA,CAAAzB,IAAA;YAAA;cAAAyB,SAAA,CAAA1B,IAAA;cAEvBM,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;cAAAmB,SAAA,CAAAzB,IAAA;cAAA,OACXC,KAAK,CAAC,iEAAiE,EAAE;gBACzFC,OAAO,EAAE;kBACP,QAAQ,EAAE;gBACZ,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cALIV,GAAG,GAAAgC,SAAA,CAAArB,IAAA;cAMTC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,GAAG,CAAC;cAAAgC,SAAA,CAAAzB,IAAA;cAAA,OACXP,GAAG,CAACc,IAAI,CAAC,CAAC;YAAA;cAAvBb,IAAI,GAAA+B,SAAA,CAAArB,IAAA;cACVC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEZ,IAAI,CAAC;cAE5B,IAAIA,IAAI,CAACc,IAAI,KAAK,CAAC,EAAE;gBACnBtB,YAAY,CAACtB,KAAK,GAAG8B,IAAI,CAACA,IAAI,IAAI,EAAE;gBACpCW,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEpB,YAAY,CAACtB,KAAK,CAAC;gBAC9C,IAAIsB,YAAY,CAACtB,KAAK,CAAC8D,MAAM,KAAK,CAAC,EAAE;kBACnCtE,SAAS,CAACuE,OAAO,CAAC,YAAY,CAAC;gBACjC;cACF,CAAC,MAAM;gBACLtB,OAAO,CAACK,KAAK,CAAC,aAAa,EAAEhB,IAAI,CAACZ,OAAO,CAAC;gBAC1C1B,SAAS,CAACsD,KAAK,CAAChB,IAAI,CAACZ,OAAO,IAAI,YAAY,CAAC;cAC/C;cAAC2C,SAAA,CAAAzB,IAAA;cAAA;YAAA;cAAAyB,SAAA,CAAA1B,IAAA;cAAA0B,SAAA,CAAAd,EAAA,GAAAc,SAAA;cAEDpB,OAAO,CAACK,KAAK,CAAC,aAAa,EAAAe,SAAA,CAAAd,EAAO,CAAC;cACnCvD,SAAS,CAACsD,KAAK,CAAC,YAAY,CAAC;YAAA;YAAA;cAAA,OAAAe,SAAA,CAAAb,IAAA;UAAA;QAAA,GAAAW,QAAA;MAAA,CAEhC;MAAA,gBA3BKF,kBAAkBA,CAAA;QAAA,OAAAC,KAAA,CAAAT,KAAA,OAAAC,SAAA;MAAA;IAAA,GA2BvB;;IAED;IACA,IAAMc,iBAAiB;MAAA,IAAAC,KAAA,GAAAxC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAuC,SAAO1D,OAAO;QAAA,IAAAqB,GAAA,EAAAC,IAAA,EAAAqC,KAAA,EAAApD,KAAA;QAAA,OAAAW,mBAAA,GAAAM,IAAA,UAAAoC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlC,IAAA,GAAAkC,SAAA,CAAAjC,IAAA;YAAA;cAAA,IACjC5B,OAAO;gBAAA6D,SAAA,CAAAjC,IAAA;gBAAA;cAAA;cAAA,OAAAiC,SAAA,CAAAC,MAAA;YAAA;cAAAD,SAAA,CAAAlC,IAAA;cAEVM,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAElC,OAAO,CAAC;cAAA6D,SAAA,CAAAjC,IAAA;cAAA,OACxBC,KAAK,8CAAAkC,MAAA,CAA8C/D,OAAO,GAAI;gBAC9E8B,OAAO,EAAE;kBACP,QAAQ,EAAE;gBACZ,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cALIV,GAAG,GAAAwC,SAAA,CAAA7B,IAAA;cAMTC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,GAAG,CAAC;cAAAwC,SAAA,CAAAjC,IAAA;cAAA,OACXP,GAAG,CAACc,IAAI,CAAC,CAAC;YAAA;cAAvBb,IAAI,GAAAuC,SAAA,CAAA7B,IAAA;cACVC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEZ,IAAI,CAAC;cAE5B,IAAIA,IAAI,CAACc,IAAI,KAAK,CAAC,EAAE;gBACbuB,KAAK,GAAGrC,IAAI,CAACA,IAAI;gBACvBW,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEyB,KAAK,CAAC;gBAC3B5D,IAAI,CAACE,SAAS,GAAG0D,KAAK,CAACvB,IAAI;gBAC3B;gBACM7B,KAAK,GAAGoD,KAAK,CAACpD,KAAK,IAAI,EAAE;gBAC/BR,IAAI,CAACQ,KAAK,GAAGA,KAAK,CAACyD,GAAG,CAAC,UAAAC,IAAI;kBAAA,OAAAC,aAAA,CAAAA,aAAA,KACtBD,IAAI;oBACPE,aAAa,EAAEF,IAAI,CAACG,QAAQ;oBAC5BA,QAAQ,EAAEH,IAAI,CAACG,QAAQ;oBACvBC,WAAW,EAAEJ,IAAI,CAACI,WAAW,IAAIJ,IAAI,CAACK;kBAAI;gBAAA,CAC1C,CAAC;cACL,CAAC,MAAM;gBACLrC,OAAO,CAACK,KAAK,CAAC,WAAW,EAAEhB,IAAI,CAACZ,OAAO,CAAC;gBACxC1B,SAAS,CAACsD,KAAK,CAAChB,IAAI,CAACZ,OAAO,IAAI,UAAU,CAAC;cAC7C;cAACmD,SAAA,CAAAjC,IAAA;cAAA;YAAA;cAAAiC,SAAA,CAAAlC,IAAA;cAAAkC,SAAA,CAAAtB,EAAA,GAAAsB,SAAA;cAED5B,OAAO,CAACK,KAAK,CAAC,WAAW,EAAAuB,SAAA,CAAAtB,EAAO,CAAC;cACjCvD,SAAS,CAACsD,KAAK,CAAC,UAAU,CAAC;YAAA;YAAA;cAAA,OAAAuB,SAAA,CAAArB,IAAA;UAAA;QAAA,GAAAkB,QAAA;MAAA,CAE9B;MAAA,gBAlCKF,iBAAiBA,CAAAe,EAAA;QAAA,OAAAd,KAAA,CAAAhB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAkCtB;;IAED;IACA,IAAM8B,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAItE,WAAW,EAAK;MAC7C,IAAMC,SAAS,GAAGS,UAAU,CAACpB,KAAK,CAACiF,IAAI,CAAC,UAAAR,IAAI;QAAA,OAAIA,IAAI,CAACS,EAAE,KAAKxE,WAAW;MAAA,EAAC;MACxE,IAAIC,SAAS,EAAE;QACbJ,IAAI,CAACI,SAAS,GAAGA,SAAS,CAACmE,IAAI;MACjC;IACF,CAAC;;IAED;IACA,IAAMK,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIvE,SAAS,EAAK;MACzC,IAAMC,OAAO,GAAGQ,QAAQ,CAACrB,KAAK,CAACiF,IAAI,CAAC,UAAAR,IAAI;QAAA,OAAIA,IAAI,CAACS,EAAE,KAAKtE,SAAS;MAAA,EAAC;MAClE,IAAIC,OAAO,EAAE;QACXN,IAAI,CAACM,OAAO,GAAGA,OAAO,CAACiE,IAAI;MAC7B;IACF,CAAC;;IAED;IACA,IAAMM,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAM,EAAK;MAC/B,IAAI,CAACA,MAAM,EAAE,OAAO,MAAM;MAC1B,OAAOC,MAAM,CAACD,MAAM,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;;IAED;IACA,IAAMC,WAAW,GAAGpG,QAAQ,CAAC,YAAM;MACjC,OAAOmB,IAAI,CAACQ,KAAK,CAAC0E,MAAM,CAAC,UAACC,GAAG,EAAEjB,IAAI;QAAA,OAAKiB,GAAG,IAAIjB,IAAI,CAACkB,KAAK,GAAGlB,IAAI,CAACG,QAAQ,IAAI,CAAC,CAAC;MAAA,GAAE,CAAC,CAAC;IACrF,CAAC,CAAC;;IAEF;IACA,IAAMgB,YAAY;MAAA,IAAAC,KAAA,GAAApE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAmE,SAAA;QAAA,OAAApE,mBAAA,GAAAM,IAAA,UAAA+D,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA7D,IAAA,GAAA6D,SAAA,CAAA5D,IAAA;YAAA;cAAA,IACdxC,OAAO,CAACI,KAAK;gBAAAgG,SAAA,CAAA5D,IAAA;gBAAA;cAAA;cAAA,OAAA4D,SAAA,CAAA1B,MAAA;YAAA;cAAA0B,SAAA,CAAA5D,IAAA;cAAA,OAEZxC,OAAO,CAACI,KAAK,CAACiG,QAAQ;gBAAA,IAAAC,KAAA,GAAAzE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAwE,SAAOC,KAAK;kBAAA,IAAAC,UAAA,EAAAC,GAAA,EAAAC,MAAA,EAAA1E,GAAA,EAAAC,IAAA;kBAAA,OAAAJ,mBAAA,GAAAM,IAAA,UAAAwE,UAAAC,SAAA;oBAAA,kBAAAA,SAAA,CAAAtE,IAAA,GAAAsE,SAAA,CAAArE,IAAA;sBAAA;wBAAA,KACnCgE,KAAK;0BAAAK,SAAA,CAAArE,IAAA;0BAAA;wBAAA;wBAAA,MACH7B,IAAI,CAACQ,KAAK,CAAC+C,MAAM,KAAK,CAAC;0BAAA2C,SAAA,CAAArE,IAAA;0BAAA;wBAAA;wBACzB5C,SAAS,CAACuE,OAAO,CAAC,SAAS,CAAC;wBAAA,OAAA0C,SAAA,CAAAnC,MAAA;sBAAA;wBAAAmC,SAAA,CAAAtE,IAAA;wBAK5B;wBACMkE,UAAU,GAAG;0BACjB7F,OAAO,EAAED,IAAI,CAACC,OAAO;0BACrBC,SAAS,EAAEF,IAAI,CAACE,SAAS;0BACzBC,WAAW,EAAEH,IAAI,CAACG,WAAW;0BAC7BC,SAAS,EAAEJ,IAAI,CAACI,SAAS;0BACzBC,SAAS,EAAEL,IAAI,CAACK,SAAS;0BACzBC,OAAO,EAAEN,IAAI,CAACM,OAAO;0BACrBC,MAAM,EAAEP,IAAI,CAACO,MAAM;0BACnBC,KAAK,EAAER,IAAI,CAACQ,KAAK,CAACyD,GAAG,CAAC,UAAAC,IAAI;4BAAA,OAAK;8BAC7BjE,OAAO,EAAED,IAAI,CAACC,OAAO;8BACrBkG,WAAW,EAAEjC,IAAI,CAACS,EAAE;8BACpByB,SAAS,EAAElC,IAAI,CAACkC,SAAS;8BACzB9B,WAAW,EAAEJ,IAAI,CAACI,WAAW;8BAC7B+B,WAAW,EAAEnC,IAAI,CAACmC,WAAW;8BAC7BC,IAAI,EAAEpC,IAAI,CAACoC,IAAI;8BACflC,aAAa,EAAEF,IAAI,CAACE,aAAa;8BACjCC,QAAQ,EAAEH,IAAI,CAACG,QAAQ;8BACvBe,KAAK,EAAEL,MAAM,CAACb,IAAI,CAACkB,KAAK,CAAC;8BACzBN,MAAM,EAAEC,MAAM,CAAC,CAACb,IAAI,CAACkB,KAAK,GAAGlB,IAAI,CAACG,QAAQ,EAAEW,OAAO,CAAC,CAAC,CAAC;4BACxD,CAAC;0BAAA,CAAC,CAAC;0BACHF,MAAM,EAAEC,MAAM,CAACE,WAAW,CAACxF,KAAK,CAACuF,OAAO,CAAC,CAAC,CAAC;wBAC7C,CAAC;wBAED9C,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE2D,UAAU,CAAC;wBAE/BC,GAAG,GAAGvG,MAAM,CAACC,KAAK,kDAAAuE,MAAA,CAC2B7E,KAAK,CAACI,KAAK,CAACoF,EAAE,IAC7D,6CAA6C;wBAE3CqB,MAAM,GAAGxG,MAAM,CAACC,KAAK,GAAG,KAAK,GAAG,MAAM;wBAAAyG,SAAA,CAAArE,IAAA;wBAAA,OAC1BC,KAAK,CAACiE,GAAG,EAAE;0BAC3BC,MAAM,EAANA,MAAM;0BACNjE,OAAO,EAAE;4BACP,cAAc,EAAE,kBAAkB;4BAClC,QAAQ,EAAE;0BACZ,CAAC;0BACDC,WAAW,EAAE,SAAS;0BACtBuE,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,UAAU;wBACjC,CAAC,CAAC;sBAAA;wBARIxE,GAAG,GAAA4E,SAAA,CAAAjE,IAAA;wBAUTC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEb,GAAG,CAAC;wBAAA4E,SAAA,CAAArE,IAAA;wBAAA,OACTP,GAAG,CAACc,IAAI,CAAC,CAAC;sBAAA;wBAAvBb,IAAI,GAAA2E,SAAA,CAAAjE,IAAA;wBACVC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,IAAI,CAAC;wBAE7B,IAAIA,IAAI,CAACc,IAAI,KAAK,CAAC,EAAE;0BACnBpD,SAAS,CAACyH,OAAO,CAAClH,MAAM,CAACC,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC;0BACjDL,MAAM,CAACuH,IAAI,CAAC,6BAA6B,CAAC;wBAC5C,CAAC,MAAM;0BACLzE,OAAO,CAACK,KAAK,CAAC,OAAO,EAAEhB,IAAI,CAAC;0BAC5BtC,SAAS,CAACsD,KAAK,CAAChB,IAAI,CAACZ,OAAO,KAAKnB,MAAM,CAACC,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;wBACnE;wBAACyG,SAAA,CAAArE,IAAA;wBAAA;sBAAA;wBAAAqE,SAAA,CAAAtE,IAAA;wBAAAsE,SAAA,CAAA1D,EAAA,GAAA0D,SAAA;wBAEDhE,OAAO,CAACK,KAAK,CAAC/C,MAAM,CAACC,KAAK,GAAG,UAAU,GAAG,UAAU,EAAAyG,SAAA,CAAA1D,EAAO,CAAC;wBAC5DvD,SAAS,CAACsD,KAAK,CAAC2D,SAAA,CAAA1D,EAAA,CAAM7B,OAAO,KAAKnB,MAAM,CAACC,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;sBAAA;sBAAA;wBAAA,OAAAyG,SAAA,CAAAzD,IAAA;oBAAA;kBAAA,GAAAmD,QAAA;gBAAA,CAGvE;gBAAA,iBAAAgB,GAAA;kBAAA,OAAAjB,KAAA,CAAAjD,KAAA,OAAAC,SAAA;gBAAA;cAAA,IAAC;YAAA;YAAA;cAAA,OAAA8C,SAAA,CAAAhD,IAAA;UAAA;QAAA,GAAA8C,QAAA;MAAA,CACH;MAAA,gBArEKF,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAA5C,KAAA,OAAAC,SAAA;MAAA;IAAA,GAqEjB;;IAED;IACA,IAAMkE,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;MACzB3H,YAAY,CAAC4H,OAAO,CAClB,cAAc,EACd,IAAI,EACJ;QACEC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CACF,CAAC,CAACC,IAAI,CAAC,YAAM;QACX9H,MAAM,CAACuH,IAAI,CAAC,6BAA6B,CAAC;MAC5C,CAAC,CAAC,SAAM,CAAC,YAAM,CAAC,CAAC,CAAC;IACpB,CAAC;;IAED;IACA,IAAMQ,gBAAgB;MAAA,IAAAC,KAAA,GAAAlG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAiG,SAAO1C,EAAE;QAAA,IAAArD,GAAA,EAAAC,IAAA,EAAA+F,OAAA;QAAA,OAAAnG,mBAAA,GAAAM,IAAA,UAAA8F,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5F,IAAA,GAAA4F,SAAA,CAAA3F,IAAA;YAAA;cAAA2F,SAAA,CAAA5F,IAAA;cAE9BM,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEwC,EAAE,CAAC;cAAA6C,SAAA,CAAA3F,IAAA;cAAA,OACfC,KAAK,gDAAAkC,MAAA,CAAgDW,EAAE,GAAI;gBAC3E5C,OAAO,EAAE;kBACP,QAAQ,EAAE;gBACZ,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cALIV,GAAG,GAAAkG,SAAA,CAAAvF,IAAA;cAMTC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEb,GAAG,CAAC;cAAAkG,SAAA,CAAA3F,IAAA;cAAA,OACZP,GAAG,CAACc,IAAI,CAAC,CAAC;YAAA;cAAvBb,IAAI,GAAAiG,SAAA,CAAAvF,IAAA;cACVC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,IAAI,CAAC;cAE7B,IAAIA,IAAI,CAACc,IAAI,KAAK,CAAC,EAAE;gBACbiF,OAAO,GAAG/F,IAAI,CAACA,IAAI;gBACzBW,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEmF,OAAO,CAAC;;gBAE9B;gBACAtH,IAAI,CAACC,OAAO,GAAGqH,OAAO,CAACrH,OAAO;gBAC9BD,IAAI,CAACE,SAAS,GAAGoH,OAAO,CAACpH,SAAS;gBAClCF,IAAI,CAACG,WAAW,GAAGmH,OAAO,CAACnH,WAAW;gBACtCH,IAAI,CAACI,SAAS,GAAGkH,OAAO,CAAClH,SAAS;gBAClCJ,IAAI,CAACK,SAAS,GAAGiH,OAAO,CAACjH,SAAS;gBAClCL,IAAI,CAACM,OAAO,GAAGgH,OAAO,CAAChH,OAAO;gBAC9BN,IAAI,CAACO,MAAM,GAAG+G,OAAO,CAAC/G,MAAM;gBAC5BP,IAAI,CAACQ,KAAK,GAAG8G,OAAO,CAAC9G,KAAK,CAACyD,GAAG,CAAC,UAAAC,IAAI;kBAAA,OAAAC,aAAA,CAAAA,aAAA,KAC9BD,IAAI;oBACPE,aAAa,EAAEF,IAAI,CAACE,aAAa,IAAIF,IAAI,CAACG,QAAQ;oBAClDA,QAAQ,EAAEH,IAAI,CAACG,QAAQ;oBACvBS,MAAM,EAAEZ,IAAI,CAACkB,KAAK,GAAGlB,IAAI,CAACG;kBAAQ;gBAAA,CAClC,CAAC;gBAEHnC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEnC,IAAI,CAAC;cAChC,CAAC,MAAM;gBACLkC,OAAO,CAACK,KAAK,CAAC,YAAY,EAAEhB,IAAI,CAACZ,OAAO,CAAC;gBACzC1B,SAAS,CAACsD,KAAK,CAAChB,IAAI,CAACZ,OAAO,IAAI,WAAW,CAAC;cAC9C;cAAC6G,SAAA,CAAA3F,IAAA;cAAA;YAAA;cAAA2F,SAAA,CAAA5F,IAAA;cAAA4F,SAAA,CAAAhF,EAAA,GAAAgF,SAAA;cAEDtF,OAAO,CAACK,KAAK,CAAC,YAAY,EAAAiF,SAAA,CAAAhF,EAAO,CAAC;cAClCvD,SAAS,CAACsD,KAAK,CAAC,WAAW,CAAC;YAAA;YAAA;cAAA,OAAAiF,SAAA,CAAA/E,IAAA;UAAA;QAAA,GAAA4E,QAAA;MAAA,CAE/B;MAAA,gBAzCKF,gBAAgBA,CAAAM,GAAA;QAAA,OAAAL,KAAA,CAAA1E,KAAA,OAAAC,SAAA;MAAA;IAAA,GAyCrB;;IAED;IACA7D,SAAS,cAAAoC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAsG,SAAA;MAAA,IAAA/C,EAAA;MAAA,OAAAxD,mBAAA,GAAAM,IAAA,UAAAkG,UAAAC,SAAA;QAAA,kBAAAA,SAAA,CAAAhG,IAAA,GAAAgG,SAAA,CAAA/F,IAAA;UAAA;YACF8C,EAAE,GAAGxF,KAAK,CAACI,KAAK,CAACoF,EAAE;YAAA,MACrBA,EAAE,KAAKnF,MAAM,CAACC,KAAK,IAAIC,MAAM,CAACD,KAAK,CAAC;cAAAmI,SAAA,CAAA/F,IAAA;cAAA;YAAA;YAAA+F,SAAA,CAAA/F,IAAA;YAAA,OAChCsF,gBAAgB,CAACxC,EAAE,CAAC;UAAA;YAAAiD,SAAA,CAAA/F,IAAA;YAAA,OAEtBgG,OAAO,CAACC,GAAG,CAAC,CAChB9G,aAAa,CAAC,CAAC,EACf4B,WAAW,CAAC,CAAC,EACbM,kBAAkB,CAAC,CAAC,CACrB,CAAC;UAAA;UAAA;YAAA,OAAA0E,SAAA,CAAAnF,IAAA;QAAA;MAAA,GAAAiF,QAAA;IAAA,CACH,GAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}