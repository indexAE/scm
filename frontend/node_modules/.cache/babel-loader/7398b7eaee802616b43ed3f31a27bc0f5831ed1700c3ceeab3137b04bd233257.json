{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"profile\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createElementVNode(\"div\", {\n        \"class\": \"card-header\"\n      }, [_createElementVNode(\"span\", null, \"个人信息\")], -1 /* HOISTED */)]);\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        model: $setup.profileForm,\n        \"label-width\": \"100px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"用户名\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.username,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.profileForm.username = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"角色类型\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.roleName,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.profileForm.roleName = $event;\n                }),\n                disabled: \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"原密码\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.oldPassword,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.profileForm.oldPassword = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入原密码\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"新密码\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.newPassword,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.profileForm.newPassword = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请输入新密码\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"确认新密码\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.profileForm.confirmPassword,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                  return $setup.profileForm.confirmPassword = $event;\n                }),\n                type: \"password\",\n                placeholder: \"请再次输入新密码\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleSubmit\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[6] || (_cache[6] = [_createTextVNode(\"保存修改\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","_component_el_form","model","$setup","profileForm","_component_el_form_item","label","_component_el_input","modelValue","username","$event","disabled","_","roleName","oldPassword","type","placeholder","newPassword","confirmPassword","_component_el_button","onClick","handleSubmit","_createTextVNode"],"sources":["C:\\Users\\indexae\\Desktop\\scm退货\\scm\\frontend\\src\\views\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>个人信息</span>\n        </div>\n      </template>\n      \n      <el-form :model=\"profileForm\" label-width=\"100px\">\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"profileForm.username\" disabled />\n        </el-form-item>\n        \n        <el-form-item label=\"角色类型\">\n          <el-input v-model=\"profileForm.roleName\" disabled />\n        </el-form-item>\n        \n        <el-form-item label=\"原密码\">\n          <el-input v-model=\"profileForm.oldPassword\" type=\"password\" placeholder=\"请输入原密码\" />\n        </el-form-item>\n        \n        <el-form-item label=\"新密码\">\n          <el-input v-model=\"profileForm.newPassword\" type=\"password\" placeholder=\"请输入新密码\" />\n        </el-form-item>\n        \n        <el-form-item label=\"确认新密码\">\n          <el-input v-model=\"profileForm.confirmPassword\" type=\"password\" placeholder=\"请再次输入新密码\" />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSubmit\">保存修改</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport { useSettingsStore } from '../stores/settings'\n\nconst profileForm = ref({\n  username: '',\n  roleName: '',\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\n\nconst router = useRouter()\nconst settingsStore = useSettingsStore()\n\n// 获取个人信息\nconst getProfile = async () => {\n  try {\n    const userId = localStorage.getItem('userId')\n    if (!userId) {\n      ElMessage.error('请先登录')\n      router.push('/login')\n      return\n    }\n\n    // 获取用户基本信息\n    const userRes = await fetch(`http://localhost:8000/api/users/${userId}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      credentials: 'include'\n    })\n    const userData = await userRes.json()\n    if (userData.code === 0) {\n      profileForm.value.username = userData.data.username\n      \n      // 获取用户角色信息\n      const roleRes = await fetch(`http://localhost:8080/api/roles/user/${userId}`, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      const roleData = await roleRes.json()\n      if (roleData.code === 0 && roleData.data) {\n        profileForm.value.roleName = roleData.data.roleName\n      } else {\n        profileForm.value.roleName = '未分配角色'\n      }\n    } else {\n      ElMessage.error(userData.message)\n    }\n  } catch (error) {\n    console.error('获取个人信息失败:', error)\n    ElMessage.error('获取个人信息失败')\n  }\n}\n\n// 提交修改\nconst handleSubmit = async () => {\n  // 表单验证\n  if (!profileForm.value.oldPassword) {\n    ElMessage.error('请输入原密码')\n    return\n  }\n  if (!profileForm.value.newPassword) {\n    ElMessage.error('请输入新密码')\n    return\n  }\n  if (!profileForm.value.confirmPassword) {\n    ElMessage.error('请确认新密码')\n    return\n  }\n  \n  // 验证新密码长度\n  if (profileForm.value.newPassword.length < settingsStore.passwordMinLength) {\n    ElMessage.error(`新密码长度不能小于${settingsStore.passwordMinLength}位`)\n    return\n  }\n  \n  // 验证新密码\n  if (profileForm.value.newPassword !== profileForm.value.confirmPassword) {\n    ElMessage.error('两次输入的新密码不一致')\n    return\n  }\n\n  try {\n    const userId = localStorage.getItem('userId')\n    if (!userId) {\n      ElMessage.error('请先登录')\n      router.push('/login')\n      return\n    }\n\n    const res = await fetch(`http://localhost:8000/api/users/${userId}/password`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        oldPassword: profileForm.value.oldPassword,\n        newPassword: profileForm.value.newPassword\n      })\n    })\n    \n    const data = await res.json()\n    if (data.code === 0) {\n      ElMessage.success('密码修改成功')\n      // 清空表单\n      profileForm.value.oldPassword = ''\n      profileForm.value.newPassword = ''\n      profileForm.value.confirmPassword = ''\n    } else {\n      ElMessage.error(data.message)\n    }\n  } catch (error) {\n    console.error('修改密码失败:', error)\n    ElMessage.error('修改密码失败')\n  }\n}\n\nonMounted(() => {\n  getProfile()\n})\n</script>\n\n<style scoped>\n.profile {\n  padding: 20px;\n}\n\n.box-card {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style> "],"mappings":";;EACO,SAAM;AAAS;;;;;;;uBAApBA,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJC,YAAA,CAgCUC,kBAAA;IAhCD,SAAM;EAAU;IACZC,MAAM,EAAAC,QAAA,CACf;MAAA,OAEMC,MAAA,QAAAA,MAAA,OAFNC,mBAAA,CAEM;QAFD,SAAM;MAAa,IACtBA,mBAAA,CAAiB,cAAX,MAAI,E;;IALpB,WAAAF,QAAA,CASM;MAAA,OAwBU,CAxBVH,YAAA,CAwBUM,kBAAA;QAxBAC,KAAK,EAAEC,MAAA,CAAAC,WAAW;QAAE,aAAW,EAAC;;QAThD,WAAAN,QAAA,CAUQ;UAAA,OAEe,CAFfH,YAAA,CAEeU,uBAAA;YAFDC,KAAK,EAAC;UAAK;YAVjC,WAAAR,QAAA,CAWU;cAAA,OAAoD,CAApDH,YAAA,CAAoDY,mBAAA;gBAX9DC,UAAA,EAW6BL,MAAA,CAAAC,WAAW,CAACK,QAAQ;gBAXjD,uBAAAV,MAAA,QAAAA,MAAA,gBAAAW,MAAA;kBAAA,OAW6BP,MAAA,CAAAC,WAAW,CAACK,QAAQ,GAAAC,MAAA;gBAAA;gBAAEC,QAAQ,EAAR;;;YAXnDC,CAAA;cAcQjB,YAAA,CAEeU,uBAAA;YAFDC,KAAK,EAAC;UAAM;YAdlC,WAAAR,QAAA,CAeU;cAAA,OAAoD,CAApDH,YAAA,CAAoDY,mBAAA;gBAf9DC,UAAA,EAe6BL,MAAA,CAAAC,WAAW,CAACS,QAAQ;gBAfjD,uBAAAd,MAAA,QAAAA,MAAA,gBAAAW,MAAA;kBAAA,OAe6BP,MAAA,CAAAC,WAAW,CAACS,QAAQ,GAAAH,MAAA;gBAAA;gBAAEC,QAAQ,EAAR;;;YAfnDC,CAAA;cAkBQjB,YAAA,CAEeU,uBAAA;YAFDC,KAAK,EAAC;UAAK;YAlBjC,WAAAR,QAAA,CAmBU;cAAA,OAAmF,CAAnFH,YAAA,CAAmFY,mBAAA;gBAnB7FC,UAAA,EAmB6BL,MAAA,CAAAC,WAAW,CAACU,WAAW;gBAnBpD,uBAAAf,MAAA,QAAAA,MAAA,gBAAAW,MAAA;kBAAA,OAmB6BP,MAAA,CAAAC,WAAW,CAACU,WAAW,GAAAJ,MAAA;gBAAA;gBAAEK,IAAI,EAAC,UAAU;gBAACC,WAAW,EAAC;;;YAnBlFJ,CAAA;cAsBQjB,YAAA,CAEeU,uBAAA;YAFDC,KAAK,EAAC;UAAK;YAtBjC,WAAAR,QAAA,CAuBU;cAAA,OAAmF,CAAnFH,YAAA,CAAmFY,mBAAA;gBAvB7FC,UAAA,EAuB6BL,MAAA,CAAAC,WAAW,CAACa,WAAW;gBAvBpD,uBAAAlB,MAAA,QAAAA,MAAA,gBAAAW,MAAA;kBAAA,OAuB6BP,MAAA,CAAAC,WAAW,CAACa,WAAW,GAAAP,MAAA;gBAAA;gBAAEK,IAAI,EAAC,UAAU;gBAACC,WAAW,EAAC;;;YAvBlFJ,CAAA;cA0BQjB,YAAA,CAEeU,uBAAA;YAFDC,KAAK,EAAC;UAAO;YA1BnC,WAAAR,QAAA,CA2BU;cAAA,OAAyF,CAAzFH,YAAA,CAAyFY,mBAAA;gBA3BnGC,UAAA,EA2B6BL,MAAA,CAAAC,WAAW,CAACc,eAAe;gBA3BxD,uBAAAnB,MAAA,QAAAA,MAAA,gBAAAW,MAAA;kBAAA,OA2B6BP,MAAA,CAAAC,WAAW,CAACc,eAAe,GAAAR,MAAA;gBAAA;gBAAEK,IAAI,EAAC,UAAU;gBAACC,WAAW,EAAC;;;YA3BtFJ,CAAA;cA8BQjB,YAAA,CAEeU,uBAAA;YAhCvB,WAAAP,QAAA,CA+BU;cAAA,OAAgE,CAAhEH,YAAA,CAAgEwB,oBAAA;gBAArDJ,IAAI,EAAC,SAAS;gBAAEK,OAAK,EAAEjB,MAAA,CAAAkB;;gBA/B5C,WAAAvB,QAAA,CA+B0D;kBAAA,OAAIC,MAAA,QAAAA,MAAA,OA/B9DuB,gBAAA,CA+B0D,MAAI,E;;gBA/B9DV,CAAA;;;YAAAA,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}