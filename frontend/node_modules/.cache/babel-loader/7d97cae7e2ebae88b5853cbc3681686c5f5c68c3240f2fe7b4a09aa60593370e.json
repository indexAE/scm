{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\n\n// 搜索表单数据\n\nexport default {\n  __name: 'index',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var searchForm = reactive({\n      warehouseId: '',\n      productName: '',\n      stockStatus: ''\n    });\n\n    // 表格数据\n    var tableData = ref([]);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var total = ref(0);\n    var warehouses = ref([]);\n\n    // 获取仓库列表\n    var getWarehouses = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/api/warehouses');\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              result = _context.sent;\n              if (result.code === 0) {\n                warehouses.value = result.data;\n              }\n              _context.next = 13;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取仓库列表失败:', _context.t0);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return function getWarehouses() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取库存列表\n    var getStockList = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"/api/warehouse/stocks?page=\".concat(currentPage.value, \"&size=\").concat(pageSize.value, \"&warehouseId=\").concat(searchForm.warehouseId, \"&productName=\").concat(searchForm.productName, \"&stockStatus=\").concat(searchForm.stockStatus));\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n            case 6:\n              result = _context2.sent;\n              if (result.code === 0) {\n                tableData.value = result.data.list;\n                total.value = result.data.total;\n              }\n              _context2.next = 14;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取库存列表失败:', _context2.t0);\n              ElMessage.error('获取库存列表失败');\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10]]);\n      }));\n      return function getStockList() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 获取库存状态类型\n    var getStockStatusType = function getStockStatusType(status) {\n      var types = {\n        normal: '',\n        overstock: 'warning',\n        shortage: 'danger'\n      };\n      return types[status] || '';\n    };\n\n    // 获取库存状态标签\n    var getStockStatusLabel = function getStockStatusLabel(status) {\n      var labels = {\n        normal: '正常',\n        overstock: '积压',\n        shortage: '短缺'\n      };\n      return labels[status] || status;\n    };\n\n    // 搜索\n    var handleSearch = function handleSearch() {\n      currentPage.value = 1;\n      getStockList();\n    };\n\n    // 重置搜索\n    var handleReset = function handleReset() {\n      searchForm.warehouseId = '';\n      searchForm.productName = '';\n      searchForm.stockStatus = '';\n      handleSearch();\n    };\n\n    // 库存调整\n    var handleStockAdjust = function handleStockAdjust(row) {\n      console.log('调整库存:', row);\n      // TODO: 实现库存调整功能\n    };\n\n    // 库存明细\n    var handleStockDetail = function handleStockDetail(row) {\n      console.log('查看库存明细:', row);\n      // TODO: 实现查看库存明细功能\n    };\n\n    // 分页大小改变\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      getStockList();\n    };\n\n    // 当前页改变\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n      getStockList();\n    };\n\n    // 初始化\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getWarehouses();\n          case 2:\n            getStockList();\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    })));\n    var __returned__ = {\n      searchForm: searchForm,\n      tableData: tableData,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      warehouses: warehouses,\n      getWarehouses: getWarehouses,\n      getStockList: getStockList,\n      getStockStatusType: getStockStatusType,\n      getStockStatusLabel: getStockStatusLabel,\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      handleStockAdjust: handleStockAdjust,\n      handleStockDetail: handleStockDetail,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      ref: ref,\n      reactive: reactive,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","searchForm","warehouseId","productName","stockStatus","tableData","currentPage","pageSize","total","warehouses","getWarehouses","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","sent","json","code","value","data","t0","console","error","stop","apply","arguments","getStockList","_ref3","_callee2","_callee2$","_context2","concat","list","getStockStatusType","status","types","normal","overstock","shortage","getStockStatusLabel","labels","handleSearch","handleReset","handleStockAdjust","row","log","handleStockDetail","handleSizeChange","val","handleCurrentChange","_callee3","_callee3$","_context3"],"sources":["C:/Users/indexae/Desktop/scm日志/scm/frontend/src/views/warehouse/stock/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"warehouse-stock\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>库存管理</span>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 搜索表单 -->\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\r\n        <el-form-item label=\"仓库\">\r\n          <el-select v-model=\"searchForm.warehouseId\" placeholder=\"请选择仓库\" clearable>\r\n            <el-option\r\n              v-for=\"item in warehouses\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"商品名称\">\r\n          <el-input v-model=\"searchForm.productName\" placeholder=\"请输入商品名称\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"库存状态\">\r\n          <el-select v-model=\"searchForm.stockStatus\" placeholder=\"请选择库存状态\" clearable>\r\n            <el-option label=\"正常\" value=\"normal\" />\r\n            <el-option label=\"积压\" value=\"overstock\" />\r\n            <el-option label=\"短缺\" value=\"shortage\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button @click=\"handleReset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 数据表格 -->\r\n      <el-table :data=\"tableData\" border style=\"width: 100%\">\r\n        <el-table-column prop=\"warehouse\" label=\"仓库\" width=\"150\" />\r\n        <el-table-column prop=\"productCode\" label=\"商品编号\" width=\"120\" />\r\n        <el-table-column prop=\"productName\" label=\"商品名称\" width=\"150\" />\r\n        <el-table-column prop=\"productSpec\" label=\"规格\" width=\"120\" />\r\n        <el-table-column prop=\"unit\" label=\"单位\" width=\"80\" />\r\n        <el-table-column prop=\"quantity\" label=\"当前库存\" width=\"100\" />\r\n        <el-table-column prop=\"minStock\" label=\"最小库存\" width=\"100\" />\r\n        <el-table-column prop=\"maxStock\" label=\"最大库存\" width=\"100\" />\r\n        <el-table-column prop=\"stockStatus\" label=\"库存状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"getStockStatusType(scope.row.stockStatus)\">\r\n              {{ getStockStatusLabel(scope.row.stockStatus) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button type=\"primary\" link @click=\"handleStockAdjust(scope.row)\">库存调整</el-button>\r\n            <el-button type=\"primary\" link @click=\"handleStockDetail(scope.row)\">库存明细</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :total=\"total\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 搜索表单数据\r\nconst searchForm = reactive({\r\n  warehouseId: '',\r\n  productName: '',\r\n  stockStatus: ''\r\n})\r\n\r\n// 表格数据\r\nconst tableData = ref([])\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\nconst warehouses = ref([])\r\n\r\n// 获取仓库列表\r\nconst getWarehouses = async () => {\r\n  try {\r\n    const response = await fetch('/api/warehouses')\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      warehouses.value = result.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取仓库列表失败:', error)\r\n  }\r\n}\r\n\r\n// 获取库存列表\r\nconst getStockList = async () => {\r\n  try {\r\n    const response = await fetch(`/api/warehouse/stocks?page=${currentPage.value}&size=${pageSize.value}&warehouseId=${searchForm.warehouseId}&productName=${searchForm.productName}&stockStatus=${searchForm.stockStatus}`)\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      tableData.value = result.data.list\r\n      total.value = result.data.total\r\n    }\r\n  } catch (error) {\r\n    console.error('获取库存列表失败:', error)\r\n    ElMessage.error('获取库存列表失败')\r\n  }\r\n}\r\n\r\n// 获取库存状态类型\r\nconst getStockStatusType = (status) => {\r\n  const types = {\r\n    normal: '',\r\n    overstock: 'warning',\r\n    shortage: 'danger'\r\n  }\r\n  return types[status] || ''\r\n}\r\n\r\n// 获取库存状态标签\r\nconst getStockStatusLabel = (status) => {\r\n  const labels = {\r\n    normal: '正常',\r\n    overstock: '积压',\r\n    shortage: '短缺'\r\n  }\r\n  return labels[status] || status\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  getStockList()\r\n}\r\n\r\n// 重置搜索\r\nconst handleReset = () => {\r\n  searchForm.warehouseId = ''\r\n  searchForm.productName = ''\r\n  searchForm.stockStatus = ''\r\n  handleSearch()\r\n}\r\n\r\n// 库存调整\r\nconst handleStockAdjust = (row) => {\r\n  console.log('调整库存:', row)\r\n  // TODO: 实现库存调整功能\r\n}\r\n\r\n// 库存明细\r\nconst handleStockDetail = (row) => {\r\n  console.log('查看库存明细:', row)\r\n  // TODO: 实现查看库存明细功能\r\n}\r\n\r\n// 分页大小改变\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  getStockList()\r\n}\r\n\r\n// 当前页改变\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  getStockList()\r\n}\r\n\r\n// 初始化\r\nonMounted(async () => {\r\n  await getWarehouses()\r\n  getStockList()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.warehouse-stock {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}