{"ast":null,"code":"import _objectSpread from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.from-entries.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url.to-json.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport Mock from 'mockjs';\n\n// 生成订单号\nvar generateOrderNo = function generateOrderNo() {\n  return Mock.mock({\n    'string|12': /[A-Z0-9]/\n  }).string;\n};\n\n// 生成手机号\nvar generatePhone = function generatePhone() {\n  return Mock.mock(/^1[3-9]\\d{9}$/);\n};\n\n// 生成物流跟踪数据\nvar generateTrackingData = function generateTrackingData(options) {\n  // 解析查询参数\n  var url = new URL(options.url, 'http://localhost');\n  var params = Object.fromEntries(url.searchParams);\n  var page = parseInt(params.page) || 1;\n  var limit = parseInt(params.limit) || 10;\n  var orderNo = params.orderNo;\n  var status = params.status;\n\n  // 生成列表数据\n  var list = [];\n  var statuses = ['pending', 'shipped', 'delivered', 'cancelled'];\n  var locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心'];\n  var descriptions = ['快件已到达仓库，等待发货', '快件已从仓库发出，正在运输中', '快件已到达转运中心，准备发往下一站', '快件正在派送中，请保持电话畅通', '快件已签收，感谢您的使用'];\n\n  // 生成当前页的数据\n  for (var i = 0; i < limit; i++) {\n    var currentStatus = status || statuses[Mock.Random.integer(0, 3)];\n    var currentOrderNo = orderNo || generateOrderNo();\n    var createTime = Mock.Random.datetime('yyyy-MM-dd HH:mm:ss');\n    var trackingTime = currentStatus === 'pending' ? null : Mock.Random.datetime('yyyy-MM-dd HH:mm:ss');\n    list.push({\n      id: Mock.Random.id(),\n      orderNo: currentOrderNo,\n      status: currentStatus,\n      consignee: Mock.Random.cname(),\n      consigneePhone: generatePhone(),\n      consigneeAddress: Mock.Random.county(true),\n      location: currentStatus === 'pending' ? null : Mock.Random.pick(locations),\n      description: currentStatus === 'pending' ? null : Mock.Random.pick(descriptions),\n      createTime: createTime,\n      trackingTime: trackingTime\n    });\n  }\n\n  // 过滤数据\n  var filteredList = list;\n  if (orderNo) {\n    filteredList = filteredList.filter(function (item) {\n      return item.orderNo.includes(orderNo);\n    });\n  }\n  if (status) {\n    filteredList = filteredList.filter(function (item) {\n      return item.status === status;\n    });\n  }\n  return {\n    code: 0,\n    message: 'success',\n    data: {\n      records: filteredList,\n      total: 100,\n      size: limit,\n      current: page\n    }\n  };\n};\n\n// 生成物流跟踪详情\nvar generateTrackingDetail = function generateTrackingDetail(orderNo) {\n  var status = Mock.Random.pick(['pending', 'shipped', 'delivered', 'cancelled']);\n  return {\n    code: 0,\n    message: 'success',\n    data: {\n      id: Mock.Random.id(),\n      orderNo: orderNo,\n      status: status,\n      consignee: Mock.Random.cname(),\n      consigneePhone: generatePhone(),\n      consigneeAddress: Mock.Random.county(true),\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\n    }\n  };\n};\n\n// 生成物流跟踪记录列表\nvar generateTrackingList = function generateTrackingList(orderNo) {\n  var count = Mock.Random.integer(1, 5);\n  var list = [];\n  var locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心'];\n  var descriptions = ['快件已到达仓库，等待发货', '快件已从仓库发出，正在运输中', '快件已到达转运中心，准备发往下一站', '快件正在派送中，请保持电话畅通', '快件已签收，感谢您的使用'];\n  for (var i = 0; i < count; i++) {\n    list.push({\n      id: Mock.Random.id(),\n      shipmentId: Mock.Random.id(),\n      orderNo: orderNo,\n      location: Mock.Random.pick(locations),\n      description: Mock.Random.pick(descriptions),\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\n    });\n  }\n  return {\n    code: 0,\n    message: 'success',\n    data: list\n  };\n};\n\n// 添加物流跟踪信息\nvar addTracking = function addTracking(options) {\n  var body = JSON.parse(options.body);\n  return {\n    code: 0,\n    message: 'success',\n    data: _objectSpread(_objectSpread({}, body), {}, {\n      id: Mock.Random.id(),\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\n    })\n  };\n};\n\n// 注册 Mock 接口\nMock.mock(/\\/api\\/logistics\\/tracking\\/page(\\?.+)?$/, 'get', generateTrackingData);\nMock.mock(/\\/api\\/logistics\\/shipment\\/\\w+$/, 'get', function (options) {\n  var orderNo = options.url.split('/').pop();\n  return generateTrackingDetail(orderNo);\n});\nMock.mock(/\\/api\\/logistics\\/tracking\\/list\\/\\w+$/, 'get', function (options) {\n  var orderNo = options.url.split('/').pop();\n  return generateTrackingList(orderNo);\n});\nMock.mock('/api/logistics/tracking', 'post', addTracking);\nexport default {\n  generateTrackingData: generateTrackingData,\n  generateTrackingDetail: generateTrackingDetail,\n  generateTrackingList: generateTrackingList,\n  addTracking: addTracking\n};","map":{"version":3,"names":["Mock","generateOrderNo","mock","string","generatePhone","generateTrackingData","options","url","URL","params","Object","fromEntries","searchParams","page","parseInt","limit","orderNo","status","list","statuses","locations","descriptions","i","currentStatus","Random","integer","currentOrderNo","createTime","datetime","trackingTime","push","id","consignee","cname","consigneePhone","consigneeAddress","county","location","pick","description","filteredList","filter","item","includes","code","message","data","records","total","size","current","generateTrackingDetail","generateTrackingList","count","shipmentId","addTracking","body","JSON","parse","_objectSpread","split","pop"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/mock/logistics.js"],"sourcesContent":["import Mock from 'mockjs'\r\n\r\n// 生成订单号\r\nconst generateOrderNo = () => {\r\n  return Mock.mock({\r\n    'string|12': /[A-Z0-9]/\r\n  }).string\r\n}\r\n\r\n// 生成手机号\r\nconst generatePhone = () => {\r\n  return Mock.mock(/^1[3-9]\\d{9}$/)\r\n}\r\n\r\n// 生成物流跟踪数据\r\nconst generateTrackingData = (options) => {\r\n  // 解析查询参数\r\n  const url = new URL(options.url, 'http://localhost')\r\n  const params = Object.fromEntries(url.searchParams)\r\n  const page = parseInt(params.page) || 1\r\n  const limit = parseInt(params.limit) || 10\r\n  const orderNo = params.orderNo\r\n  const status = params.status\r\n\r\n  // 生成列表数据\r\n  const list = []\r\n  const statuses = ['pending', 'shipped', 'delivered', 'cancelled']\r\n  const locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心']\r\n  const descriptions = [\r\n    '快件已到达仓库，等待发货',\r\n    '快件已从仓库发出，正在运输中',\r\n    '快件已到达转运中心，准备发往下一站',\r\n    '快件正在派送中，请保持电话畅通',\r\n    '快件已签收，感谢您的使用'\r\n  ]\r\n\r\n  // 生成当前页的数据\r\n  for (let i = 0; i < limit; i++) {\r\n    const currentStatus = status || statuses[Mock.Random.integer(0, 3)]\r\n    const currentOrderNo = orderNo || generateOrderNo()\r\n    const createTime = Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    const trackingTime = currentStatus === 'pending' ? null : Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    \r\n    list.push({\r\n      id: Mock.Random.id(),\r\n      orderNo: currentOrderNo,\r\n      status: currentStatus,\r\n      consignee: Mock.Random.cname(),\r\n      consigneePhone: generatePhone(),\r\n      consigneeAddress: Mock.Random.county(true),\r\n      location: currentStatus === 'pending' ? null : Mock.Random.pick(locations),\r\n      description: currentStatus === 'pending' ? null : Mock.Random.pick(descriptions),\r\n      createTime,\r\n      trackingTime\r\n    })\r\n  }\r\n\r\n  // 过滤数据\r\n  let filteredList = list\r\n  if (orderNo) {\r\n    filteredList = filteredList.filter(item => item.orderNo.includes(orderNo))\r\n  }\r\n  if (status) {\r\n    filteredList = filteredList.filter(item => item.status === status)\r\n  }\r\n\r\n  return {\r\n    code: 0,\r\n    message: 'success',\r\n    data: {\r\n      records: filteredList,\r\n      total: 100,\r\n      size: limit,\r\n      current: page\r\n    }\r\n  }\r\n}\r\n\r\n// 生成物流跟踪详情\r\nconst generateTrackingDetail = (orderNo) => {\r\n  const status = Mock.Random.pick(['pending', 'shipped', 'delivered', 'cancelled'])\r\n  \r\n  return {\r\n    code: 0,\r\n    message: 'success',\r\n    data: {\r\n      id: Mock.Random.id(),\r\n      orderNo,\r\n      status,\r\n      consignee: Mock.Random.cname(),\r\n      consigneePhone: generatePhone(),\r\n      consigneeAddress: Mock.Random.county(true),\r\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    }\r\n  }\r\n}\r\n\r\n// 生成物流跟踪记录列表\r\nconst generateTrackingList = (orderNo) => {\r\n  const count = Mock.Random.integer(1, 5)\r\n  const list = []\r\n  const locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心']\r\n  const descriptions = [\r\n    '快件已到达仓库，等待发货',\r\n    '快件已从仓库发出，正在运输中',\r\n    '快件已到达转运中心，准备发往下一站',\r\n    '快件正在派送中，请保持电话畅通',\r\n    '快件已签收，感谢您的使用'\r\n  ]\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    list.push({\r\n      id: Mock.Random.id(),\r\n      shipmentId: Mock.Random.id(),\r\n      orderNo,\r\n      location: Mock.Random.pick(locations),\r\n      description: Mock.Random.pick(descriptions),\r\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    })\r\n  }\r\n\r\n  return {\r\n    code: 0,\r\n    message: 'success',\r\n    data: list\r\n  }\r\n}\r\n\r\n// 添加物流跟踪信息\r\nconst addTracking = (options) => {\r\n  const body = JSON.parse(options.body)\r\n  return {\r\n    code: 0,\r\n    message: 'success',\r\n    data: {\r\n      ...body,\r\n      id: Mock.Random.id(),\r\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    }\r\n  }\r\n}\r\n\r\n// 注册 Mock 接口\r\nMock.mock(/\\/api\\/logistics\\/tracking\\/page(\\?.+)?$/, 'get', generateTrackingData)\r\nMock.mock(/\\/api\\/logistics\\/shipment\\/\\w+$/, 'get', (options) => {\r\n  const orderNo = options.url.split('/').pop()\r\n  return generateTrackingDetail(orderNo)\r\n})\r\nMock.mock(/\\/api\\/logistics\\/tracking\\/list\\/\\w+$/, 'get', (options) => {\r\n  const orderNo = options.url.split('/').pop()\r\n  return generateTrackingList(orderNo)\r\n})\r\nMock.mock('/api/logistics/tracking', 'post', addTracking)\r\n\r\nexport default {\r\n  generateTrackingData,\r\n  generateTrackingDetail,\r\n  generateTrackingList,\r\n  addTracking\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}