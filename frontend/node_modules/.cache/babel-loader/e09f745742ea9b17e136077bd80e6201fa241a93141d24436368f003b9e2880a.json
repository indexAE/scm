{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineStore } from 'pinia';\nexport var usePermissionStore = defineStore('permission', {\n  state: function state() {\n    return {\n      roles: [],\n      permissions: []\n    };\n  },\n  getters: {\n    // 检查是否有权限\n    hasPermission: function hasPermission(state) {\n      return function (module, action) {\n        return state.permissions.some(function (permission) {\n          return permission.module === module && permission.action === action;\n        });\n      };\n    },\n    // 检查是否有角色\n    hasRole: function hasRole(state) {\n      return function (roleCode) {\n        return state.roles.some(function (role) {\n          return role.roleCode === roleCode;\n        });\n      };\n    },\n    // 是否是管理员\n    isAdmin: function isAdmin(state) {\n      return state.roles.some(function (role) {\n        return role.roleCode === 'ROLE_ADMIN';\n      });\n    }\n  },\n  actions: {\n    // 设置角色和权限\n    setRolesAndPermissions: function setRolesAndPermissions(roles, permissions) {\n      this.roles = roles;\n      this.permissions = permissions;\n    },\n    // 清除角色和权限\n    clearRolesAndPermissions: function clearRolesAndPermissions() {\n      this.roles = [];\n      this.permissions = [];\n    },\n    // 获取用户的角色和权限\n    fetchUserPermissions: function fetchUserPermissions() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://127.0.0.1:8080/api/users/current/permissions', {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              result = _context.sent;\n              if (result.code === 0 && result.data) {\n                _this.setRolesAndPermissions(result.data.roles, result.data.permissions);\n              }\n              _context.next = 13;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取用户权限失败:', _context.t0);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 10]]);\n      }))();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","usePermissionStore","state","roles","permissions","getters","hasPermission","module","action","some","permission","hasRole","roleCode","role","isAdmin","actions","setRolesAndPermissions","clearRolesAndPermissions","fetchUserPermissions","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","headers","credentials","sent","json","code","data","t0","console","error","stop"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/stores/permission.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\nexport const usePermissionStore = defineStore('permission', {\r\n  state: () => ({\r\n    roles: [],\r\n    permissions: []\r\n  }),\r\n\r\n  getters: {\r\n    // 检查是否有权限\r\n    hasPermission: (state) => (module, action) => {\r\n      return state.permissions.some(permission => \r\n        permission.module === module && permission.action === action\r\n      )\r\n    },\r\n\r\n    // 检查是否有角色\r\n    hasRole: (state) => (roleCode) => {\r\n      return state.roles.some(role => role.roleCode === roleCode)\r\n    },\r\n\r\n    // 是否是管理员\r\n    isAdmin: (state) => {\r\n      return state.roles.some(role => role.roleCode === 'ROLE_ADMIN')\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // 设置角色和权限\r\n    setRolesAndPermissions(roles, permissions) {\r\n      this.roles = roles\r\n      this.permissions = permissions\r\n    },\r\n\r\n    // 清除角色和权限\r\n    clearRolesAndPermissions() {\r\n      this.roles = []\r\n      this.permissions = []\r\n    },\r\n\r\n    // 获取用户的角色和权限\r\n    async fetchUserPermissions() {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8080/api/users/current/permissions', {\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        })\r\n        const result = await response.json()\r\n        if (result.code === 0 && result.data) {\r\n          this.setRolesAndPermissions(result.data.roles, result.data.permissions)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取用户权限失败:', error)\r\n      }\r\n    }\r\n  }\r\n}) "],"mappings":";;;;;;AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,IAAMC,kBAAkB,GAAGD,WAAW,CAAC,YAAY,EAAE;EAC1DE,KAAK,EAAE,SAAPA,KAAKA,CAAA;IAAA,OAAS;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE;IACf,CAAC;EAAA,CAAC;EAEFC,OAAO,EAAE;IACP;IACAC,aAAa,EAAE,SAAfA,aAAaA,CAAGJ,KAAK;MAAA,OAAK,UAACK,MAAM,EAAEC,MAAM,EAAK;QAC5C,OAAON,KAAK,CAACE,WAAW,CAACK,IAAI,CAAC,UAAAC,UAAU;UAAA,OACtCA,UAAU,CAACH,MAAM,KAAKA,MAAM,IAAIG,UAAU,CAACF,MAAM,KAAKA,MAAM;QAAA,CAC9D,CAAC;MACH,CAAC;IAAA;IAED;IACAG,OAAO,EAAE,SAATA,OAAOA,CAAGT,KAAK;MAAA,OAAK,UAACU,QAAQ,EAAK;QAChC,OAAOV,KAAK,CAACC,KAAK,CAACM,IAAI,CAAC,UAAAI,IAAI;UAAA,OAAIA,IAAI,CAACD,QAAQ,KAAKA,QAAQ;QAAA,EAAC;MAC7D,CAAC;IAAA;IAED;IACAE,OAAO,EAAE,SAATA,OAAOA,CAAGZ,KAAK,EAAK;MAClB,OAAOA,KAAK,CAACC,KAAK,CAACM,IAAI,CAAC,UAAAI,IAAI;QAAA,OAAIA,IAAI,CAACD,QAAQ,KAAK,YAAY;MAAA,EAAC;IACjE;EACF,CAAC;EAEDG,OAAO,EAAE;IACP;IACAC,sBAAsB,WAAtBA,sBAAsBA,CAACb,KAAK,EAAEC,WAAW,EAAE;MACzC,IAAI,CAACD,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAChC,CAAC;IAED;IACAa,wBAAwB,WAAxBA,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACd,KAAK,GAAG,EAAE;MACf,IAAI,CAACC,WAAW,GAAG,EAAE;IACvB,CAAC;IAED;IACMc,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,MAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEFC,KAAK,CAAC,qDAAqD,EAAE;gBAClFC,OAAO,EAAE;kBACP,QAAQ,EAAE;gBACZ,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cALIT,QAAQ,GAAAI,QAAA,CAAAM,IAAA;cAAAN,QAAA,CAAAE,IAAA;cAAA,OAMON,QAAQ,CAACW,IAAI,CAAC,CAAC;YAAA;cAA9BV,MAAM,GAAAG,QAAA,CAAAM,IAAA;cACZ,IAAIT,MAAM,CAACW,IAAI,KAAK,CAAC,IAAIX,MAAM,CAACY,IAAI,EAAE;gBACpClB,KAAI,CAACH,sBAAsB,CAACS,MAAM,CAACY,IAAI,CAAClC,KAAK,EAAEsB,MAAM,CAACY,IAAI,CAACjC,WAAW,CAAC;cACzE;cAACwB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;cAEDW,OAAO,CAACC,KAAK,CAAC,WAAW,EAAAZ,QAAA,CAAAU,EAAO,CAAC;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAa,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAErC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}