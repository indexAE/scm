{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"order-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"items-section\"\n};\nvar _hoisted_4 = {\n  \"class\": \"items-header\"\n};\nvar _hoisted_5 = {\n  \"class\": \"total-amount\"\n};\nvar _hoisted_6 = {\n  \"class\": \"form-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($setup.isEdit ? '编辑采购订单' : '新建采购订单'), 1 /* TEXT */)])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-width\": \"100px\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" 基本信息 \"), _createVNode(_component_el_form_item, {\n            label: \"供应商\",\n            prop: \"supplierId\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.form.supplierId,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.form.supplierId = $event;\n                }),\n                placeholder: \"请选择供应商\",\n                onChange: $setup.handleSupplierChange\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.suppliers, function (item) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: item.id,\n                      label: item.name,\n                      value: item.id\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"采购员\",\n            prop: \"purchaser\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.form.purchaserId,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.form.purchaserId = $event;\n                }),\n                placeholder: \"请选择采购员\",\n                loading: $setup.purchaserLoading,\n                onChange: $setup.handlePurchaserChange\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.purchasers, function (item) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: item.id,\n                      label: item.name,\n                      value: item.id\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\", \"loading\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"预计交付日期\",\n            prop: \"expectedDeliveryDate\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_date_picker, {\n                modelValue: $setup.form.expectedDeliveryDate,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.form.expectedDeliveryDate = $event;\n                }),\n                type: \"date\",\n                placeholder: \"选择日期\",\n                \"disabled-date\": $setup.disabledDate\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"备注\",\n            prop: \"remark\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.remark,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.form.remark = $event;\n                }),\n                type: \"textarea\",\n                rows: 2,\n                placeholder: \"请输入备注信息\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 商品明细 \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"商品明细\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $setup.handleAddItem\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[4] || (_cache[4] = [_createTextVNode(\"添加商品\")]);\n            }),\n            _: 1 /* STABLE */\n          })]), _createVNode(_component_el_table, {\n            data: $setup.form.items,\n            border: \"\",\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_table_column, {\n                label: \"商品名称\",\n                width: \"220\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createVNode(_component_el_select, {\n                    modelValue: scope.row.productId,\n                    \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                      return scope.row.productId = $event;\n                    },\n                    placeholder: \"请选择商品\",\n                    onChange: function onChange(val) {\n                      return $setup.handleProductChange(val, scope.$index);\n                    }\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, function (item) {\n                        return _openBlock(), _createBlock(_component_el_option, {\n                          key: item.id,\n                          label: item.name,\n                          value: item.id\n                        }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                      }), 128 /* KEYED_FRAGMENT */))];\n                    }),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"productSpec\",\n                label: \"规格\",\n                width: \"150\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"unit\",\n                label: \"单位\",\n                width: \"180\"\n              }), _createVNode(_component_el_table_column, {\n                label: \"数量\",\n                width: \"200\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: scope.row.quantity,\n                    \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                      return scope.row.quantity = $event;\n                    },\n                    min: 1,\n                    onChange: function onChange($event) {\n                      return $setup.calculateItemAmount(scope.$index);\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                label: \"单价\",\n                width: \"200\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: scope.row.price,\n                    \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                      return scope.row.price = $event;\n                    },\n                    min: 0,\n                    precision: 2,\n                    onChange: function onChange($event) {\n                      return $setup.calculateItemAmount(scope.$index);\n                    }\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"amount\",\n                label: \"金额\",\n                width: \"150\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createTextVNode(_toDisplayString($setup.formatAmount(scope.row.amount)), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                label: \"操作\",\n                width: \"100\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createVNode(_component_el_button, {\n                    type: \"danger\",\n                    circle: \"\",\n                    onClick: function onClick($event) {\n                      return $setup.handleDeleteItem(scope.$index);\n                    }\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_icon, null, {\n                        \"default\": _withCtx(function () {\n                          return [_createVNode($setup[\"Delete\"])];\n                        }),\n                        _: 1 /* STABLE */\n                      })];\n                    }),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"data\"])]), _createCommentVNode(\" 合计金额 \"), _createElementVNode(\"div\", _hoisted_5, \" 合计金额：\" + _toDisplayString($setup.formatAmount($setup.totalAmount)), 1 /* TEXT */), _createCommentVNode(\" 表单操作按钮 \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_button, {\n            onClick: $setup.handleCancel\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[6] || (_cache[6] = [_createTextVNode(\"取消\")]);\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $setup.handleSubmit\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[7] || (_cache[7] = [_createTextVNode(\"提交\")]);\n            }),\n            _: 1 /* STABLE */\n          })])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_toDisplayString","$setup","isEdit","_component_el_form","ref","model","form","rules","_createCommentVNode","_component_el_form_item","label","prop","_component_el_select","modelValue","supplierId","_cache","$event","placeholder","onChange","handleSupplierChange","_Fragment","_renderList","suppliers","item","_createBlock","_component_el_option","key","id","name","value","_","purchaserId","loading","purchaserLoading","handlePurchaserChange","purchasers","_component_el_date_picker","expectedDeliveryDate","type","disabledDate","_component_el_input","remark","rows","_hoisted_3","_hoisted_4","_component_el_button","onClick","handleAddItem","_createTextVNode","_component_el_table","data","items","border","style","_component_el_table_column","width","scope","row","productId","onUpdateModelValue","val","handleProductChange","$index","products","_component_el_input_number","quantity","min","calculateItemAmount","price","precision","formatAmount","amount","circle","handleDeleteItem","_component_el_icon","_hoisted_5","totalAmount","_hoisted_6","handleCancel","handleSubmit"],"sources":["C:\\Users\\indexae\\Desktop\\scm日志\\scm\\frontend\\src\\views\\purchase\\order\\form.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-form\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>{{ isEdit ? '编辑采购订单' : '新建采购订单' }}</span>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <!-- 基本信息 -->\r\n        <el-form-item label=\"供应商\" prop=\"supplierId\">\r\n          <el-select v-model=\"form.supplierId\" placeholder=\"请选择供应商\" @change=\"handleSupplierChange\">\r\n            <el-option\r\n              v-for=\"item in suppliers\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"采购员\" prop=\"purchaser\">\r\n          <el-select \r\n            v-model=\"form.purchaserId\" \r\n            placeholder=\"请选择采购员\"\r\n            :loading=\"purchaserLoading\"\r\n            @change=\"handlePurchaserChange\"\r\n          >\r\n            <el-option\r\n              v-for=\"item in purchasers\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"预计交付日期\" prop=\"expectedDeliveryDate\">\r\n          <el-date-picker\r\n            v-model=\"form.expectedDeliveryDate\"\r\n            type=\"date\"\r\n            placeholder=\"选择日期\"\r\n            :disabled-date=\"disabledDate\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input\r\n            v-model=\"form.remark\"\r\n            type=\"textarea\"\r\n            :rows=\"2\"\r\n            placeholder=\"请输入备注信息\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <!-- 商品明细 -->\r\n        <div class=\"items-section\">\r\n          <div class=\"items-header\">\r\n            <h3>商品明细</h3>\r\n            <el-button type=\"primary\" @click=\"handleAddItem\">添加商品</el-button>\r\n          </div>\r\n\r\n          <el-table :data=\"form.items\" border style=\"width: 100%\">\r\n            <el-table-column label=\"商品名称\" width=\"220\">\r\n              <template #default=\"scope\">\r\n                <el-select \r\n                  v-model=\"scope.row.productId\" \r\n                  placeholder=\"请选择商品\"\r\n                  @change=\"(val) => handleProductChange(val, scope.$index)\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"item in products\"\r\n                    :key=\"item.id\"\r\n                    :label=\"item.name\"\r\n                    :value=\"item.id\"\r\n                  />\r\n                </el-select>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"productSpec\" label=\"规格\" width=\"150\" />\r\n            <el-table-column prop=\"unit\" label=\"单位\" width=\"180\" />\r\n            <el-table-column label=\"数量\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <el-input-number \r\n                  v-model=\"scope.row.quantity\" \r\n                  :min=\"1\"\r\n                  @change=\"calculateItemAmount(scope.$index)\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"单价\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <el-input-number \r\n                  v-model=\"scope.row.price\" \r\n                  :min=\"0\"\r\n                  :precision=\"2\"\r\n                  @change=\"calculateItemAmount(scope.$index)\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"amount\" label=\"金额\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                {{ formatAmount(scope.row.amount) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"100\">\r\n              <template #default=\"scope\">\r\n                <el-button \r\n                  type=\"danger\" \r\n                  circle\r\n                  @click=\"handleDeleteItem(scope.$index)\"\r\n                >\r\n                  <el-icon><Delete /></el-icon>\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n\r\n        <!-- 合计金额 -->\r\n        <div class=\"total-amount\">\r\n          合计金额：{{ formatAmount(totalAmount) }}\r\n        </div>\r\n\r\n        <!-- 表单操作按钮 -->\r\n        <div class=\"form-actions\">\r\n          <el-button @click=\"handleCancel\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { Delete } from '@element-plus/icons-vue'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst formRef = ref(null)\r\n\r\n// 是否为编辑模式\r\nconst isEdit = computed(() => route.query.id !== undefined)\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  supplierId: '',\r\n  supplier: '',\r\n  purchaserId: '',\r\n  purchaser: '',\r\n  expectedDeliveryDate: '',\r\n  remark: '',\r\n  items: []\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  supplierId: [\r\n    { required: true, message: '请选择供应商', trigger: 'change' }\r\n  ],\r\n  purchaserId: [\r\n    { required: true, message: '请选择采购员', trigger: 'change' }\r\n  ],\r\n  expectedDeliveryDate: [\r\n    { required: true, message: '请选择预计交付日期', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 供应商列表\r\nconst suppliers = ref([])\r\n// 采购员列表\r\nconst purchasers = ref([])\r\nconst purchaserLoading = ref(false)\r\n// 商品列表\r\nconst products = ref([])\r\n\r\n// 获取供应商列表\r\nconst getSuppliers = async () => {\r\n  try {\r\n    const response = await fetch('/api/suppliers')\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      suppliers.value = result.data\r\n    }\r\n  } catch (error) {\r\n    console.error('获取供应商列表失败:', error)\r\n  }\r\n}\r\n\r\n// 获取采购员列表\r\nconst getPurchasers = async () => {\r\n  purchaserLoading.value = true\r\n  try {\r\n    const response = await fetch('/api/purchasers?status=enabled')\r\n    const result = await response.json()\r\n    \r\n    if (result.code === 0) {\r\n      purchasers.value = result.data.list || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取采购员列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取采购员列表失败:', error)\r\n    ElMessage.error('获取采购员列表失败')\r\n  } finally {\r\n    purchaserLoading.value = false\r\n  }\r\n}\r\n\r\n// 获取商品列表\r\nconst getProducts = async () => {\r\n  try {\r\n    const params = new URLSearchParams({\r\n      pageNum: '1',\r\n      pageSize: '1000'\r\n    })\r\n    const response = await fetch(`/api/products?${params.toString()}`)\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      products.value = result.data.list || []\r\n    }\r\n  } catch (error) {\r\n    console.error('获取商品列表失败:', error)\r\n  }\r\n}\r\n\r\n// 处理供应商选择变化\r\nconst handleSupplierChange = (supplierId) => {\r\n  const supplier = suppliers.value.find(item => item.id === supplierId)\r\n  if (supplier) {\r\n    form.supplier = supplier.name\r\n  }\r\n}\r\n\r\n// 处理采购员选择变化\r\nconst handlePurchaserChange = (value) => {\r\n  const purchaser = purchasers.value.find(p => p.id === value)\r\n  if (purchaser) {\r\n    form.purchaser = purchaser.name\r\n  }\r\n}\r\n\r\n// 禁用今天之前的日期\r\nconst disabledDate = (time) => {\r\n  return time.getTime() < Date.now() - 8.64e7\r\n}\r\n\r\n// 处理商品选择变化\r\nconst handleProductChange = (productId, index) => {\r\n  const product = products.value.find(item => item.id === productId)\r\n  if (product) {\r\n    form.items[index] = {\r\n      ...form.items[index],\r\n      productName: product.name,\r\n      productSpec: product.spec,\r\n      unit: product.unit,\r\n      price: product.price\r\n    }\r\n    calculateItemAmount(index)\r\n  }\r\n}\r\n\r\n// 添加商品明细\r\nconst handleAddItem = () => {\r\n  form.items.push({\r\n    productId: '',\r\n    productName: '',\r\n    productSpec: '',\r\n    unit: '',\r\n    quantity: 1,\r\n    price: 0,\r\n    amount: 0\r\n  })\r\n}\r\n\r\n// 删除商品明细\r\nconst handleDeleteItem = (index) => {\r\n  form.items.splice(index, 1)\r\n}\r\n\r\n// 计算商品金额\r\nconst calculateItemAmount = (index) => {\r\n  const item = form.items[index]\r\n  item.amount = item.quantity * item.price\r\n}\r\n\r\n// 格式化金额\r\nconst formatAmount = (amount) => {\r\n  if (!amount) return '0.00'\r\n  return Number(amount).toFixed(2)\r\n}\r\n\r\n// 计算总金额\r\nconst totalAmount = computed(() => {\r\n  return form.items.reduce((sum, item) => sum + (item.amount || 0), 0)\r\n})\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      if (form.items.length === 0) {\r\n        ElMessage.warning('请至少添加一个商品')\r\n        return\r\n      }\r\n\r\n      try {\r\n        // 生成订单编号\r\n        const timestamp = new Date().getTime()\r\n        const code = `PO${timestamp}`\r\n\r\n        const url = isEdit.value \r\n          ? `/api/purchase/orders/${route.query.id}`\r\n          : '/api/purchase/orders'\r\n        \r\n        const method = isEdit.value ? 'PUT' : 'POST'\r\n        const response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            ...form,\r\n            code,\r\n            amount: totalAmount.value,\r\n            status: 'pending'\r\n          })\r\n        })\r\n\r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          ElMessage.success(isEdit.value ? '更新成功' : '创建成功')\r\n          router.push('/dashboard/purchase/order')\r\n        } else {\r\n          ElMessage.error(result.message || (isEdit.value ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(isEdit.value ? '更新采购订单失败:' : '创建采购订单失败:', error)\r\n        ElMessage.error(isEdit.value ? '更新失败' : '创建失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 取消\r\nconst handleCancel = () => {\r\n  ElMessageBox.confirm(\r\n    '确认放弃当前编辑的内容？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(() => {\r\n    router.push('/dashboard/purchase/order')\r\n  }).catch(() => {})\r\n}\r\n\r\n// 获取采购订单详情\r\nconst getOrderDetail = async (id) => {\r\n  try {\r\n    const response = await fetch(`/api/purchase/orders/${id}`)\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      const { supplierId, supplier, purchaserId, purchaser, expectedDeliveryDate, remark, items } = result.data\r\n      Object.assign(form, { supplierId, supplier, purchaserId, purchaser, expectedDeliveryDate, remark, items })\r\n    }\r\n  } catch (error) {\r\n    console.error('获取采购订单详情失败:', error)\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await Promise.all([getSuppliers(), getPurchasers(), getProducts()])\r\n  if (isEdit.value) {\r\n    await getOrderDetail(route.query.id)\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.order-form {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.items-section {\r\n  margin: 20px 0;\r\n}\r\n\r\n.items-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.total-amount {\r\n  text-align: right;\r\n  margin: 20px 0;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n</style> "],"mappings":";;;EACO,SAAM;AAAY;;EAGZ,SAAM;AAAa;;EAqDnB,SAAM;AAAe;;EACnB,SAAM;AAAc;;EA+DtB,SAAM;AAAc;;EAKpB,SAAM;AAAc;;;;;;;;;;;;;;uBA7H/BA,mBAAA,CAmIM,OAnINC,UAmIM,GAlIJC,YAAA,CAiIUC,kBAAA;IAjID,SAAM;EAAU;IACZC,MAAM,EAAAC,QAAA,CACf;MAAA,OAEM,CAFNC,mBAAA,CAEM,OAFNC,UAEM,GADJD,mBAAA,CAA+C,cAAAE,gBAAA,CAAtCC,MAAA,CAAAC,MAAM,uC;;IALzB,WAAAL,QAAA,CASM;MAAA,OAyHU,CAzHVH,YAAA,CAyHUS,kBAAA;QAzHDC,GAAG,EAAC,SAAS;QAAEC,KAAK,EAAEJ,MAAA,CAAAK,IAAI;QAAGC,KAAK,EAAEN,MAAA,CAAAM,KAAK;QAAE,aAAW,EAAC;;QATtE,WAAAV,QAAA,CAUQ;UAAA,OAAa,CAAbW,mBAAA,UAAa,EACbd,YAAA,CASee,uBAAA;YATDC,KAAK,EAAC,KAAK;YAACC,IAAI,EAAC;;YAXvC,WAAAd,QAAA,CAYU;cAAA,OAOY,CAPZH,YAAA,CAOYkB,oBAAA;gBAnBtBC,UAAA,EAY8BZ,MAAA,CAAAK,IAAI,CAACQ,UAAU;gBAZ7C,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAY8Bf,MAAA,CAAAK,IAAI,CAACQ,UAAU,GAAAE,MAAA;gBAAA;gBAAEC,WAAW,EAAC,QAAQ;gBAAEC,QAAM,EAAEjB,MAAA,CAAAkB;;gBAZ7E,WAAAtB,QAAA,CAcc;kBAAA,OAAyB,E,kBAD3BL,mBAAA,CAKE4B,SAAA,QAlBdC,WAAA,CAc6BpB,MAAA,CAAAqB,SAAS,EAdtC,UAcqBC,IAAI;yCADbC,YAAA,CAKEC,oBAAA;sBAHCC,GAAG,EAAEH,IAAI,CAACI,EAAE;sBACZjB,KAAK,EAAEa,IAAI,CAACK,IAAI;sBAChBC,KAAK,EAAEN,IAAI,CAACI;;;;gBAjB3BG,CAAA;;;YAAAA,CAAA;cAsBQpC,YAAA,CAcee,uBAAA;YAdDC,KAAK,EAAC,KAAK;YAACC,IAAI,EAAC;;YAtBvC,WAAAd,QAAA,CAuBU;cAAA,OAYY,CAZZH,YAAA,CAYYkB,oBAAA;gBAnCtBC,UAAA,EAwBqBZ,MAAA,CAAAK,IAAI,CAACyB,WAAW;gBAxBrC,uBAAAhB,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAwBqBf,MAAA,CAAAK,IAAI,CAACyB,WAAW,GAAAf,MAAA;gBAAA;gBACzBC,WAAW,EAAC,QAAQ;gBACnBe,OAAO,EAAE/B,MAAA,CAAAgC,gBAAgB;gBACzBf,QAAM,EAAEjB,MAAA,CAAAiC;;gBA3BrB,WAAArC,QAAA,CA8Bc;kBAAA,OAA0B,E,kBAD5BL,mBAAA,CAKE4B,SAAA,QAlCdC,WAAA,CA8B6BpB,MAAA,CAAAkC,UAAU,EA9BvC,UA8BqBZ,IAAI;yCADbC,YAAA,CAKEC,oBAAA;sBAHCC,GAAG,EAAEH,IAAI,CAACI,EAAE;sBACZjB,KAAK,EAAEa,IAAI,CAACK,IAAI;sBAChBC,KAAK,EAAEN,IAAI,CAACI;;;;gBAjC3BG,CAAA;;;YAAAA,CAAA;cAsCQpC,YAAA,CAOee,uBAAA;YAPDC,KAAK,EAAC,QAAQ;YAACC,IAAI,EAAC;;YAtC1C,WAAAd,QAAA,CAuCU;cAAA,OAKE,CALFH,YAAA,CAKE0C,yBAAA;gBA5CZvB,UAAA,EAwCqBZ,MAAA,CAAAK,IAAI,CAAC+B,oBAAoB;gBAxC9C,uBAAAtB,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAwCqBf,MAAA,CAAAK,IAAI,CAAC+B,oBAAoB,GAAArB,MAAA;gBAAA;gBAClCsB,IAAI,EAAC,MAAM;gBACXrB,WAAW,EAAC,MAAM;gBACjB,eAAa,EAAEhB,MAAA,CAAAsC;;;YA3C5BT,CAAA;cA+CQpC,YAAA,CAOee,uBAAA;YAPDC,KAAK,EAAC,IAAI;YAACC,IAAI,EAAC;;YA/CtC,WAAAd,QAAA,CAgDU;cAAA,OAKE,CALFH,YAAA,CAKE8C,mBAAA;gBArDZ3B,UAAA,EAiDqBZ,MAAA,CAAAK,IAAI,CAACmC,MAAM;gBAjDhC,uBAAA1B,MAAA,QAAAA,MAAA,gBAAAC,MAAA;kBAAA,OAiDqBf,MAAA,CAAAK,IAAI,CAACmC,MAAM,GAAAzB,MAAA;gBAAA;gBACpBsB,IAAI,EAAC,UAAU;gBACdI,IAAI,EAAE,CAAC;gBACRzB,WAAW,EAAC;;;YApDxBa,CAAA;cAwDQtB,mBAAA,UAAa,EACbV,mBAAA,CA6DM,OA7DN6C,UA6DM,GA5DJ7C,mBAAA,CAGM,OAHN8C,UAGM,G,0BAFJ9C,mBAAA,CAAa,YAAT,MAAI,sBACRJ,YAAA,CAAiEmD,oBAAA;YAAtDP,IAAI,EAAC,SAAS;YAAEQ,OAAK,EAAE7C,MAAA,CAAA8C;;YA5D9C,WAAAlD,QAAA,CA4D6D;cAAA,OAAIkB,MAAA,QAAAA,MAAA,OA5DjEiC,gBAAA,CA4D6D,MAAI,E;;YA5DjElB,CAAA;gBA+DUpC,YAAA,CAsDWuD,mBAAA;YAtDAC,IAAI,EAAEjD,MAAA,CAAAK,IAAI,CAAC6C,KAAK;YAAEC,MAAM,EAAN,EAAM;YAACC,KAAmB,EAAnB;cAAA;YAAA;;YA/D9C,WAAAxD,QAAA,CAgEY;cAAA,OAekB,CAflBH,YAAA,CAekB4D,0BAAA;gBAfD5C,KAAK,EAAC,MAAM;gBAAC6C,KAAK,EAAC;;gBACvB,WAAO1D,QAAA,CAChB,UAWY2D,KAZW;kBAAA,QACvB9D,YAAA,CAWYkB,oBAAA;oBA7E5BC,UAAA,EAmE2B2C,KAAK,CAACC,GAAG,CAACC,SAAS;oBAnE9C,gCAAAC,mBAAA3C,MAAA;sBAAA,OAmE2BwC,KAAK,CAACC,GAAG,CAACC,SAAS,GAAA1C,MAAA;oBAAA;oBAC5BC,WAAW,EAAC,OAAO;oBAClBC,QAAM,WAANA,QAAMA,CAAG0C,GAAG;sBAAA,OAAK3D,MAAA,CAAA4D,mBAAmB,CAACD,GAAG,EAAEJ,KAAK,CAACM,MAAM;oBAAA;;oBArEzE,WAAAjE,QAAA,CAwEoB;sBAAA,OAAwB,E,kBAD1BL,mBAAA,CAKE4B,SAAA,QA5EpBC,WAAA,CAwEmCpB,MAAA,CAAA8D,QAAQ,EAxE3C,UAwE2BxC,IAAI;6CADbC,YAAA,CAKEC,oBAAA;0BAHCC,GAAG,EAAEH,IAAI,CAACI,EAAE;0BACZjB,KAAK,EAAEa,IAAI,CAACK,IAAI;0BAChBC,KAAK,EAAEN,IAAI,CAACI;;;;oBA3EjCG,CAAA;;;gBAAAA,CAAA;kBAgFYpC,YAAA,CAA6D4D,0BAAA;gBAA5C3C,IAAI,EAAC,aAAa;gBAACD,KAAK,EAAC,IAAI;gBAAC6C,KAAK,EAAC;kBACrD7D,YAAA,CAAsD4D,0BAAA;gBAArC3C,IAAI,EAAC,MAAM;gBAACD,KAAK,EAAC,IAAI;gBAAC6C,KAAK,EAAC;kBAC9C7D,YAAA,CAQkB4D,0BAAA;gBARD5C,KAAK,EAAC,IAAI;gBAAC6C,KAAK,EAAC;;gBACrB,WAAO1D,QAAA,CAChB,UAIE2D,KALqB;kBAAA,QACvB9D,YAAA,CAIEsE,0BAAA;oBAxFlBnD,UAAA,EAqF2B2C,KAAK,CAACC,GAAG,CAACQ,QAAQ;oBArF7C,gCAAAN,mBAAA3C,MAAA;sBAAA,OAqF2BwC,KAAK,CAACC,GAAG,CAACQ,QAAQ,GAAAjD,MAAA;oBAAA;oBAC1BkD,GAAG,EAAE,CAAC;oBACNhD,QAAM,WAANA,QAAMA,CAAAF,MAAA;sBAAA,OAAEf,MAAA,CAAAkE,mBAAmB,CAACX,KAAK,CAACM,MAAM;oBAAA;;;gBAvF3DhC,CAAA;kBA2FYpC,YAAA,CASkB4D,0BAAA;gBATD5C,KAAK,EAAC,IAAI;gBAAC6C,KAAK,EAAC;;gBACrB,WAAO1D,QAAA,CAChB,UAKE2D,KANqB;kBAAA,QACvB9D,YAAA,CAKEsE,0BAAA;oBAlGlBnD,UAAA,EA8F2B2C,KAAK,CAACC,GAAG,CAACW,KAAK;oBA9F1C,gCAAAT,mBAAA3C,MAAA;sBAAA,OA8F2BwC,KAAK,CAACC,GAAG,CAACW,KAAK,GAAApD,MAAA;oBAAA;oBACvBkD,GAAG,EAAE,CAAC;oBACNG,SAAS,EAAE,CAAC;oBACZnD,QAAM,WAANA,QAAMA,CAAAF,MAAA;sBAAA,OAAEf,MAAA,CAAAkE,mBAAmB,CAACX,KAAK,CAACM,MAAM;oBAAA;;;gBAjG3DhC,CAAA;kBAqGYpC,YAAA,CAIkB4D,0BAAA;gBAJD3C,IAAI,EAAC,QAAQ;gBAACD,KAAK,EAAC,IAAI;gBAAC6C,KAAK,EAAC;;gBACnC,WAAO1D,QAAA,CAChB,UAAoC2D,KADb;kBAAA,QAtGvCR,gBAAA,CAAAhD,gBAAA,CAuGmBC,MAAA,CAAAqE,YAAY,CAACd,KAAK,CAACC,GAAG,CAACc,MAAM,kB;;gBAvGhDzC,CAAA;kBA0GYpC,YAAA,CAUkB4D,0BAAA;gBAVD5C,KAAK,EAAC,IAAI;gBAAC6C,KAAK,EAAC;;gBACrB,WAAO1D,QAAA,CAChB,UAMY2D,KAPW;kBAAA,QACvB9D,YAAA,CAMYmD,oBAAA;oBALVP,IAAI,EAAC,QAAQ;oBACbkC,MAAM,EAAN,EAAM;oBACL1B,OAAK,WAALA,OAAKA,CAAA9B,MAAA;sBAAA,OAAEf,MAAA,CAAAwE,gBAAgB,CAACjB,KAAK,CAACM,MAAM;oBAAA;;oBA/GvD,WAAAjE,QAAA,CAiHkB;sBAAA,OAA6B,CAA7BH,YAAA,CAA6BgF,kBAAA;wBAjH/C,WAAA7E,QAAA,CAiH2B;0BAAA,OAAU,CAAVH,YAAA,CAAUO,MAAA,Y;;wBAjHrC6B,CAAA;;;oBAAAA,CAAA;;;gBAAAA,CAAA;;;YAAAA,CAAA;yCAwHQtB,mBAAA,UAAa,EACbV,mBAAA,CAEM,OAFN6E,UAEM,EAFoB,QACnB,GAAA3E,gBAAA,CAAGC,MAAA,CAAAqE,YAAY,CAACrE,MAAA,CAAA2E,WAAW,mBAGlCpE,mBAAA,YAAe,EACfV,mBAAA,CAGM,OAHN+E,UAGM,GAFJnF,YAAA,CAA+CmD,oBAAA;YAAnCC,OAAK,EAAE7C,MAAA,CAAA6E;UAAY;YA/HzC,WAAAjF,QAAA,CA+H2C;cAAA,OAAEkB,MAAA,QAAAA,MAAA,OA/H7CiC,gBAAA,CA+H2C,IAAE,E;;YA/H7ClB,CAAA;cAgIUpC,YAAA,CAA8DmD,oBAAA;YAAnDP,IAAI,EAAC,SAAS;YAAEQ,OAAK,EAAE7C,MAAA,CAAA8E;;YAhI5C,WAAAlF,QAAA,CAgI0D;cAAA,OAAEkB,MAAA,QAAAA,MAAA,OAhI5DiC,gBAAA,CAgI0D,IAAE,E;;YAhI5DlB,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}