{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Mock from 'mockjs';\n\n// 生成订单号\nvar generateOrderNo = function generateOrderNo() {\n  return Mock.mock({\n    'string|12': /[A-Z0-9]/\n  }).string;\n};\n\n// 生成手机号\nvar generatePhone = function generatePhone() {\n  return Mock.mock(/^1[3-9]\\d{9}$/);\n};\n\n// 生成物流跟踪数据\nvar generateTrackingData = function generateTrackingData() {\n  var count = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  var list = [];\n  var statuses = ['pending', 'shipped', 'delivered', 'cancelled'];\n  var locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心'];\n  var descriptions = ['快件已到达仓库，等待发货', '快件已从仓库发出，正在运输中', '快件已到达转运中心，准备发往下一站', '快件正在派送中，请保持电话畅通', '快件已签收，感谢您的使用'];\n  for (var i = 0; i < count; i++) {\n    var status = statuses[Mock.Random.integer(0, 3)];\n    var createTime = Mock.Random.datetime('yyyy-MM-dd HH:mm:ss');\n    var trackingTime = status === 'pending' ? null : Mock.Random.datetime('yyyy-MM-dd HH:mm:ss');\n    list.push({\n      id: Mock.Random.id(),\n      orderNo: generateOrderNo(),\n      status: status,\n      consignee: Mock.Random.cname(),\n      consigneePhone: generatePhone(),\n      consigneeAddress: Mock.Random.county(true),\n      location: status === 'pending' ? null : Mock.Random.pick(locations),\n      description: status === 'pending' ? null : Mock.Random.pick(descriptions),\n      createTime: createTime,\n      trackingTime: trackingTime\n    });\n  }\n  return {\n    code: 0,\n    message: 'success',\n    data: {\n      records: list,\n      total: 100,\n      size: 10,\n      current: 1\n    }\n  };\n};\n\n// 生成物流跟踪详情\nvar generateTrackingDetail = function generateTrackingDetail(orderNo) {\n  var status = Mock.Random.pick(['pending', 'shipped', 'delivered', 'cancelled']);\n  return {\n    code: 0,\n    message: 'success',\n    data: {\n      id: Mock.Random.id(),\n      orderNo: orderNo,\n      status: status,\n      consignee: Mock.Random.cname(),\n      consigneePhone: generatePhone(),\n      consigneeAddress: Mock.Random.county(true),\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\n    }\n  };\n};\n\n// 生成物流跟踪记录列表\nvar generateTrackingList = function generateTrackingList(orderNo) {\n  var count = Mock.Random.integer(1, 5);\n  var list = [];\n  var locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心'];\n  var descriptions = ['快件已到达仓库，等待发货', '快件已从仓库发出，正在运输中', '快件已到达转运中心，准备发往下一站', '快件正在派送中，请保持电话畅通', '快件已签收，感谢您的使用'];\n  for (var i = 0; i < count; i++) {\n    list.push({\n      id: Mock.Random.id(),\n      shipmentId: Mock.Random.id(),\n      location: Mock.Random.pick(locations),\n      description: Mock.Random.pick(descriptions),\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\n    });\n  }\n  return {\n    code: 0,\n    message: 'success',\n    data: list\n  };\n};\n\n// 添加物流跟踪信息\nvar addTracking = function addTracking(data) {\n  return {\n    code: 0,\n    message: 'success'\n  };\n};\n\n// 注册 Mock 接口\nMock.mock(/\\/api\\/logistics\\/tracking\\/page(\\?.+)?$/, 'get', generateTrackingData);\nMock.mock(/\\/api\\/logistics\\/shipment\\/\\w+$/, 'get', function (options) {\n  var orderNo = options.url.split('/').pop();\n  return generateTrackingDetail(orderNo);\n});\nMock.mock(/\\/api\\/logistics\\/tracking\\/list\\/\\w+$/, 'get', function (options) {\n  var orderNo = options.url.split('/').pop();\n  return generateTrackingList(orderNo);\n});\nMock.mock('/api/logistics/tracking', 'post', addTracking);\nexport default {\n  generateTrackingData: generateTrackingData,\n  generateTrackingDetail: generateTrackingDetail,\n  generateTrackingList: generateTrackingList,\n  addTracking: addTracking\n};","map":{"version":3,"names":["Mock","generateOrderNo","mock","string","generatePhone","generateTrackingData","count","arguments","length","undefined","list","statuses","locations","descriptions","i","status","Random","integer","createTime","datetime","trackingTime","push","id","orderNo","consignee","cname","consigneePhone","consigneeAddress","county","location","pick","description","code","message","data","records","total","size","current","generateTrackingDetail","generateTrackingList","shipmentId","addTracking","options","url","split","pop"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/mock/logistics.js"],"sourcesContent":["import Mock from 'mockjs'\r\n\r\n// 生成订单号\r\nconst generateOrderNo = () => {\r\n  return Mock.mock({\r\n    'string|12': /[A-Z0-9]/\r\n  }).string\r\n}\r\n\r\n// 生成手机号\r\nconst generatePhone = () => {\r\n  return Mock.mock(/^1[3-9]\\d{9}$/)\r\n}\r\n\r\n// 生成物流跟踪数据\r\nconst generateTrackingData = (count = 10) => {\r\n  const list = []\r\n  const statuses = ['pending', 'shipped', 'delivered', 'cancelled']\r\n  const locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心']\r\n  const descriptions = [\r\n    '快件已到达仓库，等待发货',\r\n    '快件已从仓库发出，正在运输中',\r\n    '快件已到达转运中心，准备发往下一站',\r\n    '快件正在派送中，请保持电话畅通',\r\n    '快件已签收，感谢您的使用'\r\n  ]\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const status = statuses[Mock.Random.integer(0, 3)]\r\n    const createTime = Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    const trackingTime = status === 'pending' ? null : Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    \r\n    list.push({\r\n      id: Mock.Random.id(),\r\n      orderNo: generateOrderNo(),\r\n      status,\r\n      consignee: Mock.Random.cname(),\r\n      consigneePhone: generatePhone(),\r\n      consigneeAddress: Mock.Random.county(true),\r\n      location: status === 'pending' ? null : Mock.Random.pick(locations),\r\n      description: status === 'pending' ? null : Mock.Random.pick(descriptions),\r\n      createTime,\r\n      trackingTime\r\n    })\r\n  }\r\n\r\n  return {\r\n    code: 0,\r\n    message: 'success',\r\n    data: {\r\n      records: list,\r\n      total: 100,\r\n      size: 10,\r\n      current: 1\r\n    }\r\n  }\r\n}\r\n\r\n// 生成物流跟踪详情\r\nconst generateTrackingDetail = (orderNo) => {\r\n  const status = Mock.Random.pick(['pending', 'shipped', 'delivered', 'cancelled'])\r\n  \r\n  return {\r\n    code: 0,\r\n    message: 'success',\r\n    data: {\r\n      id: Mock.Random.id(),\r\n      orderNo,\r\n      status,\r\n      consignee: Mock.Random.cname(),\r\n      consigneePhone: generatePhone(),\r\n      consigneeAddress: Mock.Random.county(true),\r\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    }\r\n  }\r\n}\r\n\r\n// 生成物流跟踪记录列表\r\nconst generateTrackingList = (orderNo) => {\r\n  const count = Mock.Random.integer(1, 5)\r\n  const list = []\r\n  const locations = ['广州市仓库', '深圳市转运中心', '上海市配送中心', '北京市配送站', '杭州市仓储中心']\r\n  const descriptions = [\r\n    '快件已到达仓库，等待发货',\r\n    '快件已从仓库发出，正在运输中',\r\n    '快件已到达转运中心，准备发往下一站',\r\n    '快件正在派送中，请保持电话畅通',\r\n    '快件已签收，感谢您的使用'\r\n  ]\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    list.push({\r\n      id: Mock.Random.id(),\r\n      shipmentId: Mock.Random.id(),\r\n      location: Mock.Random.pick(locations),\r\n      description: Mock.Random.pick(descriptions),\r\n      createTime: Mock.Random.datetime('yyyy-MM-dd HH:mm:ss')\r\n    })\r\n  }\r\n\r\n  return {\r\n    code: 0,\r\n    message: 'success',\r\n    data: list\r\n  }\r\n}\r\n\r\n// 添加物流跟踪信息\r\nconst addTracking = (data) => {\r\n  return {\r\n    code: 0,\r\n    message: 'success'\r\n  }\r\n}\r\n\r\n// 注册 Mock 接口\r\nMock.mock(/\\/api\\/logistics\\/tracking\\/page(\\?.+)?$/, 'get', generateTrackingData)\r\nMock.mock(/\\/api\\/logistics\\/shipment\\/\\w+$/, 'get', (options) => {\r\n  const orderNo = options.url.split('/').pop()\r\n  return generateTrackingDetail(orderNo)\r\n})\r\nMock.mock(/\\/api\\/logistics\\/tracking\\/list\\/\\w+$/, 'get', (options) => {\r\n  const orderNo = options.url.split('/').pop()\r\n  return generateTrackingList(orderNo)\r\n})\r\nMock.mock('/api/logistics/tracking', 'post', addTracking)\r\n\r\nexport default {\r\n  generateTrackingData,\r\n  generateTrackingDetail,\r\n  generateTrackingList,\r\n  addTracking\r\n} "],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;;AAEzB;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,OAAOD,IAAI,CAACE,IAAI,CAAC;IACf,WAAW,EAAE;EACf,CAAC,CAAC,CAACC,MAAM;AACX,CAAC;;AAED;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAC1B,OAAOJ,IAAI,CAACE,IAAI,CAAC,eAAe,CAAC;AACnC,CAAC;;AAED;AACA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAmB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACtC,IAAMG,IAAI,GAAG,EAAE;EACf,IAAMC,QAAQ,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC;EACjE,IAAMC,SAAS,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;EACtE,IAAMC,YAAY,GAAG,CACnB,cAAc,EACd,gBAAgB,EAChB,mBAAmB,EACnB,iBAAiB,EACjB,cAAc,CACf;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,EAAEQ,CAAC,EAAE,EAAE;IAC9B,IAAMC,MAAM,GAAGJ,QAAQ,CAACX,IAAI,CAACgB,MAAM,CAACC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,IAAMC,UAAU,GAAGlB,IAAI,CAACgB,MAAM,CAACG,QAAQ,CAAC,qBAAqB,CAAC;IAC9D,IAAMC,YAAY,GAAGL,MAAM,KAAK,SAAS,GAAG,IAAI,GAAGf,IAAI,CAACgB,MAAM,CAACG,QAAQ,CAAC,qBAAqB,CAAC;IAE9FT,IAAI,CAACW,IAAI,CAAC;MACRC,EAAE,EAAEtB,IAAI,CAACgB,MAAM,CAACM,EAAE,CAAC,CAAC;MACpBC,OAAO,EAAEtB,eAAe,CAAC,CAAC;MAC1Bc,MAAM,EAANA,MAAM;MACNS,SAAS,EAAExB,IAAI,CAACgB,MAAM,CAACS,KAAK,CAAC,CAAC;MAC9BC,cAAc,EAAEtB,aAAa,CAAC,CAAC;MAC/BuB,gBAAgB,EAAE3B,IAAI,CAACgB,MAAM,CAACY,MAAM,CAAC,IAAI,CAAC;MAC1CC,QAAQ,EAAEd,MAAM,KAAK,SAAS,GAAG,IAAI,GAAGf,IAAI,CAACgB,MAAM,CAACc,IAAI,CAAClB,SAAS,CAAC;MACnEmB,WAAW,EAAEhB,MAAM,KAAK,SAAS,GAAG,IAAI,GAAGf,IAAI,CAACgB,MAAM,CAACc,IAAI,CAACjB,YAAY,CAAC;MACzEK,UAAU,EAAVA,UAAU;MACVE,YAAY,EAAZA;IACF,CAAC,CAAC;EACJ;EAEA,OAAO;IACLY,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE;MACJC,OAAO,EAAEzB,IAAI;MACb0B,KAAK,EAAE,GAAG;MACVC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;IACX;EACF,CAAC;AACH,CAAC;;AAED;AACA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIhB,OAAO,EAAK;EAC1C,IAAMR,MAAM,GAAGf,IAAI,CAACgB,MAAM,CAACc,IAAI,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;EAEjF,OAAO;IACLE,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE;MACJZ,EAAE,EAAEtB,IAAI,CAACgB,MAAM,CAACM,EAAE,CAAC,CAAC;MACpBC,OAAO,EAAPA,OAAO;MACPR,MAAM,EAANA,MAAM;MACNS,SAAS,EAAExB,IAAI,CAACgB,MAAM,CAACS,KAAK,CAAC,CAAC;MAC9BC,cAAc,EAAEtB,aAAa,CAAC,CAAC;MAC/BuB,gBAAgB,EAAE3B,IAAI,CAACgB,MAAM,CAACY,MAAM,CAAC,IAAI,CAAC;MAC1CV,UAAU,EAAElB,IAAI,CAACgB,MAAM,CAACG,QAAQ,CAAC,qBAAqB;IACxD;EACF,CAAC;AACH,CAAC;;AAED;AACA,IAAMqB,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIjB,OAAO,EAAK;EACxC,IAAMjB,KAAK,GAAGN,IAAI,CAACgB,MAAM,CAACC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EACvC,IAAMP,IAAI,GAAG,EAAE;EACf,IAAME,SAAS,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;EACtE,IAAMC,YAAY,GAAG,CACnB,cAAc,EACd,gBAAgB,EAChB,mBAAmB,EACnB,iBAAiB,EACjB,cAAc,CACf;EAED,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,EAAEQ,CAAC,EAAE,EAAE;IAC9BJ,IAAI,CAACW,IAAI,CAAC;MACRC,EAAE,EAAEtB,IAAI,CAACgB,MAAM,CAACM,EAAE,CAAC,CAAC;MACpBmB,UAAU,EAAEzC,IAAI,CAACgB,MAAM,CAACM,EAAE,CAAC,CAAC;MAC5BO,QAAQ,EAAE7B,IAAI,CAACgB,MAAM,CAACc,IAAI,CAAClB,SAAS,CAAC;MACrCmB,WAAW,EAAE/B,IAAI,CAACgB,MAAM,CAACc,IAAI,CAACjB,YAAY,CAAC;MAC3CK,UAAU,EAAElB,IAAI,CAACgB,MAAM,CAACG,QAAQ,CAAC,qBAAqB;IACxD,CAAC,CAAC;EACJ;EAEA,OAAO;IACLa,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAExB;EACR,CAAC;AACH,CAAC;;AAED;AACA,IAAMgC,WAAW,GAAG,SAAdA,WAAWA,CAAIR,IAAI,EAAK;EAC5B,OAAO;IACLF,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;AACH,CAAC;;AAED;AACAjC,IAAI,CAACE,IAAI,CAAC,0CAA0C,EAAE,KAAK,EAAEG,oBAAoB,CAAC;AAClFL,IAAI,CAACE,IAAI,CAAC,kCAAkC,EAAE,KAAK,EAAE,UAACyC,OAAO,EAAK;EAChE,IAAMpB,OAAO,GAAGoB,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EAC5C,OAAOP,sBAAsB,CAAChB,OAAO,CAAC;AACxC,CAAC,CAAC;AACFvB,IAAI,CAACE,IAAI,CAAC,wCAAwC,EAAE,KAAK,EAAE,UAACyC,OAAO,EAAK;EACtE,IAAMpB,OAAO,GAAGoB,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;EAC5C,OAAON,oBAAoB,CAACjB,OAAO,CAAC;AACtC,CAAC,CAAC;AACFvB,IAAI,CAACE,IAAI,CAAC,yBAAyB,EAAE,MAAM,EAAEwC,WAAW,CAAC;AAEzD,eAAe;EACbrC,oBAAoB,EAApBA,oBAAoB;EACpBkC,sBAAsB,EAAtBA,sBAAsB;EACtBC,oBAAoB,EAApBA,oBAAoB;EACpBE,WAAW,EAAXA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}