{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\n\n// 日期快捷选项\n\nexport default {\n  __name: 'LoginLog',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var shortcuts = [{\n      text: '最近一周',\n      value: function value() {\n        var end = new Date();\n        var start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n        return [start, end];\n      }\n    }, {\n      text: '最近一个月',\n      value: function value() {\n        var end = new Date();\n        var start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n        return [start, end];\n      }\n    }, {\n      text: '最近三个月',\n      value: function value() {\n        var end = new Date();\n        var start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n        return [start, end];\n      }\n    }];\n\n    // 响应式数据\n    var logs = ref([]);\n    var dateRange = ref([]);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var total = ref(0);\n\n    // 获取日志列表\n    var fetchLogs = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, res, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              params = new URLSearchParams({\n                page: currentPage.value,\n                size: pageSize.value\n              });\n              if (dateRange.value && dateRange.value.length === 2) {\n                params.append('startDate', dateRange.value[0]);\n                params.append('endDate', dateRange.value[1]);\n              }\n              _context.next = 5;\n              return fetch(\"http://localhost:8000/api/logs/login?\".concat(params), {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n            case 8:\n              data = _context.sent;\n              if (data.code === 0) {\n                logs.value = data.data.records;\n                total.value = data.data.total;\n              } else {\n                ElMessage.error(data.message || '获取日志失败');\n              }\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取日志失败:', _context.t0);\n              ElMessage.error('获取日志失败');\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n      return function fetchLogs() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 处理日期变化\n    var handleDateChange = function handleDateChange() {\n      currentPage.value = 1;\n      fetchLogs();\n    };\n\n    // 处理每页数量变化\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      fetchLogs();\n    };\n\n    // 处理页码变化\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n      fetchLogs();\n    };\n    onMounted(function () {\n      fetchLogs();\n    });\n    var __returned__ = {\n      shortcuts: shortcuts,\n      logs: logs,\n      dateRange: dateRange,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      fetchLogs: fetchLogs,\n      handleDateChange: handleDateChange,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      ref: ref,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","shortcuts","text","value","end","Date","start","setTime","getTime","logs","dateRange","currentPage","pageSize","total","fetchLogs","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","res","data","wrap","_callee$","_context","prev","next","URLSearchParams","page","size","length","append","fetch","concat","headers","credentials","sent","json","code","records","error","message","t0","console","stop","apply","arguments","handleDateChange","handleSizeChange","val","handleCurrentChange"],"sources":["C:/Users/indexae/Desktop/scm/scm/frontend/src/views/LoginLog.vue"],"sourcesContent":["<template>\n  <div class=\"login-log\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>登录日志</span>\n          <div class=\"header-right\">\n            <el-date-picker\n              v-model=\"dateRange\"\n              type=\"daterange\"\n              range-separator=\"至\"\n              start-placeholder=\"开始日期\"\n              end-placeholder=\"结束日期\"\n              :shortcuts=\"shortcuts\"\n              value-format=\"YYYY-MM-DD\"\n              @change=\"handleDateChange\"\n            />\n            <el-button type=\"primary\" @click=\"fetchLogs\">查询</el-button>\n          </div>\n        </div>\n      </template>\n      \n      <!-- 日志列表 -->\n      <el-table :data=\"logs\" style=\"width: 100%\">\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" />\n        <el-table-column prop=\"ip\" label=\"IP地址\" width=\"120\" />\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"scope.row.status ? 'success' : 'danger'\">\n              {{ scope.row.status ? '成功' : '失败' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"browser\" label=\"浏览器\" width=\"150\" />\n        <el-table-column prop=\"os\" label=\"操作系统\" width=\"150\" />\n        <el-table-column prop=\"loginTime\" label=\"登录时间\" />\n      </el-table>\n      \n      <!-- 分页 -->\n      <div class=\"pagination\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          v-model:page-size=\"pageSize\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\n\n// 日期快捷选项\nconst shortcuts = [\n  {\n    text: '最近一周',\n    value: () => {\n      const end = new Date()\n      const start = new Date()\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n      return [start, end]\n    },\n  },\n  {\n    text: '最近一个月',\n    value: () => {\n      const end = new Date()\n      const start = new Date()\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n      return [start, end]\n    },\n  },\n  {\n    text: '最近三个月',\n    value: () => {\n      const end = new Date()\n      const start = new Date()\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n      return [start, end]\n    },\n  },\n]\n\n// 响应式数据\nconst logs = ref([])\nconst dateRange = ref([])\nconst currentPage = ref(1)\nconst pageSize = ref(10)\nconst total = ref(0)\n\n// 获取日志列表\nconst fetchLogs = async () => {\n  try {\n    const params = new URLSearchParams({\n      page: currentPage.value,\n      size: pageSize.value,\n    })\n    \n    if (dateRange.value && dateRange.value.length === 2) {\n      params.append('startDate', dateRange.value[0])\n      params.append('endDate', dateRange.value[1])\n    }\n    \n    const res = await fetch(`http://localhost:8000/api/logs/login?${params}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    })\n    \n    const data = await res.json()\n    if (data.code === 0) {\n      logs.value = data.data.records\n      total.value = data.data.total\n    } else {\n      ElMessage.error(data.message || '获取日志失败')\n    }\n  } catch (error) {\n    console.error('获取日志失败:', error)\n    ElMessage.error('获取日志失败')\n  }\n}\n\n// 处理日期变化\nconst handleDateChange = () => {\n  currentPage.value = 1\n  fetchLogs()\n}\n\n// 处理每页数量变化\nconst handleSizeChange = (val) => {\n  pageSize.value = val\n  fetchLogs()\n}\n\n// 处理页码变化\nconst handleCurrentChange = (val) => {\n  currentPage.value = val\n  fetchLogs()\n}\n\nonMounted(() => {\n  fetchLogs()\n})\n</script>\n\n<style scoped>\n.login-log {\n  padding: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-right {\n  display: flex;\n  gap: 10px;\n}\n\n.pagination {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}