{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"operation-log\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"header-operations\"\n};\nvar _hoisted_4 = {\n  \"class\": \"truncate-text\"\n};\nvar _hoisted_5 = {\n  \"class\": \"pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_tooltip = _resolveComponent(\"el-tooltip\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"操作日志\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_date_picker, {\n        modelValue: $setup.dateRange,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return $setup.dateRange = $event;\n        }),\n        type: \"daterange\",\n        \"range-separator\": \"至\",\n        \"start-placeholder\": \"开始日期\",\n        \"end-placeholder\": \"结束日期\",\n        shortcuts: $setup.shortcuts,\n        onChange: $setup.handleDateChange\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.handleSearch\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[3] || (_cache[3] = [_createTextVNode(\"查询\")]);\n        }),\n        _: 1 /* STABLE */\n      })])])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_table, {\n        data: $setup.logs,\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"id\",\n            label: \"ID\",\n            width: \"80\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"username\",\n            label: \"操作用户\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"operation\",\n            label: \"操作内容\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"method\",\n            label: \"请求方法\",\n            width: \"100\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"params\",\n            label: \"请求参数\",\n            width: \"200\"\n          }, {\n            \"default\": _withCtx(function (scope) {\n              return [_createVNode(_component_el_tooltip, {\n                \"class\": \"box-item\",\n                effect: \"dark\",\n                content: scope.row.params,\n                placement: \"top-start\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createElementVNode(\"span\", _hoisted_4, _toDisplayString(scope.row.params), 1 /* TEXT */)];\n                }),\n                _: 2 /* DYNAMIC */\n              }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"content\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"ip\",\n            label: \"IP地址\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"createTime\",\n            label: \"操作时间\",\n            width: \"180\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_pagination, {\n        \"current-page\": $setup.currentPage,\n        \"onUpdate:currentPage\": _cache[1] || (_cache[1] = function ($event) {\n          return $setup.currentPage = $event;\n        }),\n        \"page-size\": $setup.pageSize,\n        \"onUpdate:pageSize\": _cache[2] || (_cache[2] = function ($event) {\n          return $setup.pageSize = $event;\n        }),\n        \"page-sizes\": [10, 20, 50, 100],\n        layout: \"total, sizes, prev, pager, next, jumper\",\n        total: $setup.total,\n        onSizeChange: $setup.handleSizeChange,\n        onCurrentChange: $setup.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_hoisted_3","_component_el_date_picker","modelValue","$setup","dateRange","_cache","$event","type","shortcuts","onChange","handleDateChange","_component_el_button","onClick","handleSearch","_createTextVNode","_","_component_el_table","data","logs","style","_component_el_table_column","prop","label","width","scope","_component_el_tooltip","effect","content","row","params","placement","_hoisted_4","_toDisplayString","_hoisted_5","_component_el_pagination","currentPage","pageSize","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange"],"sources":["C:\\Users\\indexae\\Desktop\\scm\\frontend\\src\\views\\OperationLog.vue"],"sourcesContent":["<template>\r\n  <div class=\"operation-log\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>操作日志</span>\r\n          <div class=\"header-operations\">\r\n            <el-date-picker\r\n              v-model=\"dateRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              :shortcuts=\"shortcuts\"\r\n              @change=\"handleDateChange\"\r\n            />\r\n            <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 日志列表 -->\r\n      <el-table :data=\"logs\" style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n        <el-table-column prop=\"username\" label=\"操作用户\" width=\"120\" />\r\n        <el-table-column prop=\"operation\" label=\"操作内容\" />\r\n        <el-table-column prop=\"method\" label=\"请求方法\" width=\"100\" />\r\n        <el-table-column prop=\"params\" label=\"请求参数\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-tooltip\r\n              class=\"box-item\"\r\n              effect=\"dark\"\r\n              :content=\"scope.row.params\"\r\n              placement=\"top-start\"\r\n            >\r\n              <span class=\"truncate-text\">{{ scope.row.params }}</span>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"ip\" label=\"IP地址\" width=\"120\" />\r\n        <el-table-column prop=\"createTime\" label=\"操作时间\" width=\"180\" />\r\n      </el-table>\r\n      \r\n      <!-- 分页 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 日志数据\r\nconst logs = ref([])\r\nconst total = ref(0)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst dateRange = ref([])\r\n\r\n// 日期快捷选项\r\nconst shortcuts = [\r\n  {\r\n    text: '最近一周',\r\n    value: () => {\r\n      const end = new Date()\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n      return [start, end]\r\n    },\r\n  },\r\n  {\r\n    text: '最近一个月',\r\n    value: () => {\r\n      const end = new Date()\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n      return [start, end]\r\n    },\r\n  },\r\n  {\r\n    text: '最近三个月',\r\n    value: () => {\r\n      const end = new Date()\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n      return [start, end]\r\n    },\r\n  },\r\n]\r\n\r\n// 获取日志列表\r\nconst getLogs = async () => {\r\n  try {\r\n    let url = `http://localhost:8000/api/logs/operation?page=${currentPage.value}&size=${pageSize.value}`\r\n    \r\n    // 添加日期范围参数\r\n    if (dateRange.value && dateRange.value.length === 2) {\r\n      const startDate = dateRange.value[0].toISOString().split('T')[0]\r\n      const endDate = dateRange.value[1].toISOString().split('T')[0]\r\n      url += `&startDate=${startDate}&endDate=${endDate}`\r\n    }\r\n    \r\n    const res = await fetch(url, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      logs.value = data.data.records\r\n      total.value = data.data.total\r\n    } else {\r\n      ElMessage.error(data.message || '获取操作日志失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取操作日志失败:', error)\r\n    ElMessage.error('获取操作日志失败')\r\n  }\r\n}\r\n\r\n// 处理日期变化\r\nconst handleDateChange = () => {\r\n  currentPage.value = 1\r\n}\r\n\r\n// 处理查询\r\nconst handleSearch = () => {\r\n  getLogs()\r\n}\r\n\r\n// 处理每页数量变化\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  getLogs()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  getLogs()\r\n}\r\n\r\n// 初始化\r\ngetLogs()\r\n</script>\r\n\r\n<style scoped>\r\n.operation-log {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-operations {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.truncate-text {\r\n  display: inline-block;\r\n  max-width: 200px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}