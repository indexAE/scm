{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { useSettingsStore } from '../stores/settings';\n\n// 用户列表数据\n\nexport default {\n  __name: 'UserManage',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var users = ref([]);\n    var allRoles = ref([]); // 所有角色列表\n    var selectedRoles = ref([]); // 选中的角色ID列表\n    var currentUserId = ref(null); // 当前操作的用户ID\n    var settingsStore = useSettingsStore();\n\n    // 对话框相关数据\n    var dialogVisible = ref(false);\n    var roleDialogVisible = ref(false);\n    var dialogTitle = ref('添加用户');\n    var userForm = ref({\n      id: null,\n      username: '',\n      password: '',\n      roles: [] // 添加角色字段\n    });\n\n    // 获取用户列表\n    var getUsers = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res, data, usersWithRoles;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch('http://localhost:8000/api/users', {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 3:\n              res = _context2.sent;\n              _context2.next = 6;\n              return res.json();\n            case 6:\n              data = _context2.sent;\n              if (!(data.code === 0)) {\n                _context2.next = 15;\n                break;\n              }\n              _context2.next = 10;\n              return Promise.all(data.data.map(/*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(user) {\n                  var rolesRes, rolesData;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.prev = 0;\n                        _context.next = 3;\n                        return fetch(\"http://localhost:8000/api/roles/user/\".concat(user.id), {\n                          headers: {\n                            'Content-Type': 'application/json'\n                          },\n                          credentials: 'include'\n                        });\n                      case 3:\n                        rolesRes = _context.sent;\n                        _context.next = 6;\n                        return rolesRes.json();\n                      case 6:\n                        rolesData = _context.sent;\n                        console.log(\"User \".concat(user.id, \" roles:\"), rolesData); // 添加日志\n                        return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, user), {}, {\n                          roles: rolesData.code === 0 ? rolesData.data : []\n                        }));\n                      case 11:\n                        _context.prev = 11;\n                        _context.t0 = _context[\"catch\"](0);\n                        console.error(\"\\u83B7\\u53D6\\u7528\\u6237 \".concat(user.id, \" \\u7684\\u89D2\\u8272\\u5931\\u8D25:\"), _context.t0);\n                        return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, user), {}, {\n                          roles: []\n                        }));\n                      case 15:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee, null, [[0, 11]]);\n                }));\n                return function (_x) {\n                  return _ref3.apply(this, arguments);\n                };\n              }()));\n            case 10:\n              usersWithRoles = _context2.sent;\n              console.log('Users with roles:', usersWithRoles); // 添加日志\n              users.value = usersWithRoles;\n              _context2.next = 16;\n              break;\n            case 15:\n              ElMessage.error(data.message || '获取用户列表失败');\n            case 16:\n              _context2.next = 22;\n              break;\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取用户列表失败:', _context2.t0);\n              ElMessage.error('获取用户列表失败');\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 18]]);\n      }));\n      return function getUsers() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取所有角色\n    var getAllRoles = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              console.log('开始获取角色列表...'); // 添加日志\n              _context3.next = 4;\n              return fetch('http://127.0.0.1:8080/api/roles', {\n                method: 'GET',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 4:\n              res = _context3.sent;\n              console.log('角色列表API响应状态:', res.status); // 添加日志\n              if (res.ok) {\n                _context3.next = 8;\n                break;\n              }\n              throw new Error(\"HTTP error! status: \".concat(res.status));\n            case 8:\n              _context3.next = 10;\n              return res.json();\n            case 10:\n              data = _context3.sent;\n              console.log('获取角色列表响应:', data); // 添加日志\n\n              if (data.code === 0) {\n                allRoles.value = data.data || [];\n                console.log('设置角色列表:', allRoles.value); // 添加日志\n                if (allRoles.value.length === 0) {\n                  console.warn('获取到的角色列表为空'); // 添加警告日志\n                }\n              } else {\n                console.error('获取角色列表失败:', data.message);\n                ElMessage.error(data.message || '获取角色列表失败');\n              }\n              _context3.next = 19;\n              break;\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('获取角色列表失败:', _context3.t0);\n              ElMessage.error('获取角色列表失败: ' + _context3.t0.message);\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 15]]);\n      }));\n      return function getAllRoles() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 添加用户\n    var handleAdd = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              userForm.value = {\n                id: null,\n                username: '',\n                password: '',\n                roles: []\n              };\n              dialogTitle.value = '添加用户';\n              _context4.next = 4;\n              return getAllRoles();\n            case 4:\n              // 获取所有角色列表\n              dialogVisible.value = true;\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      return function handleAdd() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 编辑用户\n    var handleEdit = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(row) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              userForm.value = {\n                id: row.id,\n                username: row.username,\n                roles: row.roles.map(function (role) {\n                  return role.id;\n                })\n              };\n              dialogTitle.value = '编辑用户';\n              _context5.next = 4;\n              return getAllRoles();\n            case 4:\n              // 获取所有角色列表\n              dialogVisible.value = true;\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function handleEdit(_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    // 删除用户\n    var handleDelete = function handleDelete(row) {\n      ElMessageBox.confirm('确定要删除该用户吗？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return fetch(\"http://localhost:8000/api/users/\".concat(row.id), {\n                method: 'DELETE',\n                credentials: 'include'\n              });\n            case 3:\n              res = _context6.sent;\n              _context6.next = 6;\n              return res.json();\n            case 6:\n              data = _context6.sent;\n              if (data.code === 0) {\n                ElMessage.success('删除成功');\n                getUsers();\n              } else {\n                ElMessage.error(data.message || '删除失败');\n              }\n              _context6.next = 14;\n              break;\n            case 10:\n              _context6.prev = 10;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.error('删除用户失败:', _context6.t0);\n              ElMessage.error('删除失败');\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, null, [[0, 10]]);\n      })));\n    };\n\n    // 分配角色\n    var handleAssignRole = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(row) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              currentUserId.value = row.id;\n              _context7.next = 3;\n              return getAllRoles();\n            case 3:\n              // 设置当前用户已有的角色\n              selectedRoles.value = row.roles.map(function (role) {\n                return role.id;\n              });\n              roleDialogVisible.value = true;\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      return function handleAssignRole(_x3) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    // 提交角色分配\n    var handleRoleSubmit = /*#__PURE__*/function () {\n      var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _users$value$find, userRoles, rolesToAdd, rolesToRemove, _iterator, _step, roleId, res, data, _iterator2, _step2, _roleId, _res, _data;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              // 获取用户当前的角色\n              userRoles = ((_users$value$find = users.value.find(function (user) {\n                return user.id === currentUserId.value;\n              })) === null || _users$value$find === void 0 ? void 0 : _users$value$find.roles.map(function (role) {\n                return role.id;\n              })) || []; // 需要添加的角色\n              rolesToAdd = selectedRoles.value.filter(function (roleId) {\n                return !userRoles.includes(roleId);\n              }); // 需要移除的角色\n              rolesToRemove = userRoles.filter(function (roleId) {\n                return !selectedRoles.value.includes(roleId);\n              }); // 添加新角色\n              _iterator = _createForOfIteratorHelper(rolesToAdd);\n              _context8.prev = 5;\n              _iterator.s();\n            case 7:\n              if ((_step = _iterator.n()).done) {\n                _context8.next = 21;\n                break;\n              }\n              roleId = _step.value;\n              _context8.next = 11;\n              return fetch(\"http://localhost:8000/api/roles/assign?userId=\".concat(currentUserId.value, \"&roleId=\").concat(roleId), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 11:\n              res = _context8.sent;\n              _context8.next = 14;\n              return res.json();\n            case 14:\n              data = _context8.sent;\n              console.log('分配角色响应:', data); // 添加日志\n              if (!(data.code !== 0)) {\n                _context8.next = 19;\n                break;\n              }\n              console.error('分配角色失败:', data); // 添加错误日志\n              throw new Error(data.message || \"\\u5206\\u914D\\u89D2\\u8272\\u5931\\u8D25: \".concat(roleId));\n            case 19:\n              _context8.next = 7;\n              break;\n            case 21:\n              _context8.next = 26;\n              break;\n            case 23:\n              _context8.prev = 23;\n              _context8.t0 = _context8[\"catch\"](5);\n              _iterator.e(_context8.t0);\n            case 26:\n              _context8.prev = 26;\n              _iterator.f();\n              return _context8.finish(26);\n            case 29:\n              // 移除旧角色\n              _iterator2 = _createForOfIteratorHelper(rolesToRemove);\n              _context8.prev = 30;\n              _iterator2.s();\n            case 32:\n              if ((_step2 = _iterator2.n()).done) {\n                _context8.next = 46;\n                break;\n              }\n              _roleId = _step2.value;\n              _context8.next = 36;\n              return fetch(\"http://localhost:8000/api/roles/remove?userId=\".concat(currentUserId.value, \"&roleId=\").concat(_roleId), {\n                method: 'DELETE',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 36:\n              _res = _context8.sent;\n              _context8.next = 39;\n              return _res.json();\n            case 39:\n              _data = _context8.sent;\n              console.log('移除角色响应:', _data); // 添加日志\n              if (!(_data.code !== 0)) {\n                _context8.next = 44;\n                break;\n              }\n              console.error('移除角色失败:', _data); // 添加错误日志\n              throw new Error(_data.message || \"\\u79FB\\u9664\\u89D2\\u8272\\u5931\\u8D25: \".concat(_roleId));\n            case 44:\n              _context8.next = 32;\n              break;\n            case 46:\n              _context8.next = 51;\n              break;\n            case 48:\n              _context8.prev = 48;\n              _context8.t1 = _context8[\"catch\"](30);\n              _iterator2.e(_context8.t1);\n            case 51:\n              _context8.prev = 51;\n              _iterator2.f();\n              return _context8.finish(51);\n            case 54:\n              ElMessage.success('角色分配成功');\n              roleDialogVisible.value = false;\n\n              // 立即获取用户列表以更新角色信息\n              _context8.next = 58;\n              return getUsers();\n            case 58:\n              _context8.next = 64;\n              break;\n            case 60:\n              _context8.prev = 60;\n              _context8.t2 = _context8[\"catch\"](0);\n              console.error('角色分配失败:', _context8.t2);\n              ElMessage.error(_context8.t2.message || '角色分配失败');\n            case 64:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, null, [[0, 60], [5, 23, 26, 29], [30, 48, 51, 54]]);\n      }));\n      return function handleRoleSubmit() {\n        return _ref9.apply(this, arguments);\n      };\n    }();\n\n    // 提交表单\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref10 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var url, method, requestBody, res, data, userId, _iterator3, _step3, roleId, _users$value$find2, _userId, currentRoles, rolesToAdd, rolesToRemove, _iterator4, _step4, _roleId2, _iterator5, _step5, _roleId3;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              if (!(!userForm.value.id && userForm.value.password.length < settingsStore.passwordMinLength)) {\n                _context9.next = 4;\n                break;\n              }\n              ElMessage.error(\"\\u5BC6\\u7801\\u957F\\u5EA6\\u4E0D\\u80FD\\u5C0F\\u4E8E\".concat(settingsStore.passwordMinLength, \"\\u4F4D\"));\n              return _context9.abrupt(\"return\");\n            case 4:\n              url = userForm.value.id ? \"http://localhost:8000/api/users/\".concat(userForm.value.id) : 'http://localhost:8000/api/register';\n              method = userForm.value.id ? 'PUT' : 'POST'; // 创建/更新用户的请求体\n              requestBody = {\n                username: userForm.value.username\n              }; // 只在添加用户时包含密码字段\n              if (!userForm.value.id) {\n                requestBody.password = userForm.value.password;\n              }\n\n              // 创建/更新用户\n              _context9.next = 10;\n              return fetch(url, {\n                method: method,\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify(requestBody)\n              });\n            case 10:\n              res = _context9.sent;\n              _context9.next = 13;\n              return res.json();\n            case 13:\n              data = _context9.sent;\n              if (!(data.code === 0)) {\n                _context9.next = 81;\n                break;\n              }\n              if (!(!userForm.value.id && userForm.value.roles.length > 0)) {\n                _context9.next = 36;\n                break;\n              }\n              userId = data.data.id; // 为新用户分配角色\n              _iterator3 = _createForOfIteratorHelper(userForm.value.roles);\n              _context9.prev = 18;\n              _iterator3.s();\n            case 20:\n              if ((_step3 = _iterator3.n()).done) {\n                _context9.next = 26;\n                break;\n              }\n              roleId = _step3.value;\n              _context9.next = 24;\n              return fetch(\"http://localhost:8000/api/roles/assign?userId=\".concat(userId, \"&roleId=\").concat(roleId), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 24:\n              _context9.next = 20;\n              break;\n            case 26:\n              _context9.next = 31;\n              break;\n            case 28:\n              _context9.prev = 28;\n              _context9.t0 = _context9[\"catch\"](18);\n              _iterator3.e(_context9.t0);\n            case 31:\n              _context9.prev = 31;\n              _iterator3.f();\n              return _context9.finish(31);\n            case 34:\n              _context9.next = 75;\n              break;\n            case 36:\n              if (!userForm.value.id) {\n                _context9.next = 75;\n                break;\n              }\n              _userId = userForm.value.id;\n              currentRoles = ((_users$value$find2 = users.value.find(function (user) {\n                return user.id === _userId;\n              })) === null || _users$value$find2 === void 0 ? void 0 : _users$value$find2.roles.map(function (role) {\n                return role.id;\n              })) || []; // 需要添加的角色\n              rolesToAdd = userForm.value.roles.filter(function (roleId) {\n                return !currentRoles.includes(roleId);\n              }); // 需要移除的角色\n              rolesToRemove = currentRoles.filter(function (roleId) {\n                return !userForm.value.roles.includes(roleId);\n              }); // 添加新角色\n              _iterator4 = _createForOfIteratorHelper(rolesToAdd);\n              _context9.prev = 42;\n              _iterator4.s();\n            case 44:\n              if ((_step4 = _iterator4.n()).done) {\n                _context9.next = 50;\n                break;\n              }\n              _roleId2 = _step4.value;\n              _context9.next = 48;\n              return fetch(\"http://localhost:8000/api/roles/assign?userId=\".concat(_userId, \"&roleId=\").concat(_roleId2), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 48:\n              _context9.next = 44;\n              break;\n            case 50:\n              _context9.next = 55;\n              break;\n            case 52:\n              _context9.prev = 52;\n              _context9.t1 = _context9[\"catch\"](42);\n              _iterator4.e(_context9.t1);\n            case 55:\n              _context9.prev = 55;\n              _iterator4.f();\n              return _context9.finish(55);\n            case 58:\n              // 移除旧角色\n              _iterator5 = _createForOfIteratorHelper(rolesToRemove);\n              _context9.prev = 59;\n              _iterator5.s();\n            case 61:\n              if ((_step5 = _iterator5.n()).done) {\n                _context9.next = 67;\n                break;\n              }\n              _roleId3 = _step5.value;\n              _context9.next = 65;\n              return fetch(\"http://localhost:8000/api/roles/remove?userId=\".concat(_userId, \"&roleId=\").concat(_roleId3), {\n                method: 'DELETE',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 65:\n              _context9.next = 61;\n              break;\n            case 67:\n              _context9.next = 72;\n              break;\n            case 69:\n              _context9.prev = 69;\n              _context9.t2 = _context9[\"catch\"](59);\n              _iterator5.e(_context9.t2);\n            case 72:\n              _context9.prev = 72;\n              _iterator5.f();\n              return _context9.finish(72);\n            case 75:\n              ElMessage.success(userForm.value.id ? '更新成功' : '添加成功');\n              dialogVisible.value = false;\n              // 立即重新获取用户列表以更新角色信息\n              _context9.next = 79;\n              return getUsers();\n            case 79:\n              _context9.next = 82;\n              break;\n            case 81:\n              ElMessage.error(data.message || (userForm.value.id ? '更新失败' : '添加失败'));\n            case 82:\n              _context9.next = 88;\n              break;\n            case 84:\n              _context9.prev = 84;\n              _context9.t3 = _context9[\"catch\"](0);\n              console.error('提交表单失败:', _context9.t3);\n              ElMessage.error(userForm.value.id ? '更新失败' : '添加失败');\n            case 88:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, null, [[0, 84], [18, 28, 31, 34], [42, 52, 55, 58], [59, 69, 72, 75]]);\n      }));\n      return function handleSubmit() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return Promise.all([getUsers(), getAllRoles() // 在组件挂载时获取角色列表\n            ]);\n          case 2:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10);\n    })));\n    var __returned__ = {\n      users: users,\n      allRoles: allRoles,\n      selectedRoles: selectedRoles,\n      currentUserId: currentUserId,\n      settingsStore: settingsStore,\n      dialogVisible: dialogVisible,\n      roleDialogVisible: roleDialogVisible,\n      dialogTitle: dialogTitle,\n      userForm: userForm,\n      getUsers: getUsers,\n      getAllRoles: getAllRoles,\n      handleAdd: handleAdd,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete,\n      handleAssignRole: handleAssignRole,\n      handleRoleSubmit: handleRoleSubmit,\n      handleSubmit: handleSubmit,\n      ref: ref,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get useSettingsStore() {\n        return useSettingsStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","ElMessageBox","useSettingsStore","users","allRoles","selectedRoles","currentUserId","settingsStore","dialogVisible","roleDialogVisible","dialogTitle","userForm","id","username","password","roles","getUsers","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","res","data","usersWithRoles","wrap","_callee2$","_context2","prev","next","fetch","headers","credentials","sent","json","code","Promise","all","map","_ref3","_callee","user","rolesRes","rolesData","_callee$","_context","concat","console","log","abrupt","_objectSpread","t0","error","stop","_x","apply","arguments","value","message","getAllRoles","_ref4","_callee3","_callee3$","_context3","method","status","ok","Error","length","warn","handleAdd","_ref5","_callee4","_callee4$","_context4","handleEdit","_ref6","_callee5","row","_callee5$","_context5","role","_x2","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","_callee6","_callee6$","_context6","success","handleAssignRole","_ref8","_callee7","_callee7$","_context7","_x3","handleRoleSubmit","_ref9","_callee8","_users$value$find","userRoles","rolesToAdd","rolesToRemove","_iterator","_step","roleId","_iterator2","_step2","_roleId","_res","_data","_callee8$","_context8","find","filter","includes","_createForOfIteratorHelper","s","n","done","e","f","finish","t1","t2","handleSubmit","_ref10","_callee9","url","requestBody","userId","_iterator3","_step3","_users$value$find2","_userId","currentRoles","_iterator4","_step4","_roleId2","_iterator5","_step5","_roleId3","_callee9$","_context9","passwordMinLength","body","JSON","stringify","t3","_callee10","_callee10$","_context10"],"sources":["C:/Users/indexae/Desktop/scm日志/scm/frontend/src/views/UserManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-manage\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>用户管理</span>\r\n          <el-button type=\"primary\" @click=\"handleAdd\">添加用户</el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 用户列表 -->\r\n      <el-table :data=\"users\" style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n        <el-table-column prop=\"username\" label=\"用户名\" />\r\n        <el-table-column label=\"角色\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-tag\r\n              v-for=\"role in scope.row.roles\"\r\n              :key=\"role.id\"\r\n              class=\"role-tag\"\r\n              type=\"info\">\r\n              {{ role.roleName }}\r\n            </el-tag>\r\n            <el-button \r\n              link \r\n              type=\"primary\" \r\n              size=\"small\"\r\n              @click=\"handleAssignRole(scope.row)\">\r\n              分配角色\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"角色状态\" width=\"120\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.roles.length > 0 ? 'success' : 'warning'\">\r\n              {{ scope.row.roles.length > 0 ? '已分配' : '未分配' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"创建时间\" />\r\n        <el-table-column prop=\"updateTime\" label=\"更新时间\" />\r\n        <el-table-column label=\"操作\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑用户对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      v-model=\"dialogVisible\" \r\n      width=\"500px\">\r\n      <el-form \r\n        :model=\"userForm\" \r\n        label-width=\"100px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"userForm.username\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" v-if=\"!userForm.id\">\r\n          <el-input v-model=\"userForm.password\" type=\"password\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\">\r\n          <el-select v-model=\"userForm.roles\" multiple placeholder=\"请选择角色\">\r\n            <el-option\r\n              v-for=\"role in allRoles\"\r\n              :key=\"role.id\"\r\n              :label=\"role.roleName\"\r\n              :value=\"role.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 分配角色对话框 -->\r\n    <el-dialog\r\n      title=\"分配角色\"\r\n      v-model=\"roleDialogVisible\"\r\n      width=\"500px\">\r\n      <el-form>\r\n        <el-form-item label=\"选择角色\">\r\n          <el-checkbox-group v-model=\"selectedRoles\">\r\n            <el-checkbox\r\n              v-for=\"role in allRoles\"\r\n              :key=\"role.id\"\r\n              :label=\"role.id\">\r\n              {{ role.roleName }}\r\n            </el-checkbox>\r\n          </el-checkbox-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"roleDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleRoleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { useSettingsStore } from '../stores/settings'\r\n\r\n// 用户列表数据\r\nconst users = ref([])\r\nconst allRoles = ref([]) // 所有角色列表\r\nconst selectedRoles = ref([]) // 选中的角色ID列表\r\nconst currentUserId = ref(null) // 当前操作的用户ID\r\nconst settingsStore = useSettingsStore()\r\n\r\n// 对话框相关数据\r\nconst dialogVisible = ref(false)\r\nconst roleDialogVisible = ref(false)\r\nconst dialogTitle = ref('添加用户')\r\nconst userForm = ref({\r\n  id: null,\r\n  username: '',\r\n  password: '',\r\n  roles: [] // 添加角色字段\r\n})\r\n\r\n// 获取用户列表\r\nconst getUsers = async () => {\r\n  try {\r\n    const res = await fetch('http://localhost:8000/api/users', {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      // 获取每个用户的角色信息\r\n      const usersWithRoles = await Promise.all(\r\n        data.data.map(async (user) => {\r\n          try {\r\n            const rolesRes = await fetch(`http://localhost:8000/api/roles/user/${user.id}`, {\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              credentials: 'include'\r\n            })\r\n            const rolesData = await rolesRes.json()\r\n            console.log(`User ${user.id} roles:`, rolesData) // 添加日志\r\n            return {\r\n              ...user,\r\n              roles: rolesData.code === 0 ? rolesData.data : []\r\n            }\r\n          } catch (error) {\r\n            console.error(`获取用户 ${user.id} 的角色失败:`, error)\r\n            return {\r\n              ...user,\r\n              roles: []\r\n            }\r\n          }\r\n        })\r\n      )\r\n      console.log('Users with roles:', usersWithRoles) // 添加日志\r\n      users.value = usersWithRoles\r\n    } else {\r\n      ElMessage.error(data.message || '获取用户列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取用户列表失败:', error)\r\n    ElMessage.error('获取用户列表失败')\r\n  }\r\n}\r\n\r\n// 获取所有角色\r\nconst getAllRoles = async () => {\r\n  try {\r\n    console.log('开始获取角色列表...') // 添加日志\r\n    const res = await fetch('http://127.0.0.1:8080/api/roles', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    \r\n    console.log('角色列表API响应状态:', res.status) // 添加日志\r\n    \r\n    if (!res.ok) {\r\n      throw new Error(`HTTP error! status: ${res.status}`)\r\n    }\r\n    \r\n    const data = await res.json()\r\n    console.log('获取角色列表响应:', data) // 添加日志\r\n    \r\n    if (data.code === 0) {\r\n      allRoles.value = data.data || []\r\n      console.log('设置角色列表:', allRoles.value) // 添加日志\r\n      if (allRoles.value.length === 0) {\r\n        console.warn('获取到的角色列表为空') // 添加警告日志\r\n      }\r\n    } else {\r\n      console.error('获取角色列表失败:', data.message)\r\n      ElMessage.error(data.message || '获取角色列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取角色列表失败:', error)\r\n    ElMessage.error('获取角色列表失败: ' + error.message)\r\n  }\r\n}\r\n\r\n// 添加用户\r\nconst handleAdd = async () => {\r\n  userForm.value = {\r\n    id: null,\r\n    username: '',\r\n    password: '',\r\n    roles: []\r\n  }\r\n  dialogTitle.value = '添加用户'\r\n  await getAllRoles() // 获取所有角色列表\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑用户\r\nconst handleEdit = async (row) => {\r\n  userForm.value = {\r\n    id: row.id,\r\n    username: row.username,\r\n    roles: row.roles.map(role => role.id)\r\n  }\r\n  dialogTitle.value = '编辑用户'\r\n  await getAllRoles() // 获取所有角色列表\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 删除用户\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm(\r\n    '确定要删除该用户吗？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/users/${row.id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      })\r\n      const data = await res.json()\r\n      if (data.code === 0) {\r\n        ElMessage.success('删除成功')\r\n        getUsers()\r\n      } else {\r\n        ElMessage.error(data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除用户失败:', error)\r\n      ElMessage.error('删除失败')\r\n    }\r\n  })\r\n}\r\n\r\n// 分配角色\r\nconst handleAssignRole = async (row) => {\r\n  currentUserId.value = row.id\r\n  await getAllRoles()\r\n  // 设置当前用户已有的角色\r\n  selectedRoles.value = row.roles.map(role => role.id)\r\n  roleDialogVisible.value = true\r\n}\r\n\r\n// 提交角色分配\r\nconst handleRoleSubmit = async () => {\r\n  try {\r\n    // 获取用户当前的角色\r\n    const userRoles = users.value\r\n      .find(user => user.id === currentUserId.value)\r\n      ?.roles.map(role => role.id) || []\r\n    \r\n    // 需要添加的角色\r\n    const rolesToAdd = selectedRoles.value.filter(roleId => !userRoles.includes(roleId))\r\n    // 需要移除的角色\r\n    const rolesToRemove = userRoles.filter(roleId => !selectedRoles.value.includes(roleId))\r\n\r\n    // 添加新角色\r\n    for (const roleId of rolesToAdd) {\r\n      const res = await fetch(`http://localhost:8000/api/roles/assign?userId=${currentUserId.value}&roleId=${roleId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      const data = await res.json()\r\n      console.log('分配角色响应:', data) // 添加日志\r\n      if (data.code !== 0) {\r\n        console.error('分配角色失败:', data) // 添加错误日志\r\n        throw new Error(data.message || `分配角色失败: ${roleId}`)\r\n      }\r\n    }\r\n\r\n    // 移除旧角色\r\n    for (const roleId of rolesToRemove) {\r\n      const res = await fetch(`http://localhost:8000/api/roles/remove?userId=${currentUserId.value}&roleId=${roleId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      const data = await res.json()\r\n      console.log('移除角色响应:', data) // 添加日志\r\n      if (data.code !== 0) {\r\n        console.error('移除角色失败:', data) // 添加错误日志\r\n        throw new Error(data.message || `移除角色失败: ${roleId}`)\r\n      }\r\n    }\r\n\r\n    ElMessage.success('角色分配成功')\r\n    roleDialogVisible.value = false\r\n    \r\n    // 立即获取用户列表以更新角色信息\r\n    await getUsers()\r\n  } catch (error) {\r\n    console.error('角色分配失败:', error)\r\n    ElMessage.error(error.message || '角色分配失败')\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  try {\r\n    // 如果是添加用户，验证密码长度\r\n    if (!userForm.value.id && userForm.value.password.length < settingsStore.passwordMinLength) {\r\n      ElMessage.error(`密码长度不能小于${settingsStore.passwordMinLength}位`)\r\n      return\r\n    }\r\n\r\n    const url = userForm.value.id \r\n      ? `http://localhost:8000/api/users/${userForm.value.id}`\r\n      : 'http://localhost:8000/api/register'\r\n    const method = userForm.value.id ? 'PUT' : 'POST'\r\n    \r\n    // 创建/更新用户的请求体\r\n    const requestBody = {\r\n      username: userForm.value.username\r\n    }\r\n    \r\n    // 只在添加用户时包含密码字段\r\n    if (!userForm.value.id) {\r\n      requestBody.password = userForm.value.password\r\n    }\r\n    \r\n    // 创建/更新用户\r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(requestBody)\r\n    })\r\n    \r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      // 如果是添加用户，需要分配角色\r\n      if (!userForm.value.id && userForm.value.roles.length > 0) {\r\n        const userId = data.data.id\r\n        // 为新用户分配角色\r\n        for (const roleId of userForm.value.roles) {\r\n          await fetch(`http://localhost:8000/api/roles/assign?userId=${userId}&roleId=${roleId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n          })\r\n        }\r\n      }\r\n      // 如果是编辑用户，更新角色\r\n      else if (userForm.value.id) {\r\n        const userId = userForm.value.id\r\n        const currentRoles = users.value\r\n          .find(user => user.id === userId)\r\n          ?.roles.map(role => role.id) || []\r\n        \r\n        // 需要添加的角色\r\n        const rolesToAdd = userForm.value.roles.filter(roleId => !currentRoles.includes(roleId))\r\n        // 需要移除的角色\r\n        const rolesToRemove = currentRoles.filter(roleId => !userForm.value.roles.includes(roleId))\r\n\r\n        // 添加新角色\r\n        for (const roleId of rolesToAdd) {\r\n          await fetch(`http://localhost:8000/api/roles/assign?userId=${userId}&roleId=${roleId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n          })\r\n        }\r\n\r\n        // 移除旧角色\r\n        for (const roleId of rolesToRemove) {\r\n          await fetch(`http://localhost:8000/api/roles/remove?userId=${userId}&roleId=${roleId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            credentials: 'include'\r\n          })\r\n        }\r\n      }\r\n\r\n      ElMessage.success(userForm.value.id ? '更新成功' : '添加成功')\r\n      dialogVisible.value = false\r\n      // 立即重新获取用户列表以更新角色信息\r\n      await getUsers()\r\n    } else {\r\n      ElMessage.error(data.message || (userForm.value.id ? '更新失败' : '添加失败'))\r\n    }\r\n  } catch (error) {\r\n    console.error('提交表单失败:', error)\r\n    ElMessage.error(userForm.value.id ? '更新失败' : '添加失败')\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await Promise.all([\r\n    getUsers(),\r\n    getAllRoles() // 在组件挂载时获取角色列表\r\n  ])\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.user-manage {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.role-tag {\r\n  margin-right: 5px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}