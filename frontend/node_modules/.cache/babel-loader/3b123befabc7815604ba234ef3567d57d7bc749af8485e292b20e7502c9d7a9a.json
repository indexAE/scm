{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\n\n// 日期快捷选项\n\nexport default {\n  __name: 'LoginLog',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var shortcuts = [{\n      text: '最近一周',\n      value: function value() {\n        var end = new Date();\n        var start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n        return [start, end];\n      }\n    }, {\n      text: '最近一个月',\n      value: function value() {\n        var end = new Date();\n        var start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n        return [start, end];\n      }\n    }, {\n      text: '最近三个月',\n      value: function value() {\n        var end = new Date();\n        var start = new Date();\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n        return [start, end];\n      }\n    }];\n\n    // 响应式数据\n    var logs = ref([]);\n    var dateRange = ref([]);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var total = ref(0);\n\n    // 获取日志列表\n    var fetchLogs = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, res, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              params = new URLSearchParams({\n                page: currentPage.value,\n                size: pageSize.value\n              });\n              if (dateRange.value && dateRange.value.length === 2) {\n                params.append('startDate', dateRange.value[0]);\n                params.append('endDate', dateRange.value[1]);\n              }\n              _context.next = 5;\n              return fetch(\"http://localhost:8080/api/logs/login?\".concat(params), {\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Bearer \".concat(localStorage.getItem('token')),\n                  'X-Username': localStorage.getItem('username')\n                },\n                credentials: 'include'\n              });\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n            case 8:\n              data = _context.sent;\n              if (data.code === 0) {\n                logs.value = data.data.logs;\n                total.value = data.data.total;\n              } else {\n                ElMessage.error(data.message || '获取日志失败');\n              }\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取日志失败:', _context.t0);\n              ElMessage.error('获取日志失败');\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n      return function fetchLogs() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 处理日期变化\n    var handleDateChange = function handleDateChange() {\n      currentPage.value = 1;\n      fetchLogs();\n    };\n\n    // 处理每页数量变化\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      fetchLogs();\n    };\n\n    // 处理页码变化\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n      fetchLogs();\n    };\n    onMounted(function () {\n      fetchLogs();\n    });\n    var __returned__ = {\n      shortcuts: shortcuts,\n      logs: logs,\n      dateRange: dateRange,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      total: total,\n      fetchLogs: fetchLogs,\n      handleDateChange: handleDateChange,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      ref: ref,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","shortcuts","text","value","end","Date","start","setTime","getTime","logs","dateRange","currentPage","pageSize","total","fetchLogs","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","res","data","wrap","_callee$","_context","prev","next","URLSearchParams","page","size","length","append","fetch","concat","headers","localStorage","getItem","credentials","sent","json","code","error","message","t0","console","stop","apply","arguments","handleDateChange","handleSizeChange","val","handleCurrentChange"],"sources":["C:/Users/indexae/Desktop/scm/frontend/src/views/LoginLog.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-log\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>登录日志</span>\r\n          <div class=\"header-right\">\r\n            <el-date-picker\r\n              v-model=\"dateRange\"\r\n              type=\"daterange\"\r\n              range-separator=\"至\"\r\n              start-placeholder=\"开始日期\"\r\n              end-placeholder=\"结束日期\"\r\n              :shortcuts=\"shortcuts\"\r\n              value-format=\"YYYY-MM-DD\"\r\n              @change=\"handleDateChange\"\r\n            />\r\n            <el-button type=\"primary\" @click=\"fetchLogs\">查询</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 日志列表 -->\r\n      <el-table :data=\"logs\" style=\"width: 100%\">\r\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" />\r\n        <el-table-column prop=\"ip\" label=\"IP地址\" width=\"120\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.status ? 'success' : 'danger'\">\r\n              {{ scope.row.status ? '成功' : '失败' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"browser\" label=\"浏览器\" width=\"150\" />\r\n        <el-table-column prop=\"os\" label=\"操作系统\" width=\"150\" />\r\n        <el-table-column prop=\"loginTime\" label=\"登录时间\" />\r\n      </el-table>\r\n      \r\n      <!-- 分页 -->\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 日期快捷选项\r\nconst shortcuts = [\r\n  {\r\n    text: '最近一周',\r\n    value: () => {\r\n      const end = new Date()\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\r\n      return [start, end]\r\n    },\r\n  },\r\n  {\r\n    text: '最近一个月',\r\n    value: () => {\r\n      const end = new Date()\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\r\n      return [start, end]\r\n    },\r\n  },\r\n  {\r\n    text: '最近三个月',\r\n    value: () => {\r\n      const end = new Date()\r\n      const start = new Date()\r\n      start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\r\n      return [start, end]\r\n    },\r\n  },\r\n]\r\n\r\n// 响应式数据\r\nconst logs = ref([])\r\nconst dateRange = ref([])\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\n\r\n// 获取日志列表\r\nconst fetchLogs = async () => {\r\n  try {\r\n    const params = new URLSearchParams({\r\n      page: currentPage.value,\r\n      size: pageSize.value,\r\n    })\r\n    \r\n    if (dateRange.value && dateRange.value.length === 2) {\r\n      params.append('startDate', dateRange.value[0])\r\n      params.append('endDate', dateRange.value[1])\r\n    }\r\n    \r\n    const res = await fetch(`http://localhost:8080/api/logs/login?${params}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        'X-Username': localStorage.getItem('username')\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    \r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      logs.value = data.data.logs\r\n      total.value = data.data.total\r\n    } else {\r\n      ElMessage.error(data.message || '获取日志失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取日志失败:', error)\r\n    ElMessage.error('获取日志失败')\r\n  }\r\n}\r\n\r\n// 处理日期变化\r\nconst handleDateChange = () => {\r\n  currentPage.value = 1\r\n  fetchLogs()\r\n}\r\n\r\n// 处理每页数量变化\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  fetchLogs()\r\n}\r\n\r\n// 处理页码变化\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  fetchLogs()\r\n}\r\n\r\nonMounted(() => {\r\n  fetchLogs()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.login-log {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-right {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}