{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useSettingsStore } from '../stores/settings';\nexport default {\n  __name: 'Register',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var router = useRouter();\n    var settingsStore = useSettingsStore();\n    var registerForm = reactive({\n      username: '',\n      password: '',\n      confirmPassword: ''\n    });\n    var handleRegister = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(registerForm.password.length < settingsStore.passwordMinLength)) {\n                _context.next = 3;\n                break;\n              }\n              ElMessage.error(\"\\u5BC6\\u7801\\u957F\\u5EA6\\u4E0D\\u80FD\\u5C0F\\u4E8E\".concat(settingsStore.passwordMinLength, \"\\u4F4D\"));\n              return _context.abrupt(\"return\");\n            case 3:\n              if (!(registerForm.password !== registerForm.confirmPassword)) {\n                _context.next = 6;\n                break;\n              }\n              ElMessage.error('两次输入的密码不一致');\n              return _context.abrupt(\"return\");\n            case 6:\n              _context.prev = 6;\n              _context.next = 9;\n              return fetch('http://localhost:8000/api/register', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: registerForm.username,\n                  password: registerForm.password\n                })\n              });\n            case 9:\n              res = _context.sent;\n              _context.next = 12;\n              return res.json();\n            case 12:\n              data = _context.sent;\n              if (data.code === 0) {\n                ElMessage.success('注册成功');\n                router.push('/login');\n              } else {\n                ElMessage.error(data.message);\n              }\n              _context.next = 20;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](6);\n              console.error('注册失败:', _context.t0);\n              ElMessage.error('注册失败,请重试');\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[6, 16]]);\n      }));\n      return function handleRegister() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var __returned__ = {\n      router: router,\n      settingsStore: settingsStore,\n      registerForm: registerForm,\n      handleRegister: handleRegister,\n      reactive: reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useSettingsStore() {\n        return useSettingsStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","useRouter","ElMessage","useSettingsStore","router","settingsStore","registerForm","username","password","confirmPassword","handleRegister","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_callee$","_context","prev","next","length","passwordMinLength","error","concat","abrupt","fetch","method","headers","body","JSON","stringify","sent","json","code","success","push","message","t0","console","stop","apply","arguments"],"sources":["C:/Users/indexae/Desktop/scm/scm日志/scm/frontend/src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <div class=\"register-box\">\r\n      <h2>供应链管理平台</h2>\r\n      <form @submit.prevent=\"handleRegister\">\r\n        <div class=\"form-item\">\r\n          <input\r\n            v-model=\"registerForm.username\"\r\n            type=\"text\"\r\n            placeholder=\"用户名\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <input\r\n            v-model=\"registerForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <input\r\n            v-model=\"registerForm.confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"确认密码\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <button type=\"submit\">注册</button>\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <router-link to=\"/login\" class=\"login-link\">已有账号？去登录</router-link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useSettingsStore } from '../stores/settings'\r\n\r\nconst router = useRouter()\r\nconst settingsStore = useSettingsStore()\r\n\r\nconst registerForm = reactive({\r\n  username: '',\r\n  password: '',\r\n  confirmPassword: ''\r\n})\r\n\r\nconst handleRegister = async () => {\r\n  // 验证密码长度\r\n  if (registerForm.password.length < settingsStore.passwordMinLength) {\r\n    ElMessage.error(`密码长度不能小于${settingsStore.passwordMinLength}位`)\r\n    return\r\n  }\r\n  \r\n  // 验证两次密码是否一致\r\n  if (registerForm.password !== registerForm.confirmPassword) {\r\n    ElMessage.error('两次输入的密码不一致')\r\n    return\r\n  }\r\n\r\n  try {\r\n    const res = await fetch('http://localhost:8000/api/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username: registerForm.username,\r\n        password: registerForm.password\r\n      })\r\n    })\r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      ElMessage.success('注册成功')\r\n      router.push('/login')\r\n    } else {\r\n      ElMessage.error(data.message)\r\n    }\r\n  } catch (error) {\r\n    console.error('注册失败:', error)\r\n    ElMessage.error('注册失败,请重试')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.register-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.register-box {\r\n  width: 400px;\r\n  padding: 40px;\r\n  background: white;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.register-box h2 {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-item input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  outline: none;\r\n}\r\n\r\n.form-item button {\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  background-color: #409eff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-item button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.login-link {\r\n  display: block;\r\n  text-align: center;\r\n  color: #409eff;\r\n  text-decoration: none;\r\n}\r\n\r\n.login-link:hover {\r\n  color: #66b1ff;\r\n}\r\n</style> "],"mappings":";;;;;;;AAyCA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,gBAAgB,QAAQ,oBAAoB;;;;;;IAErD,IAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,IAAMI,aAAa,GAAGF,gBAAgB,CAAC,CAAC;IAExC,IAAMG,YAAY,GAAGN,QAAQ,CAAC;MAC5BO,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC,CAAC;IAEF,IAAMC,cAAc;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,GAAA,EAAAC,IAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,MAEjBhB,YAAY,CAACE,QAAQ,CAACe,MAAM,GAAGlB,aAAa,CAACmB,iBAAiB;gBAAAJ,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAChEpB,SAAS,CAACuB,KAAK,oDAAAC,MAAA,CAAYrB,aAAa,CAACmB,iBAAiB,WAAG,CAAC;cAAA,OAAAJ,QAAA,CAAAO,MAAA;YAAA;cAAA,MAK5DrB,YAAY,CAACE,QAAQ,KAAKF,YAAY,CAACG,eAAe;gBAAAW,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACxDpB,SAAS,CAACuB,KAAK,CAAC,YAAY,CAAC;cAAA,OAAAL,QAAA,CAAAO,MAAA;YAAA;cAAAP,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAKXM,KAAK,CAAC,oCAAoC,EAAE;gBAC5DC,MAAM,EAAE,MAAM;gBACdC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;kBACnB1B,QAAQ,EAAED,YAAY,CAACC,QAAQ;kBAC/BC,QAAQ,EAAEF,YAAY,CAACE;gBACzB,CAAC;cACH,CAAC,CAAC;YAAA;cATIQ,GAAG,GAAAI,QAAA,CAAAc,IAAA;cAAAd,QAAA,CAAAE,IAAA;cAAA,OAUUN,GAAG,CAACmB,IAAI,CAAC,CAAC;YAAA;cAAvBlB,IAAI,GAAAG,QAAA,CAAAc,IAAA;cACV,IAAIjB,IAAI,CAACmB,IAAI,KAAK,CAAC,EAAE;gBACnBlC,SAAS,CAACmC,OAAO,CAAC,MAAM,CAAC;gBACzBjC,MAAM,CAACkC,IAAI,CAAC,QAAQ,CAAC;cACvB,CAAC,MAAM;gBACLpC,SAAS,CAACuB,KAAK,CAACR,IAAI,CAACsB,OAAO,CAAC;cAC/B;cAACnB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAoB,EAAA,GAAApB,QAAA;cAEDqB,OAAO,CAAChB,KAAK,CAAC,OAAO,EAAAL,QAAA,CAAAoB,EAAO,CAAC;cAC7BtC,SAAS,CAACuB,KAAK,CAAC,UAAU,CAAC;YAAA;YAAA;cAAA,OAAAL,QAAA,CAAAsB,IAAA;UAAA;QAAA,GAAA3B,OAAA;MAAA,CAE9B;MAAA,gBAnCKL,cAAcA,CAAA;QAAA,OAAAC,KAAA,CAAAgC,KAAA,OAAAC,SAAA;MAAA;IAAA,GAmCnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}