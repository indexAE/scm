{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"return-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"table-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_col = _resolveComponent(\"el-col\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_row = _resolveComponent(\"el-row\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($setup.formTitle), 1 /* TEXT */), _createVNode(_component_el_button, {\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.$router.back();\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[7] || (_cache[7] = [_createTextVNode(\"返回\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-width\": \"120px\",\n        \"class\": \"return-form\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" 基本信息 \"), _createVNode(_component_el_row, {\n            gutter: 20\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"退货单号\",\n                    prop: \"returnNo\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.form.returnNo,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                          return $setup.form.returnNo = $event;\n                        }),\n                        disabled: \"\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"关联订单号\",\n                    prop: \"orderId\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_select, {\n                        modelValue: $setup.form.orderId,\n                        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                          return $setup.form.orderId = $event;\n                        }),\n                        placeholder: \"请选择关联订单\",\n                        disabled: $setup.isView || !!$setup.id,\n                        onChange: $setup.handleOrderChange\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.orders, function (order) {\n                            return _openBlock(), _createBlock(_component_el_option, {\n                              key: order.id,\n                              label: order.orderNo,\n                              value: order.id\n                            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                          }), 128 /* KEYED_FRAGMENT */))];\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"客户名称\",\n                    prop: \"customerName\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.form.customerName,\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                          return $setup.form.customerName = $event;\n                        }),\n                        disabled: \"\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 退货商品列表 \"), _createVNode(_component_el_form_item, {\n            label: \"退货商品\",\n            prop: \"items\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_table, {\n                data: $setup.form.items,\n                border: \"\",\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_table_column, {\n                    label: \"商品名称\",\n                    width: \"200\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_select, {\n                        modelValue: scope.row.productId,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.productId = $event;\n                        },\n                        placeholder: \"请选择商品\",\n                        disabled: $setup.isView,\n                        onChange: function onChange(val) {\n                          return $setup.handleProductChange(val, scope.$index);\n                        }\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.orderProducts, function (product) {\n                            return _openBlock(), _createBlock(_component_el_option, {\n                              key: product.id,\n                              label: product.name,\n                              value: product.id\n                            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                          }), 128 /* KEYED_FRAGMENT */))];\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    prop: \"productName\",\n                    label: \"商品名称\",\n                    width: \"200\"\n                  }), _createVNode(_component_el_table_column, {\n                    prop: \"productSpec\",\n                    label: \"规格\",\n                    width: \"120\"\n                  }), _createVNode(_component_el_table_column, {\n                    prop: \"unit\",\n                    label: \"单位\",\n                    width: \"80\"\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"数量\",\n                    width: \"150\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: scope.row.quantity,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.quantity = $event;\n                        },\n                        min: 1,\n                        max: scope.row.maxQuantity,\n                        disabled: $setup.isView,\n                        onChange: function onChange() {\n                          return $setup.calculateItemAmount(scope.$index);\n                        }\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"max\", \"disabled\", \"onChange\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"单价\",\n                    width: \"150\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: scope.row.unitPrice,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.unitPrice = $event;\n                        },\n                        precision: 2,\n                        disabled: true\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"金额\",\n                    width: \"150\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: scope.row.totalPrice,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.totalPrice = $event;\n                        },\n                        precision: 2,\n                        disabled: true\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), !$setup.isView ? (_openBlock(), _createBlock(_component_el_table_column, {\n                    key: 0,\n                    label: \"操作\",\n                    width: \"120\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_button, {\n                        link: \"\",\n                        type: \"danger\",\n                        onClick: function onClick($event) {\n                          return $setup.handleDeleteItem(scope.$index);\n                        }\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[8] || (_cache[8] = [_createTextVNode(\" 删除 \")]);\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })) : _createCommentVNode(\"v-if\", true)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"data\"]), !$setup.isView ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleAddItem\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[9] || (_cache[9] = [_createTextVNode(\"添加商品\")]);\n                }),\n                _: 1 /* STABLE */\n              })])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"退货原因\",\n            prop: \"reason\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.reason,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                  return $setup.form.reason = $event;\n                }),\n                type: \"textarea\",\n                rows: 3,\n                placeholder: \"请输入退货原因\",\n                disabled: $setup.isView\n              }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"备注\",\n            prop: \"remark\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.remark,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                  return $setup.form.remark = $event;\n                }),\n                type: \"textarea\",\n                rows: 3,\n                placeholder: \"请输入备注信息\",\n                disabled: $setup.isView\n              }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [!$setup.isView ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"primary\",\n                onClick: $setup.handleSubmit,\n                loading: $setup.submitting\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[10] || (_cache[10] = [_createTextVNode(\" 保存 \")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"loading\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n                onClick: _cache[6] || (_cache[6] = function ($event) {\n                  return _ctx.$router.back();\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[11] || (_cache[11] = [_createTextVNode(\"取消\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_toDisplayString","$setup","formTitle","_component_el_button","onClick","_cache","$event","_ctx","$router","back","_createTextVNode","_","_component_el_form","ref","model","form","rules","_createCommentVNode","_component_el_row","gutter","_component_el_col","span","_component_el_form_item","label","prop","_component_el_input","modelValue","returnNo","disabled","_component_el_select","orderId","placeholder","isView","id","onChange","handleOrderChange","_Fragment","_renderList","orders","order","_createBlock","_component_el_option","orderNo","value","customerName","_component_el_table","data","items","border","style","_component_el_table_column","width","scope","row","productId","onUpdateModelValue","val","handleProductChange","$index","orderProducts","product","name","_component_el_input_number","quantity","min","max","maxQuantity","calculateItemAmount","unitPrice","precision","totalPrice","link","type","handleDeleteItem","_hoisted_3","handleAddItem","reason","rows","remark","handleSubmit","loading","submitting"],"sources":["C:\\Users\\indexae\\Desktop\\scm\\scm日志\\scm\\frontend\\src\\views\\sale\\return\\form.vue"],"sourcesContent":["<template>\r\n  <div class=\"return-form\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>{{ formTitle }}</span>\r\n          <el-button @click=\"$router.back()\">返回</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"120px\"\r\n        class=\"return-form\"\r\n      >\r\n        <!-- 基本信息 -->\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"退货单号\" prop=\"returnNo\">\r\n              <el-input v-model=\"form.returnNo\" disabled />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"关联订单号\" prop=\"orderId\">\r\n              <el-select\r\n                v-model=\"form.orderId\"\r\n                placeholder=\"请选择关联订单\"\r\n                :disabled=\"isView || !!id\"\r\n                @change=\"handleOrderChange\"\r\n              >\r\n                <el-option\r\n                  v-for=\"order in orders\"\r\n                  :key=\"order.id\"\r\n                  :label=\"order.orderNo\"\r\n                  :value=\"order.id\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"客户名称\" prop=\"customerName\">\r\n              <el-input v-model=\"form.customerName\" disabled />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <!-- 退货商品列表 -->\r\n        <el-form-item label=\"退货商品\" prop=\"items\">\r\n          <el-table :data=\"form.items\" border style=\"width: 100%\">\r\n            <el-table-column label=\"商品名称\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <el-select\r\n                  v-model=\"scope.row.productId\"\r\n                  placeholder=\"请选择商品\"\r\n                  :disabled=\"isView\"\r\n                  @change=\"(val) => handleProductChange(val, scope.$index)\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"product in orderProducts\"\r\n                    :key=\"product.id\"\r\n                    :label=\"product.name\"\r\n                    :value=\"product.id\"\r\n                  />\r\n                </el-select>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"productName\" label=\"商品名称\" width=\"200\" />\r\n            <el-table-column prop=\"productSpec\" label=\"规格\" width=\"120\" />\r\n            <el-table-column prop=\"unit\" label=\"单位\" width=\"80\" />\r\n            <el-table-column label=\"数量\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.quantity\"\r\n                  :min=\"1\"\r\n                  :max=\"scope.row.maxQuantity\"\r\n                  :disabled=\"isView\"\r\n                  @change=\"() => calculateItemAmount(scope.$index)\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"单价\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.unitPrice\"\r\n                  :precision=\"2\"\r\n                  :disabled=\"true\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"金额\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.totalPrice\"\r\n                  :precision=\"2\"\r\n                  :disabled=\"true\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"120\" v-if=\"!isView\">\r\n              <template #default=\"scope\">\r\n                <el-button\r\n                  link\r\n                  type=\"danger\"\r\n                  @click=\"handleDeleteItem(scope.$index)\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <div class=\"table-footer\" v-if=\"!isView\">\r\n            <el-button type=\"primary\" @click=\"handleAddItem\">添加商品</el-button>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"退货原因\" prop=\"reason\">\r\n          <el-input\r\n            v-model=\"form.reason\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入退货原因\"\r\n            :disabled=\"isView\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input\r\n            v-model=\"form.remark\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入备注信息\"\r\n            :disabled=\"isView\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button\r\n            v-if=\"!isView\"\r\n            type=\"primary\"\r\n            @click=\"handleSubmit\"\r\n            :loading=\"submitting\"\r\n          >\r\n            保存\r\n          </el-button>\r\n          <el-button @click=\"$router.back()\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst formRef = ref(null)\r\nconst submitting = ref(false)\r\n\r\n// 获取路由参数\r\nconst id = route.query.id\r\nconst mode = route.query.mode\r\nconst isView = computed(() => mode === 'view')\r\n\r\n// 表单标题\r\nconst formTitle = computed(() => {\r\n  if (isView.value) return '查看退货单'\r\n  return id ? '编辑退货单' : '新增退货单'\r\n})\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  returnNo: '',\r\n  orderId: '',\r\n  orderNo: '',\r\n  customerId: '',\r\n  customerName: '',\r\n  totalAmount: 0,\r\n  reason: '',\r\n  remark: '',\r\n  items: []\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  orderId: [{ required: true, message: '请选择关联订单', trigger: 'change' }],\r\n  reason: [{ required: true, message: '请输入退货原因', trigger: 'blur' }],\r\n  items: [{ required: true, type: 'array', message: '请添加退货商品', trigger: 'change' }]\r\n}\r\n\r\n// 订单列表\r\nconst orders = ref([])\r\n// 订单商品列表\r\nconst orderProducts = ref([])\r\n\r\n// 获取订单列表\r\nconst getOrders = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8080/api/sale/orders?status=completed', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      orders.value = result.data.list || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取订单列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单列表失败:', error)\r\n    ElMessage.error('获取订单列表失败')\r\n  }\r\n}\r\n\r\n// 获取退货单详情\r\nconst getReturnDetail = async () => {\r\n  try {\r\n    const response = await fetch(`http://127.0.0.1:8080/api/sale/returns/${id}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      Object.assign(form, result.data)\r\n      if (form.orderId) {\r\n        await getOrderProducts(form.orderId)\r\n      }\r\n    } else {\r\n      ElMessage.error(result.message || '获取退货单详情失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取退货单详情失败:', error)\r\n    ElMessage.error('获取退货单详情失败')\r\n  }\r\n}\r\n\r\n// 处理订单选择变化\r\nconst handleOrderChange = async (orderId) => {\r\n  try {\r\n    // 获取订单详情\r\n    const response = await fetch(`http://127.0.0.1:8080/api/sale/orders/${orderId}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      const order = result.data\r\n      form.orderNo = order.orderNo\r\n      form.customerId = order.customerId\r\n      form.customerName = order.customerName\r\n      // 清空商品列表\r\n      form.items = []\r\n      // 获取订单商品\r\n      await getOrderProducts(orderId)\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单详情失败:', error)\r\n    ElMessage.error('获取订单详情失败')\r\n  }\r\n}\r\n\r\n// 获取订单商品\r\nconst getOrderProducts = async (orderId) => {\r\n  try {\r\n    const response = await fetch(`http://127.0.0.1:8080/api/sale/orders/${orderId}/items`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      orderProducts.value = result.data || []\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单商品失败:', error)\r\n    ElMessage.error('获取订单商品失败')\r\n  }\r\n}\r\n\r\n// 处理商品选择变化\r\nconst handleProductChange = (productId, index) => {\r\n  const product = orderProducts.value.find(p => p.id === productId)\r\n  if (product) {\r\n    form.items[index] = {\r\n      ...form.items[index],\r\n      productId: product.id,\r\n      productName: product.name,\r\n      productSpec: product.spec,\r\n      unit: product.unit,\r\n      unitPrice: product.price,\r\n      maxQuantity: product.quantity,\r\n      quantity: 1\r\n    }\r\n    calculateItemAmount(index)\r\n  }\r\n}\r\n\r\n// 添加商品明细\r\nconst handleAddItem = () => {\r\n  form.items.push({\r\n    productId: '',\r\n    productName: '',\r\n    productSpec: '',\r\n    unit: '',\r\n    quantity: 1,\r\n    unitPrice: 0,\r\n    totalPrice: 0,\r\n    maxQuantity: 0\r\n  })\r\n}\r\n\r\n// 删除商品明细\r\nconst handleDeleteItem = (index) => {\r\n  form.items.splice(index, 1)\r\n}\r\n\r\n// 计算商品金额\r\nconst calculateItemAmount = (index) => {\r\n  const item = form.items[index]\r\n  item.totalPrice = item.quantity * item.unitPrice\r\n  // 计算总金额\r\n  form.totalAmount = form.items.reduce((sum, item) => sum + (item.totalPrice || 0), 0)\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      if (form.items.length === 0) {\r\n        ElMessage.warning('请添加退货商品')\r\n        return\r\n      }\r\n\r\n      submitting.value = true\r\n      try {\r\n        const url = id\r\n          ? `http://127.0.0.1:8080/api/sale/returns/${id}`\r\n          : 'http://127.0.0.1:8080/api/sale/returns'\r\n        const method = id ? 'PUT' : 'POST'\r\n        \r\n        const response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(form)\r\n        })\r\n        \r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          ElMessage.success(id ? '更新成功' : '创建成功')\r\n          router.back()\r\n        } else {\r\n          ElMessage.error(result.message || (id ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(id ? '更新退货单失败:' : '创建退货单失败:', error)\r\n        ElMessage.error(id ? '更新失败' : '创建失败')\r\n      } finally {\r\n        submitting.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 初始化\r\nonMounted(async () => {\r\n  await getOrders()\r\n  if (id) {\r\n    await getReturnDetail()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.return-form {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.el-form {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.table-footer {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}