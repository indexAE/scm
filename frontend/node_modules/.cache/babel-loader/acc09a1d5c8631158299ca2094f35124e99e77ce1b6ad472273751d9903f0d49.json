{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"login-box\"\n};\nvar _hoisted_3 = {\n  \"class\": \"form-item\"\n};\nvar _hoisted_4 = {\n  \"class\": \"form-item\"\n};\nvar _hoisted_5 = {\n  \"class\": \"form-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"供应链管理平台\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.handleLogin, [\"prevent\"])\n  }, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $setup.loginForm.username = $event;\n    }),\n    type: \"text\",\n    placeholder: \"用户名\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.loginForm.username]])]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $setup.loginForm.password = $event;\n    }),\n    type: \"password\",\n    placeholder: \"密码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.loginForm.password]])]), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    \"class\": \"form-item\"\n  }, [_createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"登录\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: \"/register\",\n    \"class\": \"register-link\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[2] || (_cache[2] = [_createTextVNode(\"没有账号？去注册\")]);\n    }),\n    _: 1 /* STABLE */\n  })])], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_withModifiers","$setup","handleLogin","_hoisted_3","_cache","$event","loginForm","username","type","placeholder","required","_hoisted_4","password","_hoisted_5","_createVNode","_component_router_link","to","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\indexae\\Desktop\\scm退货\\scm\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <h2>供应链管理平台</h2>\n      <form @submit.prevent=\"handleLogin\">\n        <div class=\"form-item\">\n          <input\n            v-model=\"loginForm.username\"\n            type=\"text\"\n            placeholder=\"用户名\"\n            required\n          />\n        </div>\n        <div class=\"form-item\">\n          <input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"密码\"\n            required\n          />\n        </div>\n        <div class=\"form-item\">\n          <button type=\"submit\">登录</button>\n        </div>\n        <div class=\"form-item\">\n          <router-link to=\"/register\" class=\"register-link\">没有账号？去注册</router-link>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { useSettingsStore } from '../stores/settings'\nimport { useAuthStore } from '../stores/auth'\nimport axios from 'axios'\n\nconst router = useRouter()\nconst settingsStore = useSettingsStore()\nconst authStore = useAuthStore()\n\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\n// 检查账户是否被锁定\nconst checkAccountLock = (username) => {\n  if (!settingsStore.loginLockEnabled) return false\n  \n  const lockInfo = JSON.parse(localStorage.getItem(`loginLock_${username}`) || '{\"count\": 0, \"lastFailTime\": 0}')\n  \n  // 如果失败次数达到5次\n  if (lockInfo.count >= 5) {\n    const lockDuration = 30 * 60 * 1000 // 30分钟的毫秒数\n    const now = Date.now()\n    \n    // 如果在锁定时间内\n    if (now - lockInfo.lastFailTime < lockDuration) {\n      const remainingMinutes = Math.ceil((lockDuration - (now - lockInfo.lastFailTime)) / (60 * 1000))\n      ElMessage.error(`账户已被锁定，请${remainingMinutes}分钟后再试`)\n      return true\n    } else {\n      // 锁定时间已过，重置计数\n      localStorage.removeItem(`loginLock_${username}`)\n      return false\n    }\n  }\n  \n  return false\n}\n\nconst handleLogin = async () => {\n  // 检查账户是否被锁定\n  if (checkAccountLock(loginForm.username)) {\n    return\n  }\n\n  try {\n    const res = await axios.post('http://localhost:8080/api/auth/login', {\n      username: loginForm.username,\n      password: loginForm.password\n    })\n    \n    if (res.data.code === 0) {\n      // 登录成功，清除锁定信息\n      localStorage.removeItem(`loginLock_${loginForm.username}`)\n      \n      // 保存token和用户信息\n      localStorage.setItem('token', res.data.data.token)\n      localStorage.setItem('username', res.data.data.username)\n      \n      // 设置用户角色信息\n      authStore.setUserInfo(res.data.data.role, res.data.data.username)\n      \n      // 跳转到首页\n      router.push('/dashboard')\n      ElMessage.success('登录成功')\n    } else {\n      // 登录失败，更新失败次数\n      const lockInfo = JSON.parse(localStorage.getItem(`loginLock_${loginForm.username}`) || '{\"count\": 0, \"lastFailTime\": 0}')\n      lockInfo.count++\n      lockInfo.lastFailTime = Date.now()\n      localStorage.setItem(`loginLock_${loginForm.username}`, JSON.stringify(lockInfo))\n      \n      const remainingAttempts = 5 - lockInfo.count\n      if (remainingAttempts > 0) {\n        ElMessage.error(`登录失败，还剩${remainingAttempts}次尝试机会`)\n      } else {\n        ElMessage.error('登录失败次数过多，账户已被锁定30分钟')\n      }\n      \n      ElMessage.error(res.data.msg || '登录失败')\n    }\n  } catch (error) {\n    console.error('登录失败:', error)\n    ElMessage.error('登录失败，请稍后重试')\n  }\n}\n\n// 在组件挂载时获取系统设置\nonMounted(() => {\n  settingsStore.fetchSettings()\n})\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f5f5;\n}\n\n.login-box {\n  width: 400px;\n  padding: 40px;\n  background: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.login-box h2 {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.form-item {\n  margin-bottom: 20px;\n}\n\n.form-item input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  outline: none;\n}\n\n.form-item button {\n  width: 100%;\n  padding: 12px 0;\n  background-color: #409eff;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.form-item button:hover {\n  background-color: #66b1ff;\n}\n\n.register-link {\n  display: block;\n  text-align: center;\n  color: #409eff;\n  text-decoration: none;\n}\n\n.register-link:hover {\n  color: #66b1ff;\n}\n</style> "],"mappings":";;EACO,SAAM;AAAiB;;EACrB,SAAM;AAAW;;EAGb,SAAM;AAAW;;EAQjB,SAAM;AAAW;;EAWjB,SAAM;AAAW;;;uBAvB5BA,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJD,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAuBO;IAvBAE,QAAM,EAJnBC,cAAA,CAI6BC,MAAA,CAAAC,WAAW;MAChCL,mBAAA,CAOM,OAPNM,UAOM,G,gBANJN,mBAAA,CAKE;IAXZ,uBAAAO,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAOqBJ,MAAA,CAAAK,SAAS,CAACC,QAAQ,GAAAF,MAAA;IAAA;IAC3BG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,KAAK;IACjBC,QAAQ,EAAR;iDAHST,MAAA,CAAAK,SAAS,CAACC,QAAQ,E,KAM/BV,mBAAA,CAOM,OAPNc,UAOM,G,gBANJd,mBAAA,CAKE;IAnBZ,uBAAAO,MAAA,QAAAA,MAAA,gBAAAC,MAAA;MAAA,OAeqBJ,MAAA,CAAAK,SAAS,CAACM,QAAQ,GAAAP,MAAA;IAAA;IAC3BG,IAAI,EAAC,UAAU;IACfC,WAAW,EAAC,IAAI;IAChBC,QAAQ,EAAR;iDAHST,MAAA,CAAAK,SAAS,CAACM,QAAQ,E,+BAM/Bf,mBAAA,CAEM;IAFD,SAAM;EAAW,IACpBA,mBAAA,CAAiC;IAAzBW,IAAI,EAAC;EAAQ,GAAC,IAAE,E,sBAE1BX,mBAAA,CAEM,OAFNgB,UAEM,GADJC,YAAA,CAAwEC,sBAAA;IAA3DC,EAAE,EAAC,WAAW;IAAC,SAAM;;IAzB5C,WAAAC,QAAA,CAyB4D;MAAA,OAAQb,MAAA,QAAAA,MAAA,OAzBpEc,gBAAA,CAyB4D,UAAQ,E;;IAzBpEC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}