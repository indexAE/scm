{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useSettingsStore } from '../stores/settings';\nexport default {\n  __name: 'Login',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var router = useRouter();\n    var settingsStore = useSettingsStore();\n    var loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 检查账户是否被锁定\n    var checkAccountLock = function checkAccountLock(username) {\n      if (!settingsStore.loginLockEnabled) return false;\n      var lockInfo = JSON.parse(localStorage.getItem(\"loginLock_\".concat(username)) || '{\"count\": 0, \"lastFailTime\": 0}');\n\n      // 如果失败次数达到5次\n      if (lockInfo.count >= 5) {\n        var lockDuration = 30 * 60 * 1000; // 30分钟的毫秒数\n        var now = Date.now();\n\n        // 如果在锁定时间内\n        if (now - lockInfo.lastFailTime < lockDuration) {\n          var remainingMinutes = Math.ceil((lockDuration - (now - lockInfo.lastFailTime)) / (60 * 1000));\n          ElMessage.error(\"\\u8D26\\u6237\\u5DF2\\u88AB\\u9501\\u5B9A\\uFF0C\\u8BF7\".concat(remainingMinutes, \"\\u5206\\u949F\\u540E\\u518D\\u8BD5\"));\n          return true;\n        } else {\n          // 锁定时间已过，重置计数\n          localStorage.removeItem(\"loginLock_\".concat(username));\n          return false;\n        }\n      }\n      return false;\n    };\n\n    // 记录登录失败\n    var recordLoginFailure = function recordLoginFailure(username) {\n      if (!settingsStore.loginLockEnabled) return;\n      var lockInfo = JSON.parse(localStorage.getItem(\"loginLock_\".concat(username)) || '{\"count\": 0, \"lastFailTime\": 0}');\n      lockInfo.count++;\n      lockInfo.lastFailTime = Date.now();\n      localStorage.setItem(\"loginLock_\".concat(username), JSON.stringify(lockInfo));\n      var remainingAttempts = 5 - lockInfo.count;\n      if (remainingAttempts > 0) {\n        ElMessage.error(\"\\u767B\\u5F55\\u5931\\u8D25\\uFF0C\\u8FD8\\u5269\".concat(remainingAttempts, \"\\u6B21\\u5C1D\\u8BD5\\u673A\\u4F1A\"));\n      } else {\n        ElMessage.error('登录失败次数过多，账户已被锁定30分钟');\n      }\n    };\n\n    // 清除登录失败记录\n    var clearLoginFailure = function clearLoginFailure(username) {\n      localStorage.removeItem(\"loginLock_\".concat(username));\n    };\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, data, redirect;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!checkAccountLock(loginForm.username)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:8000/api/login', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify(loginForm)\n              });\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n            case 8:\n              data = _context.sent;\n              if (data.code === 0) {\n                localStorage.setItem('username', data.data.username);\n                localStorage.setItem('userId', data.data.id);\n                localStorage.setItem('token', data.data.token);\n\n                // 登录成功，清除失败记录\n                clearLoginFailure(loginForm.username);\n                ElMessage.success('登录成功');\n\n                // 获取重定向路径或使用默认路径\n                redirect = router.currentRoute.value.query.redirect || '/';\n                router.push(redirect);\n              } else {\n                // 记录登录失败\n                recordLoginFailure(loginForm.username);\n                ElMessage.error(data.message);\n              }\n              _context.next = 17;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('登录失败:', _context.t0);\n              // 记录登录失败\n              recordLoginFailure(loginForm.username);\n              ElMessage.error('登录失败');\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 12]]);\n      }));\n      return function handleLogin() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 在组件挂载时获取系统设置\n    onMounted(function () {\n      settingsStore.fetchSettings();\n    });\n    var __returned__ = {\n      router: router,\n      settingsStore: settingsStore,\n      loginForm: loginForm,\n      checkAccountLock: checkAccountLock,\n      recordLoginFailure: recordLoginFailure,\n      clearLoginFailure: clearLoginFailure,\n      handleLogin: handleLogin,\n      reactive: reactive,\n      onMounted: onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useSettingsStore() {\n        return useSettingsStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","onMounted","useRouter","ElMessage","useSettingsStore","router","settingsStore","loginForm","username","password","checkAccountLock","loginLockEnabled","lockInfo","JSON","parse","localStorage","getItem","concat","count","lockDuration","now","Date","lastFailTime","remainingMinutes","Math","ceil","error","removeItem","recordLoginFailure","setItem","stringify","remainingAttempts","clearLoginFailure","handleLogin","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","redirect","wrap","_callee$","_context","prev","next","abrupt","fetch","method","headers","credentials","body","sent","json","code","id","token","success","currentRoute","value","query","push","message","t0","console","stop","apply","arguments","fetchSettings"],"sources":["C:/Users/indexae/Desktop/scm/frontend/src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <h2>供应链管理平台</h2>\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-item\">\r\n          <input\r\n            v-model=\"loginForm.username\"\r\n            type=\"text\"\r\n            placeholder=\"用户名\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <input\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <button type=\"submit\">登录</button>\r\n        </div>\r\n        <div class=\"form-item\">\r\n          <router-link to=\"/register\" class=\"register-link\">没有账号？去注册</router-link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useSettingsStore } from '../stores/settings'\r\n\r\nconst router = useRouter()\r\nconst settingsStore = useSettingsStore()\r\n\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: ''\r\n})\r\n\r\n// 检查账户是否被锁定\r\nconst checkAccountLock = (username) => {\r\n  if (!settingsStore.loginLockEnabled) return false\r\n  \r\n  const lockInfo = JSON.parse(localStorage.getItem(`loginLock_${username}`) || '{\"count\": 0, \"lastFailTime\": 0}')\r\n  \r\n  // 如果失败次数达到5次\r\n  if (lockInfo.count >= 5) {\r\n    const lockDuration = 30 * 60 * 1000 // 30分钟的毫秒数\r\n    const now = Date.now()\r\n    \r\n    // 如果在锁定时间内\r\n    if (now - lockInfo.lastFailTime < lockDuration) {\r\n      const remainingMinutes = Math.ceil((lockDuration - (now - lockInfo.lastFailTime)) / (60 * 1000))\r\n      ElMessage.error(`账户已被锁定，请${remainingMinutes}分钟后再试`)\r\n      return true\r\n    } else {\r\n      // 锁定时间已过，重置计数\r\n      localStorage.removeItem(`loginLock_${username}`)\r\n      return false\r\n    }\r\n  }\r\n  \r\n  return false\r\n}\r\n\r\n// 记录登录失败\r\nconst recordLoginFailure = (username) => {\r\n  if (!settingsStore.loginLockEnabled) return\r\n  \r\n  const lockInfo = JSON.parse(localStorage.getItem(`loginLock_${username}`) || '{\"count\": 0, \"lastFailTime\": 0}')\r\n  lockInfo.count++\r\n  lockInfo.lastFailTime = Date.now()\r\n  localStorage.setItem(`loginLock_${username}`, JSON.stringify(lockInfo))\r\n  \r\n  const remainingAttempts = 5 - lockInfo.count\r\n  if (remainingAttempts > 0) {\r\n    ElMessage.error(`登录失败，还剩${remainingAttempts}次尝试机会`)\r\n  } else {\r\n    ElMessage.error('登录失败次数过多，账户已被锁定30分钟')\r\n  }\r\n}\r\n\r\n// 清除登录失败记录\r\nconst clearLoginFailure = (username) => {\r\n  localStorage.removeItem(`loginLock_${username}`)\r\n}\r\n\r\nconst handleLogin = async () => {\r\n  // 检查账户是否被锁定\r\n  if (checkAccountLock(loginForm.username)) {\r\n    return\r\n  }\r\n\r\n  try {\r\n    const res = await fetch('http://localhost:8000/api/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(loginForm)\r\n    })\r\n    \r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      localStorage.setItem('username', data.data.username)\r\n      localStorage.setItem('userId', data.data.id)\r\n      localStorage.setItem('token', data.data.token)\r\n      \r\n      // 登录成功，清除失败记录\r\n      clearLoginFailure(loginForm.username)\r\n      \r\n      ElMessage.success('登录成功')\r\n      \r\n      // 获取重定向路径或使用默认路径\r\n      const redirect = router.currentRoute.value.query.redirect || '/'\r\n      router.push(redirect)\r\n    } else {\r\n      // 记录登录失败\r\n      recordLoginFailure(loginForm.username)\r\n      ElMessage.error(data.message)\r\n    }\r\n  } catch (error) {\r\n    console.error('登录失败:', error)\r\n    // 记录登录失败\r\n    recordLoginFailure(loginForm.username)\r\n    ElMessage.error('登录失败')\r\n  }\r\n}\r\n\r\n// 在组件挂载时获取系统设置\r\nonMounted(() => {\r\n  settingsStore.fetchSettings()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.login-box {\r\n  width: 400px;\r\n  padding: 40px;\r\n  background: white;\r\n  border-radius: 4px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.login-box h2 {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-item {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-item input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  outline: none;\r\n}\r\n\r\n.form-item button {\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  background-color: #409eff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n.form-item button:hover {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.register-link {\r\n  display: block;\r\n  text-align: center;\r\n  color: #409eff;\r\n  text-decoration: none;\r\n}\r\n\r\n.register-link:hover {\r\n  color: #66b1ff;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}