{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Login from '../components/Login.vue';\nimport Register from '../components/Register.vue';\nimport Dashboard from '../components/Dashboard.vue';\nimport UserManage from '../components/UserManage.vue';\nimport Profile from '../components/Profile.vue';\nimport SystemSettings from '../components/SystemSettings.vue';\nimport LoginLog from '../components/LoginLog.vue';\nimport OperationLog from '../components/OperationLog.vue';\nvar routes = [{\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: '/',\n  name: 'Dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/users',\n  name: 'UserManage',\n  component: UserManage,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: Profile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/settings',\n  name: 'SystemSettings',\n  component: SystemSettings,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/logs/login',\n  name: 'LoginLog',\n  component: LoginLog,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/logs/operation',\n  name: 'OperationLog',\n  component: OperationLog,\n  meta: {\n    requiresAuth: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    var token = localStorage.getItem('token');\n    if (!token) {\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Login","Register","Dashboard","UserManage","Profile","SystemSettings","LoginLog","OperationLog","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","matched","some","record","token","localStorage","getItem","query","redirect","fullPath"],"sources":["C:/Users/indexae/Desktop/scm/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport Login from '../components/Login.vue'\r\nimport Register from '../components/Register.vue'\r\nimport Dashboard from '../components/Dashboard.vue'\r\nimport UserManage from '../components/UserManage.vue'\r\nimport Profile from '../components/Profile.vue'\r\nimport SystemSettings from '../components/SystemSettings.vue'\r\nimport LoginLog from '../components/LoginLog.vue'\r\nimport OperationLog from '../components/OperationLog.vue'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register\r\n  },\r\n  {\r\n    path: '/',\r\n    name: 'Dashboard',\r\n    component: Dashboard,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/users',\r\n    name: 'UserManage',\r\n    component: UserManage,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/profile',\r\n    name: 'Profile',\r\n    component: Profile,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/settings',\r\n    name: 'SystemSettings',\r\n    component: SystemSettings,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/logs/login',\r\n    name: 'LoginLog',\r\n    component: LoginLog,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/logs/operation',\r\n    name: 'OperationLog',\r\n    component: OperationLog,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      next({\r\n        path: '/login',\r\n        query: { redirect: to.fullPath }\r\n      })\r\n    } else {\r\n      next()\r\n    }\r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router "],"mappings":";;;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,YAAY,MAAM,gCAAgC;AAEzD,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEX;AACb,CAAC,EACD;EACES,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAET,SAAS;EACpBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAER,UAAU;EACrBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEP,OAAO;EAClBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEN,cAAc;EACzBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL,QAAQ;EACnBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAEJ,YAAY;EACvBK,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,IAAMC,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAAC,CAAC;EAC3BS,MAAM,EAANA;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACV,IAAI,CAACC,YAAY;EAAA,EAAC,EAAE;IACvD,IAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVJ,IAAI,CAAC;QACHV,IAAI,EAAE,QAAQ;QACdiB,KAAK,EAAE;UAAEC,QAAQ,EAAEV,EAAE,CAACW;QAAS;MACjC,CAAC,CAAC;IACJ,CAAC,MAAM;MACLT,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}