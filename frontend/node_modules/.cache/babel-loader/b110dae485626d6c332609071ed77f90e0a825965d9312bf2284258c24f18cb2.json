{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, withKeys as _withKeys, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"login-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"login-box\"\n};\nvar _hoisted_3 = {\n  \"class\": \"register-link\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"供应链管理平台\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    ref: \"loginFormRef\",\n    model: $setup.loginForm,\n    rules: $setup.loginRules,\n    \"label-width\": \"0\"\n  }, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.loginForm.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $setup.loginForm.username = $event;\n            }),\n            placeholder: \"用户名\",\n            \"prefix-icon\": \"User\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            modelValue: $setup.loginForm.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $setup.loginForm.password = $event;\n            }),\n            type: \"password\",\n            placeholder: \"密码\",\n            \"prefix-icon\": \"Lock\",\n            \"show-password\": \"\",\n            onKeyup: _withKeys($setup.handleLogin, [\"enter\"])\n          }, null, 8 /* PROPS */, [\"modelValue\"])];\n        }),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            loading: $setup.loading,\n            type: \"primary\",\n            style: {\n              \"width\": \"100%\"\n            },\n            onClick: $setup.handleLogin\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString($setup.loading ? '登录中...' : '登录'), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"loading\"])];\n        }),\n        _: 1 /* STABLE */\n      })];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[2] || (_cache[2] = [_createTextVNode(\"没有账号？去注册\")]);\n    }),\n    _: 1 /* STABLE */\n  })])])]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_form","ref","model","$setup","loginForm","rules","loginRules","_withCtx","_component_el_form_item","prop","_component_el_input","modelValue","username","_cache","$event","placeholder","_","password","type","onKeyup","_withKeys","handleLogin","_component_el_button","loading","style","onClick","_createTextVNode","_toDisplayString","_hoisted_3","_component_router_link","to"],"sources":["C:\\Users\\indexae\\Desktop\\scm退货\\scm\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <h2>供应链管理平台</h2>\n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginRules\" label-width=\"0\">\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"用户名\"\n            prefix-icon=\"User\"\n          />\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"密码\"\n            prefix-icon=\"Lock\"\n            show-password\n            @keyup.enter=\"handleLogin\"\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            :loading=\"loading\"\n            type=\"primary\"\n            style=\"width: 100%\"\n            @click=\"handleLogin\"\n          >\n            {{ loading ? '登录中...' : '登录' }}\n          </el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"register-link\">\n        <router-link to=\"/register\">没有账号？去注册</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { usePermissionStore } from '@/stores/permission'\n\nconst router = useRouter()\nconst route = useRoute()\nconst permissionStore = usePermissionStore()\n\nconst loginFormRef = ref(null)\nconst loading = ref(false)\n\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\nconst loginRules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' }\n  ]\n}\n\nconst handleLogin = async () => {\n  if (!loginFormRef.value) return\n\n  try {\n    await loginFormRef.value.validate()\n    \n    loading.value = true\n    \n    const response = await fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(loginForm)\n    })\n\n    const result = await response.json()\n\n    if (result.code === 0 && result.data) {\n      // 保存token\n      localStorage.setItem('token', result.data.token)\n      \n      // 获取用户权限信息\n      await permissionStore.fetchUserPermissions()\n\n      ElMessage.success('登录成功')\n\n      // 获取重定向路径\n      const redirect = route.query.redirect || '/dashboard/home'\n      router.push(redirect)\n    } else {\n      ElMessage.error(result.message || '登录失败')\n    }\n  } catch (error) {\n    console.error('登录失败:', error)\n    ElMessage.error('登录失败，请重试')\n  } finally {\n    loading.value = false\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f5f5;\n}\n\n.login-box {\n  width: 400px;\n  padding: 40px;\n  background: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.login-box h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #303133;\n}\n\n.register-link {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.register-link a {\n  color: #409EFF;\n  text-decoration: none;\n}\n\n.register-link a:hover {\n  color: #66b1ff;\n}\n</style> "],"mappings":";;EACO,SAAM;AAAiB;;EACrB,SAAM;AAAW;;EA+Bf,SAAM;AAAe;;;;;;;uBAhC9BA,mBAAA,CAoCM,OApCNC,UAoCM,GAnCJC,mBAAA,CAkCM,OAlCNC,UAkCM,G,0BAjCJD,mBAAA,CAAgB,YAAZ,SAAO,sBACXE,YAAA,CA4BUC,kBAAA;IA5BDC,GAAG,EAAC,cAAc;IAAEC,KAAK,EAAEC,MAAA,CAAAC,SAAS;IAAGC,KAAK,EAAEF,MAAA,CAAAG,UAAU;IAAE,aAAW,EAAC;;IAJrF,WAAAC,QAAA,CAKQ;MAAA,OAMe,CANfR,YAAA,CAMeS,uBAAA;QANDC,IAAI,EAAC;MAAU;QALrC,WAAAF,QAAA,CAMU;UAAA,OAIE,CAJFR,YAAA,CAIEW,mBAAA;YAVZC,UAAA,EAOqBR,MAAA,CAAAC,SAAS,CAACQ,QAAQ;YAPvC,uBAAAC,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAOqBX,MAAA,CAAAC,SAAS,CAACQ,QAAQ,GAAAE,MAAA;YAAA;YAC3BC,WAAW,EAAC,KAAK;YACjB,aAAW,EAAC;;;QATxBC,CAAA;UAYQjB,YAAA,CASeS,uBAAA;QATDC,IAAI,EAAC;MAAU;QAZrC,WAAAF,QAAA,CAaU;UAAA,OAOE,CAPFR,YAAA,CAOEW,mBAAA;YApBZC,UAAA,EAcqBR,MAAA,CAAAC,SAAS,CAACa,QAAQ;YAdvC,uBAAAJ,MAAA,QAAAA,MAAA,gBAAAC,MAAA;cAAA,OAcqBX,MAAA,CAAAC,SAAS,CAACa,QAAQ,GAAAH,MAAA;YAAA;YAC3BI,IAAI,EAAC,UAAU;YACfH,WAAW,EAAC,IAAI;YAChB,aAAW,EAAC,MAAM;YAClB,eAAa,EAAb,EAAa;YACZI,OAAK,EAnBlBC,SAAA,CAmB0BjB,MAAA,CAAAkB,WAAW;;;QAnBrCL,CAAA;UAsBQjB,YAAA,CASeS,uBAAA;QA/BvB,WAAAD,QAAA,CAuBU;UAAA,OAOY,CAPZR,YAAA,CAOYuB,oBAAA;YANTC,OAAO,EAAEpB,MAAA,CAAAoB,OAAO;YACjBL,IAAI,EAAC,SAAS;YACdM,KAAmB,EAAnB;cAAA;YAAA,CAAmB;YAClBC,OAAK,EAAEtB,MAAA,CAAAkB;;YA3BpB,WAAAd,QAAA,CA6BY;cAAA,OAA+B,CA7B3CmB,gBAAA,CAAAC,gBAAA,CA6BexB,MAAA,CAAAoB,OAAO,mC;;YA7BtBP,CAAA;;;QAAAA,CAAA;;;IAAAA,CAAA;gCAiCMnB,mBAAA,CAEM,OAFN+B,UAEM,GADJ7B,YAAA,CAAkD8B,sBAAA;IAArCC,EAAE,EAAC;EAAW;IAlCnC,WAAAvB,QAAA,CAkCoC;MAAA,OAAQM,MAAA,QAAAA,MAAA,OAlC5Ca,gBAAA,CAkCoC,UAAQ,E;;IAlC5CV,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}