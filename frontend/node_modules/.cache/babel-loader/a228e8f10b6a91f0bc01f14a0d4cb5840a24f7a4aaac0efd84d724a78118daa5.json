{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'detail',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var route = useRoute();\n    var router = useRouter();\n\n    // 发货信息\n    var shipment = ref({});\n\n    // 物流轨迹\n    var trackingList = ref([]);\n\n    // 获取发货详情\n    var getShipmentDetail = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch(\"http://127.0.0.1:8080/api/logistics/shipments/\".concat(route.query.shipmentId), {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              result = _context.sent;\n              if (result.code === 0 && result.data) {\n                shipment.value = result.data;\n              } else {\n                ElMessage.error(result.message || '获取发货详情失败');\n              }\n              _context.next = 14;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取发货详情失败:', _context.t0);\n              ElMessage.error('获取发货详情失败');\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return function getShipmentDetail() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 获取物流轨迹\n    var getTrackingList = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"http://127.0.0.1:8080/api/logistics/tracking/\".concat(route.query.shipmentId, \"/timeline\"), {\n                headers: {\n                  'Accept': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n            case 6:\n              result = _context2.sent;\n              if (result.code === 0) {\n                trackingList.value = result.data;\n              } else {\n                ElMessage.error(result.message || '获取物流轨迹失败');\n              }\n              _context2.next = 14;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('获取物流轨迹失败:', _context2.t0);\n              ElMessage.error('获取物流轨迹失败');\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10]]);\n      }));\n      return function getTrackingList() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 获取状态类型\n    var getStatusType = function getStatusType(status) {\n      var types = {\n        shipped: 'primary',\n        in_transit: 'warning',\n        delivered: 'success'\n      };\n      return types[status] || 'info';\n    };\n\n    // 获取状态文本\n    var getStatusText = function getStatusText(status) {\n      var texts = {\n        shipped: '已发货',\n        in_transit: '运输中',\n        delivered: '已送达'\n      };\n      return texts[status] || status;\n    };\n\n    // 获取时间线项目类型\n    var getTimelineItemType = function getTimelineItemType(status) {\n      var types = {\n        shipped: 'primary',\n        in_transit: 'warning',\n        delivered: 'success'\n      };\n      return types[status] || 'info';\n    };\n\n    // 刷新\n    var handleRefresh = function handleRefresh() {\n      getTrackingList();\n    };\n\n    // 返回列表页\n    var handleBack = function handleBack() {\n      router.push('/dashboard/logistics/tracking');\n    };\n\n    // 初始化\n    onMounted(function () {\n      var shipmentId = route.query.shipmentId;\n      if (shipmentId) {\n        getShipmentDetail();\n        getTrackingList();\n      } else {\n        ElMessage.error('缺少必要的参数');\n        handleBack();\n      }\n    });\n    var __returned__ = {\n      route: route,\n      router: router,\n      shipment: shipment,\n      trackingList: trackingList,\n      getShipmentDetail: getShipmentDetail,\n      getTrackingList: getTrackingList,\n      getStatusType: getStatusType,\n      getStatusText: getStatusText,\n      getTimelineItemType: getTimelineItemType,\n      handleRefresh: handleRefresh,\n      handleBack: handleBack,\n      ref: ref,\n      onMounted: onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","useRouter","ElMessage","route","router","shipment","trackingList","getShipmentDetail","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","concat","query","shipmentId","headers","credentials","sent","json","code","data","value","error","message","t0","console","stop","apply","arguments","getTrackingList","_ref3","_callee2","_callee2$","_context2","getStatusType","status","types","shipped","in_transit","delivered","getStatusText","texts","getTimelineItemType","handleRefresh","handleBack","push"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/views/logistics/tracking/detail.vue"],"sourcesContent":["<template>\r\n  <div class=\"logistics-tracking-detail\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>物流跟踪详情</span>\r\n          <el-button @click=\"handleBack\">返回</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 基本信息 -->\r\n      <el-descriptions title=\"发货信息\" :column=\"2\" border>\r\n        <el-descriptions-item label=\"发货单号\">{{ shipment.shipmentNo }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"物流单号\">{{ shipment.trackingNo }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"承运商\">{{ shipment.carrierName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"物流状态\">\r\n          <el-tag :type=\"getStatusType(shipment.status)\">\r\n            {{ getStatusText(shipment.status) }}\r\n          </el-tag>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"收货人\">{{ shipment.consignee }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"联系电话\">{{ shipment.consigneePhone }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"收货地址\" :span=\"2\">{{ shipment.consigneeAddress }}</el-descriptions-item>\r\n      </el-descriptions>\r\n\r\n      <!-- 物流轨迹 -->\r\n      <div class=\"tracking-timeline\">\r\n        <div class=\"timeline-header\">\r\n          <h3>物流轨迹</h3>\r\n          <el-button type=\"primary\" @click=\"handleRefresh\">刷新</el-button>\r\n        </div>\r\n        <el-timeline>\r\n          <el-timeline-item\r\n            v-for=\"(activity, index) in trackingList\"\r\n            :key=\"index\"\r\n            :type=\"getTimelineItemType(activity.status)\"\r\n            :timestamp=\"activity.time\"\r\n          >\r\n            <h4>{{ activity.location }}</h4>\r\n            <p>{{ activity.description }}</p>\r\n          </el-timeline-item>\r\n        </el-timeline>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\n\r\n// 发货信息\r\nconst shipment = ref({})\r\n\r\n// 物流轨迹\r\nconst trackingList = ref([])\r\n\r\n// 获取发货详情\r\nconst getShipmentDetail = async () => {\r\n  try {\r\n    const response = await fetch(`http://127.0.0.1:8080/api/logistics/shipments/${route.query.shipmentId}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0 && result.data) {\r\n      shipment.value = result.data\r\n    } else {\r\n      ElMessage.error(result.message || '获取发货详情失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取发货详情失败:', error)\r\n    ElMessage.error('获取发货详情失败')\r\n  }\r\n}\r\n\r\n// 获取物流轨迹\r\nconst getTrackingList = async () => {\r\n  try {\r\n    const response = await fetch(`http://127.0.0.1:8080/api/logistics/tracking/${route.query.shipmentId}/timeline`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      trackingList.value = result.data\r\n    } else {\r\n      ElMessage.error(result.message || '获取物流轨迹失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取物流轨迹失败:', error)\r\n    ElMessage.error('获取物流轨迹失败')\r\n  }\r\n}\r\n\r\n// 获取状态类型\r\nconst getStatusType = (status) => {\r\n  const types = {\r\n    shipped: 'primary',\r\n    in_transit: 'warning',\r\n    delivered: 'success'\r\n  }\r\n  return types[status] || 'info'\r\n}\r\n\r\n// 获取状态文本\r\nconst getStatusText = (status) => {\r\n  const texts = {\r\n    shipped: '已发货',\r\n    in_transit: '运输中',\r\n    delivered: '已送达'\r\n  }\r\n  return texts[status] || status\r\n}\r\n\r\n// 获取时间线项目类型\r\nconst getTimelineItemType = (status) => {\r\n  const types = {\r\n    shipped: 'primary',\r\n    in_transit: 'warning',\r\n    delivered: 'success'\r\n  }\r\n  return types[status] || 'info'\r\n}\r\n\r\n// 刷新\r\nconst handleRefresh = () => {\r\n  getTrackingList()\r\n}\r\n\r\n// 返回列表页\r\nconst handleBack = () => {\r\n  router.push('/dashboard/logistics/tracking')\r\n}\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  const { shipmentId } = route.query\r\n  if (shipmentId) {\r\n    getShipmentDetail()\r\n    getTrackingList()\r\n  } else {\r\n    ElMessage.error('缺少必要的参数')\r\n    handleBack()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.logistics-tracking-detail {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.tracking-timeline {\r\n  margin-top: 30px;\r\n}\r\n\r\n.timeline-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.timeline-header h3 {\r\n  margin: 0;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}