{"ast":null,"code":"import _objectSpread from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\n\n// 角色列表数据\n\nexport default {\n  __name: 'RoleManage',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var roles = ref([]);\n    var total = ref(0);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var selectedRoles = ref([]);\n\n    // 搜索表单数据\n    var searchForm = ref({\n      roleName: '',\n      roleCode: '',\n      status: ''\n    });\n\n    // 对话框相关数据\n    var dialogVisible = ref(false);\n    var dialogTitle = ref('添加角色');\n    var roleFormRef = ref(null);\n    var roleForm = ref({\n      id: null,\n      roleName: '',\n      roleCode: '',\n      description: '',\n      status: true\n    });\n\n    // 表单验证规则\n    var rules = {\n      roleName: [{\n        required: true,\n        message: '请输入角色名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      roleCode: [{\n        required: true,\n        message: '请输入角色编码',\n        trigger: 'blur'\n      }, {\n        pattern: /^[A-Z_]+$/,\n        message: '角色编码只能包含大写字母和下划线',\n        trigger: 'blur'\n      }],\n      description: [{\n        max: 200,\n        message: '描述不能超过200个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 获取角色列表\n    var getRoles = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, res, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              // 构建查询参数\n              params = new URLSearchParams({\n                page: currentPage.value,\n                size: pageSize.value\n              });\n              if (searchForm.value.roleName) {\n                params.append('roleName', searchForm.value.roleName);\n              }\n              if (searchForm.value.roleCode) {\n                params.append('roleCode', searchForm.value.roleCode);\n              }\n              if (searchForm.value.status !== '') {\n                params.append('status', searchForm.value.status);\n              }\n              _context.next = 7;\n              return fetch(\"http://localhost:8000/api/roles?\".concat(params.toString()), {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 7:\n              res = _context.sent;\n              _context.next = 10;\n              return res.json();\n            case 10:\n              data = _context.sent;\n              if (data.code === 0) {\n                roles.value = data.data.list || [];\n                total.value = data.data.total || 0;\n              } else {\n                ElMessage.error(data.message || '获取角色列表失败');\n              }\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取角色列表失败:', _context.t0);\n              ElMessage.error('网络错误,请稍后重试');\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n      return function getRoles() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 搜索\n    var handleSearch = function handleSearch() {\n      currentPage.value = 1;\n      getRoles();\n    };\n\n    // 重置搜索\n    var handleReset = function handleReset() {\n      searchForm.value = {\n        roleName: '',\n        roleCode: '',\n        status: ''\n      };\n      currentPage.value = 1;\n      getRoles();\n    };\n\n    // 处理多选\n    var handleSelectionChange = function handleSelectionChange(selection) {\n      selectedRoles.value = selection;\n    };\n\n    // 批量删除\n    var handleBatchDelete = function handleBatchDelete() {\n      if (!selectedRoles.value.length) {\n        ElMessage.warning('请选择要删除的角色');\n        return;\n      }\n      ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u9009\\u4E2D\\u7684 \".concat(selectedRoles.value.length, \" \\u4E2A\\u89D2\\u8272\\u5417\\uFF1F\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var deletePromises, results, hasError;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              deletePromises = selectedRoles.value.map(function (role) {\n                return fetch(\"http://localhost:8000/api/roles/\".concat(role.id), {\n                  method: 'DELETE',\n                  credentials: 'include'\n                }).then(function (res) {\n                  return res.json();\n                });\n              });\n              _context2.next = 4;\n              return Promise.all(deletePromises);\n            case 4:\n              results = _context2.sent;\n              hasError = results.some(function (result) {\n                return result.code !== 0;\n              });\n              if (hasError) {\n                ElMessage.warning('部分角色删除失败');\n              } else {\n                ElMessage.success('删除成功');\n              }\n              getRoles();\n              _context2.next = 14;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('批量删除失败:', _context2.t0);\n              ElMessage.error('网络错误,请稍后重试');\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10]]);\n      })));\n    };\n\n    // 添加角色\n    var handleAdd = function handleAdd() {\n      roleForm.value = {\n        id: null,\n        roleName: '',\n        roleCode: '',\n        description: '',\n        status: true\n      };\n      dialogTitle.value = '添加角色';\n      dialogVisible.value = true;\n    };\n\n    // 编辑角色\n    var handleEdit = function handleEdit(row) {\n      roleForm.value = _objectSpread({}, row);\n      dialogTitle.value = '编辑角色';\n      dialogVisible.value = true;\n    };\n\n    // 删除角色\n    var handleDelete = function handleDelete(row) {\n      ElMessageBox.confirm('确定要删除该角色吗？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(\"http://localhost:8000/api/roles/\".concat(row.id), {\n                method: 'DELETE',\n                credentials: 'include'\n              });\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return res.json();\n            case 6:\n              data = _context3.sent;\n              if (data.code === 0) {\n                ElMessage.success('删除成功');\n                getRoles();\n              } else {\n                ElMessage.error(data.message || '删除失败');\n              }\n              _context3.next = 14;\n              break;\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('删除角色失败:', _context3.t0);\n              ElMessage.error('网络错误,请稍后重试');\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 10]]);\n      })));\n    };\n\n    // 提交表单\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var url, method, res, data;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (roleFormRef.value) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.prev = 2;\n              _context4.next = 5;\n              return roleFormRef.value.validate();\n            case 5:\n              url = roleForm.value.id ? \"http://localhost:8000/api/roles/\".concat(roleForm.value.id) : 'http://localhost:8000/api/roles';\n              method = roleForm.value.id ? 'PUT' : 'POST';\n              _context4.next = 9;\n              return fetch(url, {\n                method: method,\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify(roleForm.value)\n              });\n            case 9:\n              res = _context4.sent;\n              _context4.next = 12;\n              return res.json();\n            case 12:\n              data = _context4.sent;\n              if (data.code === 0) {\n                ElMessage.success(roleForm.value.id ? '更新成功' : '添加成功');\n                dialogVisible.value = false;\n                getRoles();\n              } else {\n                ElMessage.error(data.message || (roleForm.value.id ? '更新失败' : '添加失败'));\n              }\n              _context4.next = 19;\n              break;\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](2);\n              if (_context4.t0.name === 'ValidationError') {\n                ElMessage.error('请检查表单填写是否正确');\n              } else {\n                console.error('提交表单失败:', _context4.t0);\n                ElMessage.error('网络错误,请稍后重试');\n              }\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2, 16]]);\n      }));\n      return function handleSubmit() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 分页大小改变\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      getRoles();\n    };\n\n    // 当前页改变\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n      getRoles();\n    };\n    onMounted(function () {\n      getRoles();\n    });\n    var __returned__ = {\n      roles: roles,\n      total: total,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      selectedRoles: selectedRoles,\n      searchForm: searchForm,\n      dialogVisible: dialogVisible,\n      dialogTitle: dialogTitle,\n      roleFormRef: roleFormRef,\n      roleForm: roleForm,\n      rules: rules,\n      getRoles: getRoles,\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      handleSelectionChange: handleSelectionChange,\n      handleBatchDelete: handleBatchDelete,\n      handleAdd: handleAdd,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete,\n      handleSubmit: handleSubmit,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      ref: ref,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","ElMessageBox","roles","total","currentPage","pageSize","selectedRoles","searchForm","roleName","roleCode","status","dialogVisible","dialogTitle","roleFormRef","roleForm","id","description","rules","required","message","trigger","min","max","pattern","getRoles","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","res","data","wrap","_callee$","_context","prev","next","URLSearchParams","page","value","size","append","fetch","concat","toString","headers","credentials","sent","json","code","list","error","t0","console","stop","apply","arguments","handleSearch","handleReset","handleSelectionChange","selection","handleBatchDelete","length","warning","confirm","confirmButtonText","cancelButtonText","type","then","_callee2","deletePromises","results","hasError","_callee2$","_context2","map","role","method","Promise","all","some","result","success","handleAdd","handleEdit","row","_objectSpread","handleDelete","_callee3","_callee3$","_context3","handleSubmit","_ref5","_callee4","url","_callee4$","_context4","abrupt","validate","body","JSON","stringify","name","handleSizeChange","val","handleCurrentChange"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/views/RoleManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"role-manage\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>角色管理</span>\r\n          <div class=\"header-buttons\">\r\n            <el-button type=\"danger\" :disabled=\"!selectedRoles.length\" @click=\"handleBatchDelete\">批量删除</el-button>\r\n            <el-button type=\"primary\" @click=\"handleAdd\">添加角色</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 搜索表单 -->\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\r\n        <el-form-item label=\"角色名称\">\r\n          <el-input v-model=\"searchForm.roleName\" placeholder=\"请输入角色名称\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色编码\">\r\n          <el-input v-model=\"searchForm.roleCode\" placeholder=\"请输入角色编码\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"searchForm.status\" placeholder=\"请选择状态\" clearable>\r\n            <el-option label=\"启用\" :value=\"true\" />\r\n            <el-option label=\"禁用\" :value=\"false\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button @click=\"handleReset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <!-- 角色列表 -->\r\n      <el-table \r\n        :data=\"roles\" \r\n        style=\"width: 100%\"\r\n        @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n        <el-table-column prop=\"roleName\" label=\"角色名称\" />\r\n        <el-table-column prop=\"roleCode\" label=\"角色编码\" />\r\n        <el-table-column prop=\"description\" label=\"描述\" />\r\n        <el-table-column prop=\"status\" label=\"状态\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.status ? 'success' : 'danger'\">\r\n              {{ scope.row.status ? '启用' : '禁用' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"handleDelete(scope.row)\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑角色对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      v-model=\"dialogVisible\" \r\n      width=\"500px\">\r\n      <el-form \r\n        :model=\"roleForm\"\r\n        :rules=\"rules\" \r\n        ref=\"roleFormRef\"\r\n        label-width=\"100px\">\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"roleForm.roleName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色编码\" prop=\"roleCode\">\r\n          <el-input v-model=\"roleForm.roleCode\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"roleForm.description\" \r\n            type=\"textarea\" \r\n            :rows=\"2\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-switch v-model=\"roleForm.status\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\n// 角色列表数据\r\nconst roles = ref([])\r\nconst total = ref(0)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst selectedRoles = ref([])\r\n\r\n// 搜索表单数据\r\nconst searchForm = ref({\r\n  roleName: '',\r\n  roleCode: '',\r\n  status: ''\r\n})\r\n\r\n// 对话框相关数据\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('添加角色')\r\nconst roleFormRef = ref(null)\r\nconst roleForm = ref({\r\n  id: null,\r\n  roleName: '',\r\n  roleCode: '',\r\n  description: '',\r\n  status: true\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  roleName: [\r\n    { required: true, message: '请输入角色名称', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n  ],\r\n  roleCode: [\r\n    { required: true, message: '请输入角色编码', trigger: 'blur' },\r\n    { pattern: /^[A-Z_]+$/, message: '角色编码只能包含大写字母和下划线', trigger: 'blur' }\r\n  ],\r\n  description: [\r\n    { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 获取角色列表\r\nconst getRoles = async () => {\r\n  try {\r\n    // 构建查询参数\r\n    const params = new URLSearchParams({\r\n      page: currentPage.value,\r\n      size: pageSize.value\r\n    })\r\n    \r\n    if (searchForm.value.roleName) {\r\n      params.append('roleName', searchForm.value.roleName)\r\n    }\r\n    if (searchForm.value.roleCode) {\r\n      params.append('roleCode', searchForm.value.roleCode)\r\n    }\r\n    if (searchForm.value.status !== '') {\r\n      params.append('status', searchForm.value.status)\r\n    }\r\n    \r\n    const res = await fetch(`http://localhost:8000/api/roles?${params.toString()}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      roles.value = data.data.list || []\r\n      total.value = data.data.total || 0\r\n    } else {\r\n      ElMessage.error(data.message || '获取角色列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取角色列表失败:', error)\r\n    ElMessage.error('网络错误,请稍后重试')\r\n  }\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  getRoles()\r\n}\r\n\r\n// 重置搜索\r\nconst handleReset = () => {\r\n  searchForm.value = {\r\n    roleName: '',\r\n    roleCode: '',\r\n    status: ''\r\n  }\r\n  currentPage.value = 1\r\n  getRoles()\r\n}\r\n\r\n// 处理多选\r\nconst handleSelectionChange = (selection) => {\r\n  selectedRoles.value = selection\r\n}\r\n\r\n// 批量删除\r\nconst handleBatchDelete = () => {\r\n  if (!selectedRoles.value.length) {\r\n    ElMessage.warning('请选择要删除的角色')\r\n    return\r\n  }\r\n  \r\n  ElMessageBox.confirm(\r\n    `确定要删除选中的 ${selectedRoles.value.length} 个角色吗？`,\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      const deletePromises = selectedRoles.value.map(role => \r\n        fetch(`http://localhost:8000/api/roles/${role.id}`, {\r\n          method: 'DELETE',\r\n          credentials: 'include'\r\n        }).then(res => res.json())\r\n      )\r\n      \r\n      const results = await Promise.all(deletePromises)\r\n      const hasError = results.some(result => result.code !== 0)\r\n      \r\n      if (hasError) {\r\n        ElMessage.warning('部分角色删除失败')\r\n      } else {\r\n        ElMessage.success('删除成功')\r\n      }\r\n      getRoles()\r\n    } catch (error) {\r\n      console.error('批量删除失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  })\r\n}\r\n\r\n// 添加角色\r\nconst handleAdd = () => {\r\n  roleForm.value = {\r\n    id: null,\r\n    roleName: '',\r\n    roleCode: '',\r\n    description: '',\r\n    status: true\r\n  }\r\n  dialogTitle.value = '添加角色'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑角色\r\nconst handleEdit = (row) => {\r\n  roleForm.value = { ...row }\r\n  dialogTitle.value = '编辑角色'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 删除角色\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm(\r\n    '确定要删除该角色吗？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/roles/${row.id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      })\r\n      const data = await res.json()\r\n      if (data.code === 0) {\r\n        ElMessage.success('删除成功')\r\n        getRoles()\r\n      } else {\r\n        ElMessage.error(data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除角色失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  })\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!roleFormRef.value) return\r\n  \r\n  try {\r\n    await roleFormRef.value.validate()\r\n    \r\n    const url = roleForm.value.id \r\n      ? `http://localhost:8000/api/roles/${roleForm.value.id}`\r\n      : 'http://localhost:8000/api/roles'\r\n    const method = roleForm.value.id ? 'PUT' : 'POST'\r\n    \r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(roleForm.value)\r\n    })\r\n    \r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      ElMessage.success(roleForm.value.id ? '更新成功' : '添加成功')\r\n      dialogVisible.value = false\r\n      getRoles()\r\n    } else {\r\n      ElMessage.error(data.message || (roleForm.value.id ? '更新失败' : '添加失败'))\r\n    }\r\n  } catch (error) {\r\n    if (error.name === 'ValidationError') {\r\n      ElMessage.error('请检查表单填写是否正确')\r\n    } else {\r\n      console.error('提交表单失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  }\r\n}\r\n\r\n// 分页大小改变\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  getRoles()\r\n}\r\n\r\n// 当前页改变\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  getRoles()\r\n}\r\n\r\nonMounted(() => {\r\n  getRoles()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.role-manage {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style> "],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA+GA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,SAAS,EAAEC,YAAY,QAAQ,cAAc;;AAEtD;;;;;;;IACA,IAAMC,KAAK,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACrB,IAAMK,KAAK,GAAGL,GAAG,CAAC,CAAC,CAAC;IACpB,IAAMM,WAAW,GAAGN,GAAG,CAAC,CAAC,CAAC;IAC1B,IAAMO,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC;IACxB,IAAMQ,aAAa,GAAGR,GAAG,CAAC,EAAE,CAAC;;IAE7B;IACA,IAAMS,UAAU,GAAGT,GAAG,CAAC;MACrBU,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC,CAAC;;IAEF;IACA,IAAMC,aAAa,GAAGb,GAAG,CAAC,KAAK,CAAC;IAChC,IAAMc,WAAW,GAAGd,GAAG,CAAC,MAAM,CAAC;IAC/B,IAAMe,WAAW,GAAGf,GAAG,CAAC,IAAI,CAAC;IAC7B,IAAMgB,QAAQ,GAAGhB,GAAG,CAAC;MACnBiB,EAAE,EAAE,IAAI;MACRP,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZO,WAAW,EAAE,EAAE;MACfN,MAAM,EAAE;IACV,CAAC,CAAC;;IAEF;IACA,IAAMO,KAAK,GAAG;MACZT,QAAQ,EAAE,CACR;QAAEU,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,CAAC,CAChE;MACDX,QAAQ,EAAE,CACR;QAAES,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEG,OAAO,EAAE,WAAW;QAAEJ,OAAO,EAAE,kBAAkB;QAAEC,OAAO,EAAE;MAAO,CAAC,CACvE;MACDJ,WAAW,EAAE,CACX;QAAEM,GAAG,EAAE,GAAG;QAAEH,OAAO,EAAE,cAAc;QAAEC,OAAO,EAAE;MAAO,CAAC;IAE1D,CAAC;;IAED;IACA,IAAMI,QAAQ;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,GAAA,EAAAC,IAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAEb;cACMN,MAAM,GAAG,IAAIQ,eAAe,CAAC;gBACjCC,IAAI,EAAEnC,WAAW,CAACoC,KAAK;gBACvBC,IAAI,EAAEpC,QAAQ,CAACmC;cACjB,CAAC,CAAC;cAEF,IAAIjC,UAAU,CAACiC,KAAK,CAAChC,QAAQ,EAAE;gBAC7BsB,MAAM,CAACY,MAAM,CAAC,UAAU,EAAEnC,UAAU,CAACiC,KAAK,CAAChC,QAAQ,CAAC;cACtD;cACA,IAAID,UAAU,CAACiC,KAAK,CAAC/B,QAAQ,EAAE;gBAC7BqB,MAAM,CAACY,MAAM,CAAC,UAAU,EAAEnC,UAAU,CAACiC,KAAK,CAAC/B,QAAQ,CAAC;cACtD;cACA,IAAIF,UAAU,CAACiC,KAAK,CAAC9B,MAAM,KAAK,EAAE,EAAE;gBAClCoB,MAAM,CAACY,MAAM,CAAC,QAAQ,EAAEnC,UAAU,CAACiC,KAAK,CAAC9B,MAAM,CAAC;cAClD;cAACyB,QAAA,CAAAE,IAAA;cAAA,OAEiBM,KAAK,oCAAAC,MAAA,CAAoCd,MAAM,CAACe,QAAQ,CAAC,CAAC,GAAI;gBAC9EC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cALIhB,GAAG,GAAAI,QAAA,CAAAa,IAAA;cAAAb,QAAA,CAAAE,IAAA;cAAA,OAMUN,GAAG,CAACkB,IAAI,CAAC,CAAC;YAAA;cAAvBjB,IAAI,GAAAG,QAAA,CAAAa,IAAA;cACV,IAAIhB,IAAI,CAACkB,IAAI,KAAK,CAAC,EAAE;gBACnBhD,KAAK,CAACsC,KAAK,GAAGR,IAAI,CAACA,IAAI,CAACmB,IAAI,IAAI,EAAE;gBAClChD,KAAK,CAACqC,KAAK,GAAGR,IAAI,CAACA,IAAI,CAAC7B,KAAK,IAAI,CAAC;cACpC,CAAC,MAAM;gBACLH,SAAS,CAACoD,KAAK,CAACpB,IAAI,CAACb,OAAO,IAAI,UAAU,CAAC;cAC7C;cAACgB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAkB,EAAA,GAAAlB,QAAA;cAEDmB,OAAO,CAACF,KAAK,CAAC,WAAW,EAAAjB,QAAA,CAAAkB,EAAO,CAAC;cACjCrD,SAAS,CAACoD,KAAK,CAAC,YAAY,CAAC;YAAA;YAAA;cAAA,OAAAjB,QAAA,CAAAoB,IAAA;UAAA;QAAA,GAAA1B,OAAA;MAAA,CAEhC;MAAA,gBAnCKL,QAAQA,CAAA;QAAA,OAAAC,KAAA,CAAA+B,KAAA,OAAAC,SAAA;MAAA;IAAA,GAmCb;;IAED;IACA,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;MACzBtD,WAAW,CAACoC,KAAK,GAAG,CAAC;MACrBhB,QAAQ,CAAC,CAAC;IACZ,CAAC;;IAED;IACA,IAAMmC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;MACxBpD,UAAU,CAACiC,KAAK,GAAG;QACjBhC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE;MACV,CAAC;MACDN,WAAW,CAACoC,KAAK,GAAG,CAAC;MACrBhB,QAAQ,CAAC,CAAC;IACZ,CAAC;;IAED;IACA,IAAMoC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,SAAS,EAAK;MAC3CvD,aAAa,CAACkC,KAAK,GAAGqB,SAAS;IACjC,CAAC;;IAED;IACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;MAC9B,IAAI,CAACxD,aAAa,CAACkC,KAAK,CAACuB,MAAM,EAAE;QAC/B/D,SAAS,CAACgE,OAAO,CAAC,WAAW,CAAC;QAC9B;MACF;MAEA/D,YAAY,CAACgE,OAAO,qDAAArB,MAAA,CACNtC,aAAa,CAACkC,KAAK,CAACuB,MAAM,sCACtC,IAAI,EACJ;QACEG,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CACF,CAAC,CAACC,IAAI,cAAA3C,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAA0C,SAAA;QAAA,IAAAC,cAAA,EAAAC,OAAA,EAAAC,QAAA;QAAA,OAAA9C,mBAAA,GAAAM,IAAA,UAAAyC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvC,IAAA,GAAAuC,SAAA,CAAAtC,IAAA;YAAA;cAAAsC,SAAA,CAAAvC,IAAA;cAEGmC,cAAc,GAAGjE,aAAa,CAACkC,KAAK,CAACoC,GAAG,CAAC,UAAAC,IAAI;gBAAA,OACjDlC,KAAK,oCAAAC,MAAA,CAAoCiC,IAAI,CAAC9D,EAAE,GAAI;kBAClD+D,MAAM,EAAE,QAAQ;kBAChB/B,WAAW,EAAE;gBACf,CAAC,CAAC,CAACsB,IAAI,CAAC,UAAAtC,GAAG;kBAAA,OAAIA,GAAG,CAACkB,IAAI,CAAC,CAAC;gBAAA,EAAC;cAAA,CAC5B,CAAC;cAAA0B,SAAA,CAAAtC,IAAA;cAAA,OAEqB0C,OAAO,CAACC,GAAG,CAACT,cAAc,CAAC;YAAA;cAA3CC,OAAO,GAAAG,SAAA,CAAA3B,IAAA;cACPyB,QAAQ,GAAGD,OAAO,CAACS,IAAI,CAAC,UAAAC,MAAM;gBAAA,OAAIA,MAAM,CAAChC,IAAI,KAAK,CAAC;cAAA,EAAC;cAE1D,IAAIuB,QAAQ,EAAE;gBACZzE,SAAS,CAACgE,OAAO,CAAC,UAAU,CAAC;cAC/B,CAAC,MAAM;gBACLhE,SAAS,CAACmF,OAAO,CAAC,MAAM,CAAC;cAC3B;cACA3D,QAAQ,CAAC,CAAC;cAAAmD,SAAA,CAAAtC,IAAA;cAAA;YAAA;cAAAsC,SAAA,CAAAvC,IAAA;cAAAuC,SAAA,CAAAtB,EAAA,GAAAsB,SAAA;cAEVrB,OAAO,CAACF,KAAK,CAAC,SAAS,EAAAuB,SAAA,CAAAtB,EAAO,CAAC;cAC/BrD,SAAS,CAACoD,KAAK,CAAC,YAAY,CAAC;YAAA;YAAA;cAAA,OAAAuB,SAAA,CAAApB,IAAA;UAAA;QAAA,GAAAe,QAAA;MAAA,CAEhC,GAAC;IACJ,CAAC;;IAED;IACA,IAAMc,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;MACtBtE,QAAQ,CAAC0B,KAAK,GAAG;QACfzB,EAAE,EAAE,IAAI;QACRP,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZO,WAAW,EAAE,EAAE;QACfN,MAAM,EAAE;MACV,CAAC;MACDE,WAAW,CAAC4B,KAAK,GAAG,MAAM;MAC1B7B,aAAa,CAAC6B,KAAK,GAAG,IAAI;IAC5B,CAAC;;IAED;IACA,IAAM6C,UAAU,GAAG,SAAbA,UAAUA,CAAIC,GAAG,EAAK;MAC1BxE,QAAQ,CAAC0B,KAAK,GAAA+C,aAAA,KAAQD,GAAG,CAAE;MAC3B1E,WAAW,CAAC4B,KAAK,GAAG,MAAM;MAC1B7B,aAAa,CAAC6B,KAAK,GAAG,IAAI;IAC5B,CAAC;;IAED;IACA,IAAMgD,YAAY,GAAG,SAAfA,YAAYA,CAAIF,GAAG,EAAK;MAC5BrF,YAAY,CAACgE,OAAO,CAClB,YAAY,EACZ,IAAI,EACJ;QACEC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CACF,CAAC,CAACC,IAAI,cAAA3C,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAA6D,SAAA;QAAA,IAAA1D,GAAA,EAAAC,IAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAAyD,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAvD,IAAA,GAAAuD,SAAA,CAAAtD,IAAA;YAAA;cAAAsD,SAAA,CAAAvD,IAAA;cAAAuD,SAAA,CAAAtD,IAAA;cAAA,OAEeM,KAAK,oCAAAC,MAAA,CAAoC0C,GAAG,CAACvE,EAAE,GAAI;gBACnE+D,MAAM,EAAE,QAAQ;gBAChB/B,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cAHIhB,GAAG,GAAA4D,SAAA,CAAA3C,IAAA;cAAA2C,SAAA,CAAAtD,IAAA;cAAA,OAIUN,GAAG,CAACkB,IAAI,CAAC,CAAC;YAAA;cAAvBjB,IAAI,GAAA2D,SAAA,CAAA3C,IAAA;cACV,IAAIhB,IAAI,CAACkB,IAAI,KAAK,CAAC,EAAE;gBACnBlD,SAAS,CAACmF,OAAO,CAAC,MAAM,CAAC;gBACzB3D,QAAQ,CAAC,CAAC;cACZ,CAAC,MAAM;gBACLxB,SAAS,CAACoD,KAAK,CAACpB,IAAI,CAACb,OAAO,IAAI,MAAM,CAAC;cACzC;cAACwE,SAAA,CAAAtD,IAAA;cAAA;YAAA;cAAAsD,SAAA,CAAAvD,IAAA;cAAAuD,SAAA,CAAAtC,EAAA,GAAAsC,SAAA;cAEDrC,OAAO,CAACF,KAAK,CAAC,SAAS,EAAAuC,SAAA,CAAAtC,EAAO,CAAC;cAC/BrD,SAAS,CAACoD,KAAK,CAAC,YAAY,CAAC;YAAA;YAAA;cAAA,OAAAuC,SAAA,CAAApC,IAAA;UAAA;QAAA,GAAAkC,QAAA;MAAA,CAEhC,GAAC;IACJ,CAAC;;IAED;IACA,IAAMG,YAAY;MAAA,IAAAC,KAAA,GAAAnE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAkE,SAAA;QAAA,IAAAC,GAAA,EAAAjB,MAAA,EAAA/C,GAAA,EAAAC,IAAA;QAAA,OAAAL,mBAAA,GAAAM,IAAA,UAAA+D,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA7D,IAAA,GAAA6D,SAAA,CAAA5D,IAAA;YAAA;cAAA,IACdxB,WAAW,CAAC2B,KAAK;gBAAAyD,SAAA,CAAA5D,IAAA;gBAAA;cAAA;cAAA,OAAA4D,SAAA,CAAAC,MAAA;YAAA;cAAAD,SAAA,CAAA7D,IAAA;cAAA6D,SAAA,CAAA5D,IAAA;cAAA,OAGdxB,WAAW,CAAC2B,KAAK,CAAC2D,QAAQ,CAAC,CAAC;YAAA;cAE5BJ,GAAG,GAAGjF,QAAQ,CAAC0B,KAAK,CAACzB,EAAE,sCAAA6B,MAAA,CACU9B,QAAQ,CAAC0B,KAAK,CAACzB,EAAE,IACpD,iCAAiC;cAC/B+D,MAAM,GAAGhE,QAAQ,CAAC0B,KAAK,CAACzB,EAAE,GAAG,KAAK,GAAG,MAAM;cAAAkF,SAAA,CAAA5D,IAAA;cAAA,OAE/BM,KAAK,CAACoD,GAAG,EAAE;gBAC3BjB,MAAM,EAANA,MAAM;gBACNhC,OAAO,EAAE;kBACP,cAAc,EAAE;gBAClB,CAAC;gBACDC,WAAW,EAAE,SAAS;gBACtBqD,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxF,QAAQ,CAAC0B,KAAK;cACrC,CAAC,CAAC;YAAA;cAPIT,GAAG,GAAAkE,SAAA,CAAAjD,IAAA;cAAAiD,SAAA,CAAA5D,IAAA;cAAA,OASUN,GAAG,CAACkB,IAAI,CAAC,CAAC;YAAA;cAAvBjB,IAAI,GAAAiE,SAAA,CAAAjD,IAAA;cACV,IAAIhB,IAAI,CAACkB,IAAI,KAAK,CAAC,EAAE;gBACnBlD,SAAS,CAACmF,OAAO,CAACrE,QAAQ,CAAC0B,KAAK,CAACzB,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC;gBACtDJ,aAAa,CAAC6B,KAAK,GAAG,KAAK;gBAC3BhB,QAAQ,CAAC,CAAC;cACZ,CAAC,MAAM;gBACLxB,SAAS,CAACoD,KAAK,CAACpB,IAAI,CAACb,OAAO,KAAKL,QAAQ,CAAC0B,KAAK,CAACzB,EAAE,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;cACxE;cAACkF,SAAA,CAAA5D,IAAA;cAAA;YAAA;cAAA4D,SAAA,CAAA7D,IAAA;cAAA6D,SAAA,CAAA5C,EAAA,GAAA4C,SAAA;cAED,IAAIA,SAAA,CAAA5C,EAAA,CAAMkD,IAAI,KAAK,iBAAiB,EAAE;gBACpCvG,SAAS,CAACoD,KAAK,CAAC,aAAa,CAAC;cAChC,CAAC,MAAM;gBACLE,OAAO,CAACF,KAAK,CAAC,SAAS,EAAA6C,SAAA,CAAA5C,EAAO,CAAC;gBAC/BrD,SAAS,CAACoD,KAAK,CAAC,YAAY,CAAC;cAC/B;YAAC;YAAA;cAAA,OAAA6C,SAAA,CAAA1C,IAAA;UAAA;QAAA,GAAAuC,QAAA;MAAA,CAEJ;MAAA,gBApCKF,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAArC,KAAA,OAAAC,SAAA;MAAA;IAAA,GAoCjB;;IAED;IACA,IAAM+C,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,GAAG,EAAK;MAChCpG,QAAQ,CAACmC,KAAK,GAAGiE,GAAG;MACpBjF,QAAQ,CAAC,CAAC;IACZ,CAAC;;IAED;IACA,IAAMkF,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAID,GAAG,EAAK;MACnCrG,WAAW,CAACoC,KAAK,GAAGiE,GAAG;MACvBjF,QAAQ,CAAC,CAAC;IACZ,CAAC;IAEDzB,SAAS,CAAC,YAAM;MACdyB,QAAQ,CAAC,CAAC;IACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}