{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"inbound-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  style: {\n    \"float\": \"right\",\n    \"color\": \"#8492a6\",\n    \"font-size\": \"13px\"\n  }\n};\nvar _hoisted_4 = {\n  \"class\": \"items-section\"\n};\nvar _hoisted_5 = {\n  \"class\": \"total-amount\"\n};\nvar _hoisted_6 = {\n  \"class\": \"form-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    \"class\": \"box-card\"\n  }, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($setup.getPageTitle), 1 /* TEXT */)])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-width\": \"100px\",\n        disabled: $setup.isView\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" 基本信息 \"), _createVNode(_component_el_form_item, {\n            label: \"关联订单\",\n            prop: \"orderId\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.form.orderId,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $setup.form.orderId = $event;\n                }),\n                placeholder: \"请选择采购订单\",\n                onChange: $setup.handleOrderChange,\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.orderOptions, function (item) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: item.id,\n                      label: item.code,\n                      value: item.id\n                    }, {\n                      \"default\": _withCtx(function () {\n                        return [_createElementVNode(\"span\", null, \"订单编号: \" + _toDisplayString(item.code), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_3, \" 供应商: \" + _toDisplayString(item.supplier), 1 /* TEXT */)];\n                      }),\n                      _: 2 /* DYNAMIC */\n                    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"入库仓库\",\n            prop: \"warehouseId\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.form.warehouseId,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.form.warehouseId = $event;\n                }),\n                placeholder: \"请选择仓库\",\n                onChange: $setup.handleWarehouseChange\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.warehouses, function (item) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: item.id,\n                      label: item.name,\n                      value: item.id\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"经办人\",\n            prop: \"handlerId\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_select, {\n                modelValue: $setup.form.handlerId,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.form.handlerId = $event;\n                }),\n                placeholder: \"请选择经办人\",\n                onChange: $setup.handleHandlerChange\n              }, {\n                \"default\": _withCtx(function () {\n                  return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.handlers, function (item) {\n                    return _openBlock(), _createBlock(_component_el_option, {\n                      key: item.id,\n                      label: item.name,\n                      value: item.id\n                    }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                  }), 128 /* KEYED_FRAGMENT */))];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"备注\",\n            prop: \"remark\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.remark,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.form.remark = $event;\n                }),\n                type: \"textarea\",\n                rows: 2,\n                placeholder: \"请输入备注信息\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 商品明细 \"), _createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n            \"class\": \"items-header\"\n          }, [_createElementVNode(\"h3\", null, \"商品明细\")], -1 /* HOISTED */)), _createVNode(_component_el_table, {\n            data: $setup.form.items,\n            border: \"\",\n            style: {\n              \"width\": \"100%\"\n            }\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_table_column, {\n                prop: \"productName\",\n                label: \"商品名称\",\n                width: \"200\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"productSpec\",\n                label: \"规格\",\n                width: \"150\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"unit\",\n                label: \"单位\",\n                width: \"150\"\n              }), _createVNode(_component_el_table_column, {\n                prop: \"orderQuantity\",\n                label: \"订单数量\",\n                width: \"150\"\n              }), _createVNode(_component_el_table_column, {\n                label: \"入库数量\",\n                width: \"200\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createVNode(_component_el_input_number, {\n                    modelValue: scope.row.quantity,\n                    \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                      return scope.row.quantity = $event;\n                    },\n                    min: 1,\n                    max: scope.row.orderQuantity\n                  }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"max\"])];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"price\",\n                label: \"单价\",\n                width: \"150\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createTextVNode(_toDisplayString($setup.formatAmount(scope.row.price)), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_table_column, {\n                prop: \"amount\",\n                label: \"金额\",\n                width: \"150\"\n              }, {\n                \"default\": _withCtx(function (scope) {\n                  return [_createTextVNode(_toDisplayString($setup.formatAmount(scope.row.price * scope.row.quantity)), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"data\"])]), _createCommentVNode(\" 合计金额 \"), _createElementVNode(\"div\", _hoisted_5, \" 合计金额：\" + _toDisplayString($setup.formatAmount($setup.totalAmount)), 1 /* TEXT */), _createCommentVNode(\" 表单操作按钮 \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_button, {\n            onClick: $setup.handleCancel\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[5] || (_cache[5] = [_createTextVNode(\"取消\")]);\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $setup.handleSubmit\n          }, {\n            \"default\": _withCtx(function () {\n              return _cache[6] || (_cache[6] = [_createTextVNode(\"提交\")]);\n            }),\n            _: 1 /* STABLE */\n          })])];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"disabled\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_toDisplayString","$setup","getPageTitle","_component_el_form","ref","model","form","rules","disabled","isView","_createCommentVNode","_component_el_form_item","label","prop","_component_el_select","modelValue","orderId","_cache","$event","placeholder","onChange","handleOrderChange","_Fragment","_renderList","orderOptions","item","_createBlock","_component_el_option","key","id","code","value","_hoisted_3","supplier","_","warehouseId","handleWarehouseChange","warehouses","name","handlerId","handleHandlerChange","handlers","_component_el_input","remark","type","rows","_hoisted_4","_component_el_table","data","items","border","_component_el_table_column","width","scope","_component_el_input_number","row","quantity","onUpdateModelValue","min","max","orderQuantity","_createTextVNode","formatAmount","price","_hoisted_5","totalAmount","_hoisted_6","_component_el_button","onClick","handleCancel","handleSubmit"],"sources":["C:\\Users\\indexae\\Desktop\\scm\\scm日志\\scm\\frontend\\src\\views\\purchase\\inbound\\form.vue"],"sourcesContent":["<template>\r\n  <div class=\"inbound-form\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>{{ getPageTitle }}</span>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"100px\" :disabled=\"isView\">\r\n        <!-- 基本信息 -->\r\n        <el-form-item label=\"关联订单\" prop=\"orderId\">\r\n          <el-select \r\n            v-model=\"form.orderId\" \r\n            placeholder=\"请选择采购订单\"\r\n            @change=\"handleOrderChange\"\r\n            style=\"width: 100%\">\r\n            <el-option\r\n              v-for=\"item in orderOptions\"\r\n              :key=\"item.id\"\r\n              :label=\"item.code\"\r\n              :value=\"item.id\">\r\n              <span>订单编号: {{ item.code }}</span>\r\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">\r\n                供应商: {{ item.supplier }}\r\n              </span>\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"入库仓库\" prop=\"warehouseId\">\r\n          <el-select v-model=\"form.warehouseId\" placeholder=\"请选择仓库\" @change=\"handleWarehouseChange\">\r\n            <el-option\r\n              v-for=\"item in warehouses\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"经办人\" prop=\"handlerId\">\r\n          <el-select v-model=\"form.handlerId\" placeholder=\"请选择经办人\" @change=\"handleHandlerChange\">\r\n            <el-option\r\n              v-for=\"item in handlers\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input\r\n            v-model=\"form.remark\"\r\n            type=\"textarea\"\r\n            :rows=\"2\"\r\n            placeholder=\"请输入备注信息\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <!-- 商品明细 -->\r\n        <div class=\"items-section\">\r\n          <div class=\"items-header\">\r\n            <h3>商品明细</h3>\r\n          </div>\r\n\r\n          <el-table :data=\"form.items\" border style=\"width: 100%\">\r\n            <el-table-column prop=\"productName\" label=\"商品名称\" width=\"200\" />\r\n            <el-table-column prop=\"productSpec\" label=\"规格\" width=\"150\" />\r\n            <el-table-column prop=\"unit\" label=\"单位\" width=\"150\" />\r\n            <el-table-column prop=\"orderQuantity\" label=\"订单数量\" width=\"150\" />\r\n            <el-table-column label=\"入库数量\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <el-input-number \r\n                  v-model=\"scope.row.quantity\" \r\n                  :min=\"1\"\r\n                  :max=\"scope.row.orderQuantity\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"price\" label=\"单价\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                {{ formatAmount(scope.row.price) }}\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"amount\" label=\"金额\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                {{ formatAmount(scope.row.price * scope.row.quantity) }}\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n\r\n        <!-- 合计金额 -->\r\n        <div class=\"total-amount\">\r\n          合计金额：{{ formatAmount(totalAmount) }}\r\n        </div>\r\n\r\n        <!-- 表单操作按钮 -->\r\n        <div class=\"form-actions\">\r\n          <el-button @click=\"handleCancel\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交</el-button>\r\n        </div>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst formRef = ref(null)\r\n\r\n// 页面模式\r\nconst mode = computed(() => route.query.mode || 'add')\r\nconst isEdit = computed(() => mode.value === 'edit')\r\nconst isView = computed(() => mode.value === 'view')\r\n\r\n// 页面标题\r\nconst getPageTitle = computed(() => {\r\n  const titles = {\r\n    add: '新建入库单',\r\n    edit: '编辑入库单',\r\n    view: '查看入库单'\r\n  }\r\n  return titles[mode.value] || titles.add\r\n})\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  orderId: '',\r\n  orderCode: '',\r\n  warehouseId: '',\r\n  warehouse: '',\r\n  handlerId: '',\r\n  handler: '',\r\n  remark: '',\r\n  items: []\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  orderId: [\r\n    { required: true, message: '请选择采购订单', trigger: 'change' }\r\n  ],\r\n  warehouseId: [\r\n    { required: true, message: '请选择入库仓库', trigger: 'change' }\r\n  ],\r\n  handlerId: [\r\n    { required: true, message: '请选择经办人', trigger: 'change' }\r\n  ]\r\n}\r\n\r\n// 仓库列表\r\nconst warehouses = ref([])\r\n// 经办人列表\r\nconst handlers = ref([])\r\n// 可选的采购订单列表\r\nconst orderOptions = ref([])\r\n\r\n// 获取仓库列表\r\nconst getWarehouses = async () => {\r\n  try {\r\n    const res = await fetch('http://127.0.0.1:8080/api/warehouses?status=normal', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('仓库列表API响应:', res)\r\n    const data = await res.json()\r\n    console.log('仓库列表数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      warehouses.value = data.data?.list || []\r\n    } else {\r\n      console.error('获取仓库列表失败:', data.message)\r\n      ElMessage.error(data.message || '获取仓库列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取仓库列表失败:', error)\r\n    ElMessage.error('获取仓库列表失败')\r\n  }\r\n}\r\n\r\n// 获取经办人列表\r\nconst getHandlers = async () => {\r\n  try {\r\n    const res = await fetch('http://127.0.0.1:8080/api/handlers?status=enabled', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('经办人列表API响应:', res)\r\n    const data = await res.json()\r\n    console.log('经办人列表数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      handlers.value = data.data?.list || []\r\n    } else {\r\n      console.error('获取经办人列表失败:', data.message)\r\n      ElMessage.error(data.message || '获取经办人列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取经办人列表失败:', error)\r\n    ElMessage.error('获取经办人列表失败')\r\n  }\r\n}\r\n\r\n// 获取可入库的采购订单列表\r\nconst getAvailableOrders = async () => {\r\n  try {\r\n    console.log('开始获取可入库的采购订单列表')\r\n    const res = await fetch('http://127.0.0.1:8080/api/purchase/orders/available-for-inbound', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('采购订单API响应:', res)\r\n    const data = await res.json()\r\n    console.log('采购订单数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      orderOptions.value = data.data || []\r\n      console.log('采购订单列表设置完成:', orderOptions.value)\r\n      if (orderOptions.value.length === 0) {\r\n        ElMessage.warning('没有可入库的采购订单')\r\n      }\r\n    } else {\r\n      console.error('获取采购订单列表失败:', data.message)\r\n      ElMessage.error(data.message || '获取采购订单列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取采购订单列表失败:', error)\r\n    ElMessage.error('获取采购订单列表失败')\r\n  }\r\n}\r\n\r\n// 选择采购订单时的处理\r\nconst handleOrderChange = async (orderId) => {\r\n  if (!orderId) return\r\n  try {\r\n    console.log('开始获取订单明细, orderId:', orderId)\r\n    const res = await fetch(`http://127.0.0.1:8080/api/purchase/orders/${orderId}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('订单明细API响应:', res)\r\n    const data = await res.json()\r\n    console.log('订单明细数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      const order = data.data\r\n      console.log('订单数据:', order)\r\n      form.orderCode = order.code\r\n      // 确保items存在且是数组\r\n      const items = order.items || []\r\n      form.items = items.map(item => ({\r\n        ...item,\r\n        orderQuantity: item.quantity,\r\n        quantity: item.quantity,\r\n        productName: item.productName || item.name\r\n      }))\r\n    } else {\r\n      console.error('获取订单明细失败:', data.message)\r\n      ElMessage.error(data.message || '获取订单明细失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单明细失败:', error)\r\n    ElMessage.error('获取订单明细失败')\r\n  }\r\n}\r\n\r\n// 处理仓库选择变化\r\nconst handleWarehouseChange = (warehouseId) => {\r\n  const warehouse = warehouses.value.find(item => item.id === warehouseId)\r\n  if (warehouse) {\r\n    form.warehouse = warehouse.name\r\n  }\r\n}\r\n\r\n// 处理经办人选择变化\r\nconst handleHandlerChange = (handlerId) => {\r\n  const handler = handlers.value.find(item => item.id === handlerId)\r\n  if (handler) {\r\n    form.handler = handler.name\r\n  }\r\n}\r\n\r\n// 格式化金额\r\nconst formatAmount = (amount) => {\r\n  if (!amount) return '0.00'\r\n  return Number(amount).toFixed(2)\r\n}\r\n\r\n// 计算总金额\r\nconst totalAmount = computed(() => {\r\n  return form.items.reduce((sum, item) => sum + (item.price * item.quantity || 0), 0)\r\n})\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      if (form.items.length === 0) {\r\n        ElMessage.warning('请选择采购订单')\r\n        return\r\n      }\r\n\r\n      try {\r\n        // 构造提交的数据\r\n        const submitData = {\r\n          orderId: form.orderId,\r\n          orderCode: form.orderCode,\r\n          warehouseId: form.warehouseId,\r\n          warehouse: form.warehouse,\r\n          handlerId: form.handlerId,\r\n          handler: form.handler,\r\n          remark: form.remark,\r\n          items: form.items.map(item => ({\r\n            orderId: form.orderId,\r\n            orderItemId: item.id,\r\n            productId: item.productId,\r\n            productName: item.productName,\r\n            productSpec: item.productSpec,\r\n            unit: item.unit,\r\n            orderQuantity: item.orderQuantity,\r\n            quantity: item.quantity,\r\n            price: Number(item.price),\r\n            amount: Number((item.price * item.quantity).toFixed(2))\r\n          })),\r\n          amount: Number(totalAmount.value.toFixed(2))\r\n        }\r\n\r\n        console.log('准备提交入库单数据:', submitData)\r\n        \r\n        const url = isEdit.value \r\n          ? `http://127.0.0.1:8080/api/purchase/inbounds/${route.query.id}`\r\n          : 'http://127.0.0.1:8080/api/purchase/inbounds'\r\n        \r\n        const method = isEdit.value ? 'PUT' : 'POST'\r\n        const res = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(submitData)\r\n        })\r\n\r\n        console.log('入库单提交响应:', res)\r\n        const data = await res.json()\r\n        console.log('入库单提交结果:', data)\r\n\r\n        if (data.code === 0) {\r\n          ElMessage.success(isEdit.value ? '更新成功' : '创建成功')\r\n          router.push('/dashboard/purchase/inbound')\r\n        } else {\r\n          console.error('提交失败:', data)\r\n          ElMessage.error(data.message || (isEdit.value ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(isEdit.value ? '更新入库单失败:' : '创建入库单失败:', error)\r\n        ElMessage.error(error.message || (isEdit.value ? '更新失败' : '创建失败'))\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 取消\r\nconst handleCancel = () => {\r\n  ElMessageBox.confirm(\r\n    '确认放弃当前编辑的内容？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(() => {\r\n    router.push('/dashboard/purchase/inbound')\r\n  }).catch(() => {})\r\n}\r\n\r\n// 获取入库单详情\r\nconst getInboundDetail = async (id) => {\r\n  try {\r\n    console.log('开始获取入库单详情, id:', id)\r\n    const res = await fetch(`http://127.0.0.1:8080/api/purchase/inbounds/${id}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    console.log('入库单详情API响应:', res)\r\n    const data = await res.json()\r\n    console.log('入库单详情数据:', data)\r\n    \r\n    if (data.code === 0) {\r\n      const inbound = data.data\r\n      console.log('入库单数据:', inbound)\r\n      \r\n      // 填充表单数据\r\n      form.orderId = inbound.orderId\r\n      form.orderCode = inbound.orderCode\r\n      form.warehouseId = inbound.warehouseId\r\n      form.warehouse = inbound.warehouse\r\n      form.handlerId = inbound.handlerId\r\n      form.handler = inbound.handler\r\n      form.remark = inbound.remark\r\n      form.items = inbound.items.map(item => ({\r\n        ...item,\r\n        orderQuantity: item.orderQuantity || item.quantity,\r\n        quantity: item.quantity,\r\n        amount: item.price * item.quantity\r\n      }))\r\n      \r\n      console.log('表单数据设置完成:', form)\r\n    } else {\r\n      console.error('获取入库单详情失败:', data.message)\r\n      ElMessage.error(data.message || '获取入库单详情失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取入库单详情失败:', error)\r\n    ElMessage.error('获取入库单详情失败')\r\n  }\r\n}\r\n\r\n// 在组件挂载时获取数据\r\nonMounted(async () => {\r\n  const id = route.query.id\r\n  if (id && (isEdit.value || isView.value)) {\r\n    await getInboundDetail(id)\r\n  }\r\n  await Promise.all([\r\n    getWarehouses(),\r\n    getHandlers(),\r\n    getAvailableOrders()\r\n  ])\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.inbound-form {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.items-section {\r\n  margin: 20px 0;\r\n}\r\n\r\n.items-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.total-amount {\r\n  text-align: right;\r\n  margin: 20px 0;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}