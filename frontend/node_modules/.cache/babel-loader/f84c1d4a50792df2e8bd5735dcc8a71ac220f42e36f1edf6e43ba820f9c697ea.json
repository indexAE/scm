{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { reactive, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useSettingsStore } from '../stores/settings';\nimport { useAuthStore } from '../stores/auth';\nimport axios from 'axios';\nexport default {\n  __name: 'Login',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var router = useRouter();\n    var settingsStore = useSettingsStore();\n    var authStore = useAuthStore();\n    var loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 检查账户是否被锁定\n    var checkAccountLock = function checkAccountLock(username) {\n      if (!settingsStore.loginLockEnabled) return false;\n      var lockInfo = JSON.parse(localStorage.getItem(\"loginLock_\".concat(username)) || '{\"count\": 0, \"lastFailTime\": 0}');\n\n      // 如果失败次数达到5次\n      if (lockInfo.count >= 5) {\n        var lockDuration = 30 * 60 * 1000; // 30分钟的毫秒数\n        var now = Date.now();\n\n        // 如果在锁定时间内\n        if (now - lockInfo.lastFailTime < lockDuration) {\n          var remainingMinutes = Math.ceil((lockDuration - (now - lockInfo.lastFailTime)) / (60 * 1000));\n          ElMessage.error(\"\\u8D26\\u6237\\u5DF2\\u88AB\\u9501\\u5B9A\\uFF0C\\u8BF7\".concat(remainingMinutes, \"\\u5206\\u949F\\u540E\\u518D\\u8BD5\"));\n          return true;\n        } else {\n          // 锁定时间已过，重置计数\n          localStorage.removeItem(\"loginLock_\".concat(username));\n          return false;\n        }\n      }\n      return false;\n    };\n\n    // 记录登录失败\n    var recordLoginFailure = function recordLoginFailure(username) {\n      if (!settingsStore.loginLockEnabled) return;\n      var lockInfo = JSON.parse(localStorage.getItem(\"loginLock_\".concat(username)) || '{\"count\": 0, \"lastFailTime\": 0}');\n      lockInfo.count++;\n      lockInfo.lastFailTime = Date.now();\n      localStorage.setItem(\"loginLock_\".concat(username), JSON.stringify(lockInfo));\n      var remainingAttempts = 5 - lockInfo.count;\n      if (remainingAttempts > 0) {\n        ElMessage.error(\"\\u767B\\u5F55\\u5931\\u8D25\\uFF0C\\u8FD8\\u5269\".concat(remainingAttempts, \"\\u6B21\\u5C1D\\u8BD5\\u673A\\u4F1A\"));\n      } else {\n        ElMessage.error('登录失败次数过多，账户已被锁定30分钟');\n      }\n    };\n\n    // 清除登录失败记录\n    var clearLoginFailure = function clearLoginFailure(username) {\n      localStorage.removeItem(\"loginLock_\".concat(username));\n    };\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var res, lockInfo, remainingAttempts;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!checkAccountLock(loginForm.username)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post('http://localhost:8080/api/auth/login', {\n                username: loginForm.username,\n                password: loginForm.password\n              });\n            case 5:\n              res = _context.sent;\n              if (res.data.code === 0) {\n                // 保存token\n                localStorage.setItem('token', res.data.data.token);\n                localStorage.setItem('username', res.data.data.username);\n\n                // 设置用户角色信息\n                authStore.setUserInfo(res.data.data.role, res.data.data.username);\n\n                // 跳转到首页\n                router.push('/dashboard');\n                ElMessage.success('登录成功');\n              } else {\n                // 登录失败，更新失败次数\n                lockInfo = JSON.parse(localStorage.getItem(\"loginLock_\".concat(loginForm.username)) || '{\"count\": 0, \"lastFailTime\": 0}');\n                lockInfo.count++;\n                lockInfo.lastFailTime = Date.now();\n                localStorage.setItem(\"loginLock_\".concat(loginForm.username), JSON.stringify(lockInfo));\n                remainingAttempts = 5 - lockInfo.count;\n                if (remainingAttempts > 0) {\n                  ElMessage.error(\"\\u767B\\u5F55\\u5931\\u8D25\\uFF0C\\u8FD8\\u5269\".concat(remainingAttempts, \"\\u6B21\\u5C1D\\u8BD5\\u673A\\u4F1A\"));\n                } else {\n                  ElMessage.error('登录失败次数过多，账户已被锁定30分钟');\n                }\n                ElMessage.error(res.data.msg || '登录失败');\n              }\n              _context.next = 13;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.error('登录失败:', _context.t0);\n              ElMessage.error('登录失败，请稍后重试');\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 9]]);\n      }));\n      return function handleLogin() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 在组件挂载时获取系统设置\n    onMounted(function () {\n      settingsStore.fetchSettings();\n    });\n    var __returned__ = {\n      router: router,\n      settingsStore: settingsStore,\n      authStore: authStore,\n      loginForm: loginForm,\n      checkAccountLock: checkAccountLock,\n      recordLoginFailure: recordLoginFailure,\n      clearLoginFailure: clearLoginFailure,\n      handleLogin: handleLogin,\n      reactive: reactive,\n      onMounted: onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useSettingsStore() {\n        return useSettingsStore;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","onMounted","useRouter","ElMessage","useSettingsStore","useAuthStore","axios","router","settingsStore","authStore","loginForm","username","password","checkAccountLock","loginLockEnabled","lockInfo","JSON","parse","localStorage","getItem","concat","count","lockDuration","now","Date","lastFailTime","remainingMinutes","Math","ceil","error","removeItem","recordLoginFailure","setItem","stringify","remainingAttempts","clearLoginFailure","handleLogin","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","abrupt","post","sent","data","code","token","setUserInfo","role","push","success","msg","t0","console","stop","apply","arguments","fetchSettings"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-box\">\n      <h2>供应链管理平台</h2>\n      <form @submit.prevent=\"handleLogin\">\n        <div class=\"form-item\">\n          <input\n            v-model=\"loginForm.username\"\n            type=\"text\"\n            placeholder=\"用户名\"\n            required\n          />\n        </div>\n        <div class=\"form-item\">\n          <input\n            v-model=\"loginForm.password\"\n            type=\"password\"\n            placeholder=\"密码\"\n            required\n          />\n        </div>\n        <div class=\"form-item\">\n          <button type=\"submit\">登录</button>\n        </div>\n        <div class=\"form-item\">\n          <router-link to=\"/register\" class=\"register-link\">没有账号？去注册</router-link>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { useSettingsStore } from '../stores/settings'\nimport { useAuthStore } from '../stores/auth'\nimport axios from 'axios'\n\nconst router = useRouter()\nconst settingsStore = useSettingsStore()\nconst authStore = useAuthStore()\n\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\n// 检查账户是否被锁定\nconst checkAccountLock = (username) => {\n  if (!settingsStore.loginLockEnabled) return false\n  \n  const lockInfo = JSON.parse(localStorage.getItem(`loginLock_${username}`) || '{\"count\": 0, \"lastFailTime\": 0}')\n  \n  // 如果失败次数达到5次\n  if (lockInfo.count >= 5) {\n    const lockDuration = 30 * 60 * 1000 // 30分钟的毫秒数\n    const now = Date.now()\n    \n    // 如果在锁定时间内\n    if (now - lockInfo.lastFailTime < lockDuration) {\n      const remainingMinutes = Math.ceil((lockDuration - (now - lockInfo.lastFailTime)) / (60 * 1000))\n      ElMessage.error(`账户已被锁定，请${remainingMinutes}分钟后再试`)\n      return true\n    } else {\n      // 锁定时间已过，重置计数\n      localStorage.removeItem(`loginLock_${username}`)\n      return false\n    }\n  }\n  \n  return false\n}\n\n// 记录登录失败\nconst recordLoginFailure = (username) => {\n  if (!settingsStore.loginLockEnabled) return\n  \n  const lockInfo = JSON.parse(localStorage.getItem(`loginLock_${username}`) || '{\"count\": 0, \"lastFailTime\": 0}')\n  lockInfo.count++\n  lockInfo.lastFailTime = Date.now()\n  localStorage.setItem(`loginLock_${username}`, JSON.stringify(lockInfo))\n  \n  const remainingAttempts = 5 - lockInfo.count\n  if (remainingAttempts > 0) {\n    ElMessage.error(`登录失败，还剩${remainingAttempts}次尝试机会`)\n  } else {\n    ElMessage.error('登录失败次数过多，账户已被锁定30分钟')\n  }\n}\n\n// 清除登录失败记录\nconst clearLoginFailure = (username) => {\n  localStorage.removeItem(`loginLock_${username}`)\n}\n\nconst handleLogin = async () => {\n  // 检查账户是否被锁定\n  if (checkAccountLock(loginForm.username)) {\n    return\n  }\n\n  try {\n    const res = await axios.post('http://localhost:8080/api/auth/login', {\n      username: loginForm.username,\n      password: loginForm.password\n    })\n    \n    if (res.data.code === 0) {\n      // 保存token\n      localStorage.setItem('token', res.data.data.token)\n      localStorage.setItem('username', res.data.data.username)\n      \n      // 设置用户角色信息\n      authStore.setUserInfo(res.data.data.role, res.data.data.username)\n      \n      // 跳转到首页\n      router.push('/dashboard')\n      ElMessage.success('登录成功')\n    } else {\n      // 登录失败，更新失败次数\n      const lockInfo = JSON.parse(localStorage.getItem(`loginLock_${loginForm.username}`) || '{\"count\": 0, \"lastFailTime\": 0}')\n      lockInfo.count++\n      lockInfo.lastFailTime = Date.now()\n      localStorage.setItem(`loginLock_${loginForm.username}`, JSON.stringify(lockInfo))\n      \n      const remainingAttempts = 5 - lockInfo.count\n      if (remainingAttempts > 0) {\n        ElMessage.error(`登录失败，还剩${remainingAttempts}次尝试机会`)\n      } else {\n        ElMessage.error('登录失败次数过多，账户已被锁定30分钟')\n      }\n      \n      ElMessage.error(res.data.msg || '登录失败')\n    }\n  } catch (error) {\n    console.error('登录失败:', error)\n    ElMessage.error('登录失败，请稍后重试')\n  }\n}\n\n// 在组件挂载时获取系统设置\nonMounted(() => {\n  settingsStore.fetchSettings()\n})\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f5f5f5;\n}\n\n.login-box {\n  width: 400px;\n  padding: 40px;\n  background: white;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.login-box h2 {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.form-item {\n  margin-bottom: 20px;\n}\n\n.form-item input {\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #dcdfe6;\n  border-radius: 4px;\n  outline: none;\n}\n\n.form-item button {\n  width: 100%;\n  padding: 12px 0;\n  background-color: #409eff;\n  border: none;\n  border-radius: 4px;\n  color: white;\n  cursor: pointer;\n}\n\n.form-item button:hover {\n  background-color: #66b1ff;\n}\n\n.register-link {\n  display: block;\n  text-align: center;\n  color: #409eff;\n  text-decoration: none;\n}\n\n.register-link:hover {\n  color: #66b1ff;\n}\n</style> "],"mappings":";;;;;;;;AAiCA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,KAAI;AACxC,SAASC,SAAS,QAAQ,YAAW;AACrC,SAASC,SAAS,QAAQ,cAAa;AACvC,SAASC,gBAAgB,QAAQ,oBAAmB;AACpD,SAASC,YAAY,QAAQ,gBAAe;AAC5C,OAAOC,KAAK,MAAM,OAAM;;;;;;IAExB,IAAMC,MAAM,GAAGL,SAAS,CAAC;IACzB,IAAMM,aAAa,GAAGJ,gBAAgB,CAAC;IACvC,IAAMK,SAAS,GAAGJ,YAAY,CAAC;IAE/B,IAAMK,SAAS,GAAGV,QAAQ,CAAC;MACzBW,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIF,QAAQ,EAAK;MACrC,IAAI,CAACH,aAAa,CAACM,gBAAgB,EAAE,OAAO,KAAI;MAEhD,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,cAAAC,MAAA,CAAcT,QAAQ,CAAE,CAAC,IAAI,iCAAiC;;MAE9G;MACA,IAAII,QAAQ,CAACM,KAAK,IAAI,CAAC,EAAE;QACvB,IAAMC,YAAY,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,EAAC;QACpC,IAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC;;QAErB;QACA,IAAIA,GAAG,GAAGR,QAAQ,CAACU,YAAY,GAAGH,YAAY,EAAE;UAC9C,IAAMI,gBAAgB,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACN,YAAY,IAAIC,GAAG,GAAGR,QAAQ,CAACU,YAAY,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC;UAC/FtB,SAAS,CAAC0B,KAAK,oDAAAT,MAAA,CAAYM,gBAAgB,mCAAO;UAClD,OAAO,IAAG;QACZ,CAAC,MAAM;UACL;UACAR,YAAY,CAACY,UAAU,cAAAV,MAAA,CAAcT,QAAQ,CAAE;UAC/C,OAAO,KAAI;QACb;MACF;MAEA,OAAO,KAAI;IACb;;IAEA;IACA,IAAMoB,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIpB,QAAQ,EAAK;MACvC,IAAI,CAACH,aAAa,CAACM,gBAAgB,EAAE;MAErC,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,cAAAC,MAAA,CAAcT,QAAQ,CAAE,CAAC,IAAI,iCAAiC;MAC9GI,QAAQ,CAACM,KAAK,EAAC;MACfN,QAAQ,CAACU,YAAY,GAAGD,IAAI,CAACD,GAAG,CAAC;MACjCL,YAAY,CAACc,OAAO,cAAAZ,MAAA,CAAcT,QAAQ,GAAIK,IAAI,CAACiB,SAAS,CAAClB,QAAQ,CAAC;MAEtE,IAAMmB,iBAAiB,GAAG,CAAC,GAAGnB,QAAQ,CAACM,KAAI;MAC3C,IAAIa,iBAAiB,GAAG,CAAC,EAAE;QACzB/B,SAAS,CAAC0B,KAAK,8CAAAT,MAAA,CAAWc,iBAAiB,mCAAO;MACpD,CAAC,MAAM;QACL/B,SAAS,CAAC0B,KAAK,CAAC,qBAAqB;MACvC;IACF;;IAEA;IACA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIxB,QAAQ,EAAK;MACtCO,YAAY,CAACY,UAAU,cAAAV,MAAA,CAAcT,QAAQ,CAAE;IACjD;IAEA,IAAMyB,WAAW;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,GAAA,EAAA3B,QAAA,EAAAmB,iBAAA;QAAA,OAAAK,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,KAEdlC,gBAAgB,CAACH,SAAS,CAACC,QAAQ,CAAC;gBAAAkC,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cAAAH,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAKpBzC,KAAK,CAAC2C,IAAI,CAAC,sCAAsC,EAAE;gBACnEtC,QAAQ,EAAED,SAAS,CAACC,QAAQ;gBAC5BC,QAAQ,EAAEF,SAAS,CAACE;cACtB,CAAC;YAAA;cAHK8B,GAAG,GAAAG,QAAA,CAAAK,IAAA;cAKT,IAAIR,GAAG,CAACS,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;gBACvB;gBACAlC,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEU,GAAG,CAACS,IAAI,CAACA,IAAI,CAACE,KAAK;gBACjDnC,YAAY,CAACc,OAAO,CAAC,UAAU,EAAEU,GAAG,CAACS,IAAI,CAACA,IAAI,CAACxC,QAAQ;;gBAEvD;gBACAF,SAAS,CAAC6C,WAAW,CAACZ,GAAG,CAACS,IAAI,CAACA,IAAI,CAACI,IAAI,EAAEb,GAAG,CAACS,IAAI,CAACA,IAAI,CAACxC,QAAQ;;gBAEhE;gBACAJ,MAAM,CAACiD,IAAI,CAAC,YAAY;gBACxBrD,SAAS,CAACsD,OAAO,CAAC,MAAM;cAC1B,CAAC,MAAM;gBACL;gBACM1C,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,cAAAC,MAAA,CAAcV,SAAS,CAACC,QAAQ,CAAE,CAAC,IAAI,iCAAiC;gBACxHI,QAAQ,CAACM,KAAK,EAAC;gBACfN,QAAQ,CAACU,YAAY,GAAGD,IAAI,CAACD,GAAG,CAAC;gBACjCL,YAAY,CAACc,OAAO,cAAAZ,MAAA,CAAcV,SAAS,CAACC,QAAQ,GAAIK,IAAI,CAACiB,SAAS,CAAClB,QAAQ,CAAC;gBAE1EmB,iBAAiB,GAAG,CAAC,GAAGnB,QAAQ,CAACM,KAAI;gBAC3C,IAAIa,iBAAiB,GAAG,CAAC,EAAE;kBACzB/B,SAAS,CAAC0B,KAAK,8CAAAT,MAAA,CAAWc,iBAAiB,mCAAO;gBACpD,CAAC,MAAM;kBACL/B,SAAS,CAAC0B,KAAK,CAAC,qBAAqB;gBACvC;gBAEA1B,SAAS,CAAC0B,KAAK,CAACa,GAAG,CAACS,IAAI,CAACO,GAAG,IAAI,MAAM;cACxC;cAAAb,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAc,EAAA,GAAAd,QAAA;cAEAe,OAAO,CAAC/B,KAAK,CAAC,OAAO,EAAAgB,QAAA,CAAAc,EAAO;cAC5BxD,SAAS,CAAC0B,KAAK,CAAC,YAAY;YAAA;YAAA;cAAA,OAAAgB,QAAA,CAAAgB,IAAA;UAAA;QAAA,GAAApB,OAAA;MAAA,CAEhC;MAAA,gBA3CML,WAAWA,CAAA;QAAA,OAAAC,KAAA,CAAAyB,KAAA,OAAAC,SAAA;MAAA;IAAA,GA2CjB;;IAEA;IACA9D,SAAS,CAAC,YAAM;MACdO,aAAa,CAACwD,aAAa,CAAC;IAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}