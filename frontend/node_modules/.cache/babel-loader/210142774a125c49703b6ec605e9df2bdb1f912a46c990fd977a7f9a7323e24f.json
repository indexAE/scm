{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = _resolveComponent(\"el-icon\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    \"class\": \"hamburger\",\n    onClick: $setup.toggleClick\n  }, [_createVNode(_component_el_icon, {\n    size: 20\n  }, {\n    \"default\": _withCtx(function () {\n      return [$props.isActive ? (_openBlock(), _createBlock($setup[\"Expand\"], {\n        key: 0\n      })) : (_openBlock(), _createBlock($setup[\"Fold\"], {\n        key: 1\n      }))];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","onClick","$setup","toggleClick","_createVNode","_component_el_icon","size","_withCtx","$props","isActive","_createBlock","key","_"],"sources":["C:\\Users\\indexae\\Desktop\\scm退货\\scm\\frontend\\src\\layout\\components\\Hamburger.vue"],"sourcesContent":["<template>\r\n  <div class=\"hamburger\" @click=\"toggleClick\">\r\n    <el-icon :size=\"20\">\r\n      <Expand v-if=\"isActive\" />\r\n      <Fold v-else />\r\n    </el-icon>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits } from 'vue'\r\nimport { Expand, Fold } from '@element-plus/icons-vue'\r\n\r\ndefineProps({\r\n  isActive: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['toggleClick'])\r\n\r\nconst toggleClick = () => {\r\n  emit('toggleClick')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.hamburger {\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n}\r\n</style> "],"mappings":";;;uBACEA,mBAAA,CAKM;IALD,SAAM,WAAW;IAAEC,OAAK,EAAEC,MAAA,CAAAC;MAC7BC,YAAA,CAGUC,kBAAA;IAHAC,IAAI,EAAE;EAAE;IAFtB,WAAAC,QAAA,CAGM;MAAA,OAA0B,CAAZC,MAAA,CAAAC,QAAQ,I,cAAtBC,YAAA,CAA0BR,MAAA;QAHhCS,GAAA;MAAA,O,cAIMD,YAAA,CAAeR,MAAA;QAJrBS,GAAA;MAAA,I;;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}