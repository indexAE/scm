{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { usePermissionStore } from '../stores/permission';\nimport { hasPermission } from '../utils/auth';\n\n// 获取权限store\n\nexport default {\n  __name: 'PermissionManage',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var permissionStore = usePermissionStore();\n    // 获取router实例\n    var router = useRouter();\n\n    // 权限列表数据\n    var selectedPermissions = ref([]);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n\n    // 搜索表单数据\n    var searchForm = ref({\n      permissionName: '',\n      permissionCode: '',\n      status: ''\n    });\n\n    // 对话框相关数据\n    var dialogVisible = ref(false);\n    var dialogTitle = ref('添加权限');\n    var permissionFormRef = ref(null);\n\n    // 权限类型定义\n    var permissionTypes = [{\n      value: 'menu',\n      label: '菜单权限',\n      description: '控制菜单项的显示和访问'\n    }, {\n      value: 'operation',\n      label: '操作权限',\n      description: '控制按钮等操作的权限'\n    }, {\n      value: 'data',\n      label: '数据权限',\n      description: '控制数据的访问和修改权限'\n    }, {\n      value: 'api',\n      label: 'API权限',\n      description: '控制接口的访问权限'\n    }];\n\n    // 修改表单数据\n    var permissionForm = ref({\n      id: null,\n      permissionName: '',\n      permissionCode: '',\n      type: 'menu',\n      typeDescription: '',\n      description: '',\n      status: true,\n      parentId: null,\n      // 父权限ID，用于权限继承\n      order: 0 // 显示顺序\n    });\n\n    // 修改验证规则\n    var rules = {\n      permissionName: [{\n        required: true,\n        message: '请输入权限名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      permissionCode: [{\n        required: true,\n        message: '请输入权限编码',\n        trigger: 'blur'\n      }, {\n        pattern: /^[A-Z_]+$/,\n        message: '权限编码只能包含大写字母和下划线',\n        trigger: 'blur'\n      }],\n      type: [{\n        required: true,\n        message: '请选择权限类型',\n        trigger: 'change'\n      }],\n      description: [{\n        max: 200,\n        message: '描述不能超过200个字符',\n        trigger: 'blur'\n      }],\n      order: [{\n        type: 'number',\n        message: '请输入正确的排序号',\n        trigger: 'blur'\n      }]\n    };\n\n    // 计算过滤后的权限列表\n    var filteredPermissions = computed(function () {\n      var result = permissionStore.permissions;\n      if (searchForm.value.permissionName) {\n        result = result.filter(function (item) {\n          return item.permissionName.toLowerCase().includes(searchForm.value.permissionName.toLowerCase());\n        });\n      }\n      if (searchForm.value.permissionCode) {\n        result = result.filter(function (item) {\n          return item.permissionCode.toLowerCase().includes(searchForm.value.permissionCode.toLowerCase());\n        });\n      }\n      if (searchForm.value.status !== '') {\n        result = result.filter(function (item) {\n          return item.status === searchForm.value.status;\n        });\n      }\n      return result.slice((currentPage.value - 1) * pageSize.value, currentPage.value * pageSize.value);\n    });\n\n    // 计算总数\n    var total = computed(function () {\n      var result = permissionStore.permissions;\n      if (searchForm.value.permissionName) {\n        result = result.filter(function (item) {\n          return item.permissionName.toLowerCase().includes(searchForm.value.permissionName.toLowerCase());\n        });\n      }\n      if (searchForm.value.permissionCode) {\n        result = result.filter(function (item) {\n          return item.permissionCode.toLowerCase().includes(searchForm.value.permissionCode.toLowerCase());\n        });\n      }\n      if (searchForm.value.status !== '') {\n        result = result.filter(function (item) {\n          return item.status === searchForm.value.status;\n        });\n      }\n      return result.length;\n    });\n\n    // 搜索\n    var handleSearch = function handleSearch() {\n      currentPage.value = 1;\n    };\n\n    // 重置搜索\n    var handleReset = function handleReset() {\n      searchForm.value = {\n        permissionName: '',\n        permissionCode: '',\n        status: ''\n      };\n      currentPage.value = 1;\n    };\n\n    // 处理多选\n    var handleSelectionChange = function handleSelectionChange(selection) {\n      selectedPermissions.value = selection;\n    };\n\n    // 批量删除\n    var handleBatchDelete = function handleBatchDelete() {\n      if (!selectedPermissions.value.length) {\n        ElMessage.warning('请选择要删除的权限');\n        return;\n      }\n      ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u9009\\u4E2D\\u7684 \".concat(selectedPermissions.value.length, \" \\u4E2A\\u6743\\u9650\\u5417\\uFF1F\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        selectedPermissions.value.forEach(function (permission) {\n          permissionStore.removePermission(permission.permissionCode);\n        });\n        ElMessage.success('删除成功');\n      });\n    };\n\n    // 添加权限\n    var handleAdd = function handleAdd() {\n      permissionForm.value = {\n        id: null,\n        permissionName: '',\n        permissionCode: '',\n        type: 'menu',\n        typeDescription: '',\n        description: '',\n        status: true,\n        parentId: null,\n        order: 0\n      };\n      dialogTitle.value = '添加权限';\n      dialogVisible.value = true;\n    };\n\n    // 编辑权限\n    var handleEdit = function handleEdit(row) {\n      permissionForm.value = _objectSpread({}, row);\n      dialogTitle.value = '编辑权限';\n      dialogVisible.value = true;\n    };\n\n    // 删除权限\n    var handleDelete = function handleDelete(row) {\n      ElMessageBox.confirm('确定要删除该权限吗？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        permissionStore.removePermission(row.permissionCode);\n        ElMessage.success('删除成功');\n      });\n    };\n\n    // 提交表单\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var index;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (permissionFormRef.value) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return permissionFormRef.value.validate();\n            case 5:\n              if (permissionForm.value.id) {\n                // 编辑权限\n                index = permissionStore.permissions.findIndex(function (p) {\n                  return p.id === permissionForm.value.id;\n                });\n                if (index > -1) {\n                  permissionStore.permissions[index] = _objectSpread({}, permissionForm.value);\n                }\n              } else {\n                // 添加权限\n                permissionStore.addPermission(_objectSpread({\n                  id: Date.now()\n                }, permissionForm.value));\n              }\n              ElMessage.success(permissionForm.value.id ? '更新成功' : '添加成功');\n              dialogVisible.value = false;\n              _context.next = 13;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              if (_context.t0.name === 'ValidationError') {\n                ElMessage.error('请检查表单填写是否正确');\n              } else {\n                console.error('提交表单失败:', _context.t0);\n                ElMessage.error('操作失败，请重试');\n              }\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 10]]);\n      }));\n      return function handleSubmit() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 分页大小改变\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      currentPage.value = 1;\n    };\n\n    // 当前页改变\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n    };\n\n    // 检查权限\n    var checkPermission = function checkPermission(permission) {\n      return hasPermission(permission);\n    };\n\n    // 按类型分组的权限列表\n    var groupedPermissions = computed(function () {\n      var groups = {};\n      permissionTypes.forEach(function (type) {\n        groups[type.value] = filteredPermissions.value.filter(function (p) {\n          return p.type === type.value;\n        });\n      });\n      return groups;\n    });\n\n    // 更新权限类型时的处理\n    var handleTypeChange = function handleTypeChange(value) {\n      var selectedType = permissionTypes.find(function (t) {\n        return t.value === value;\n      });\n      if (selectedType) {\n        permissionForm.value.typeDescription = selectedType.description;\n      }\n    };\n    onMounted(function () {\n      // 检查是否有权限访问\n      if (!checkPermission('VIEW_PERMISSIONS')) {\n        ElMessage.error('您没有权限访问此页面');\n        router.push('/403');\n        return;\n      }\n    });\n    var __returned__ = {\n      permissionStore: permissionStore,\n      router: router,\n      selectedPermissions: selectedPermissions,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      searchForm: searchForm,\n      dialogVisible: dialogVisible,\n      dialogTitle: dialogTitle,\n      permissionFormRef: permissionFormRef,\n      permissionTypes: permissionTypes,\n      permissionForm: permissionForm,\n      rules: rules,\n      filteredPermissions: filteredPermissions,\n      total: total,\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      handleSelectionChange: handleSelectionChange,\n      handleBatchDelete: handleBatchDelete,\n      handleAdd: handleAdd,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete,\n      handleSubmit: handleSubmit,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      checkPermission: checkPermission,\n      groupedPermissions: groupedPermissions,\n      handleTypeChange: handleTypeChange,\n      ref: ref,\n      computed: computed,\n      onMounted: onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get usePermissionStore() {\n        return usePermissionStore;\n      },\n      get hasPermission() {\n        return hasPermission;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useRouter","ElMessage","ElMessageBox","usePermissionStore","hasPermission","permissionStore","router","selectedPermissions","currentPage","pageSize","searchForm","permissionName","permissionCode","status","dialogVisible","dialogTitle","permissionFormRef","permissionTypes","value","label","description","permissionForm","id","type","typeDescription","parentId","order","rules","required","message","trigger","min","max","pattern","filteredPermissions","result","permissions","filter","item","toLowerCase","includes","slice","total","length","handleSearch","handleReset","handleSelectionChange","selection","handleBatchDelete","warning","confirm","concat","confirmButtonText","cancelButtonText","then","forEach","permission","removePermission","success","handleAdd","handleEdit","row","_objectSpread","handleDelete","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","index","wrap","_callee$","_context","prev","next","abrupt","validate","findIndex","p","addPermission","Date","now","t0","name","error","console","stop","apply","arguments","handleSizeChange","val","handleCurrentChange","checkPermission","groupedPermissions","groups","handleTypeChange","selectedType","find","t","push"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/views/PermissionManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"permission-manage\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>权限管理</span>\r\n          <div class=\"header-buttons\">\r\n            <el-button \r\n              type=\"danger\" \r\n              :disabled=\"!selectedPermissions.length\" \r\n              @click=\"handleBatchDelete\"\r\n              v-permission=\"'MANAGE_PERMISSIONS'\"\r\n            >批量删除</el-button>\r\n            <el-button \r\n              type=\"primary\" \r\n              @click=\"handleAdd\"\r\n              v-permission=\"'MANAGE_PERMISSIONS'\"\r\n            >添加权限</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 搜索表单 -->\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\r\n        <el-form-item label=\"权限名称\">\r\n          <el-input v-model=\"searchForm.permissionName\" placeholder=\"请输入权限名称\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"权限编码\">\r\n          <el-input v-model=\"searchForm.permissionCode\" placeholder=\"请输入权限编码\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"searchForm.status\" placeholder=\"请选择状态\" clearable>\r\n            <el-option label=\"启用\" :value=\"true\" />\r\n            <el-option label=\"禁用\" :value=\"false\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button @click=\"handleReset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <!-- 权限列表 -->\r\n      <el-tabs v-model=\"activeTab\" class=\"permission-tabs\">\r\n        <el-tab-pane \r\n          v-for=\"type in permissionTypes\" \r\n          :key=\"type.value\"\r\n          :label=\"type.label\"\r\n          :name=\"type.value\"\r\n        >\r\n          <el-table \r\n            :data=\"groupedPermissions[type.value]\" \r\n            style=\"width: 100%\"\r\n            @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"55\" />\r\n            <el-table-column prop=\"permissionName\" label=\"权限名称\" />\r\n            <el-table-column prop=\"permissionCode\" label=\"权限编码\" />\r\n            <el-table-column prop=\"description\" label=\"描述\" />\r\n            <el-table-column prop=\"typeDescription\" label=\"类型描述\" />\r\n            <el-table-column prop=\"order\" label=\"排序\" width=\"80\" />\r\n            <el-table-column prop=\"status\" label=\"状态\">\r\n              <template #default=\"scope\">\r\n                <el-tag :type=\"scope.row.status ? 'success' : 'danger'\">\r\n                  {{ scope.row.status ? '启用' : '禁用' }}\r\n                </el-tag>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <el-button \r\n                  size=\"small\" \r\n                  @click=\"handleEdit(scope.row)\"\r\n                  v-permission=\"'MANAGE_PERMISSIONS'\"\r\n                >编辑</el-button>\r\n                <el-button \r\n                  size=\"small\" \r\n                  type=\"danger\" \r\n                  @click=\"handleDelete(scope.row)\"\r\n                  v-permission=\"'MANAGE_PERMISSIONS'\"\r\n                >删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑权限对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      v-model=\"dialogVisible\" \r\n      width=\"500px\">\r\n      <el-form \r\n        :model=\"permissionForm\"\r\n        :rules=\"rules\" \r\n        ref=\"permissionFormRef\"\r\n        label-width=\"100px\">\r\n        <el-form-item label=\"权限名称\" prop=\"permissionName\">\r\n          <el-input v-model=\"permissionForm.permissionName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"权限编码\" prop=\"permissionCode\">\r\n          <el-input v-model=\"permissionForm.permissionCode\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"权限类型\" prop=\"type\">\r\n          <el-select \r\n            v-model=\"permissionForm.type\" \r\n            placeholder=\"请选择权限类型\"\r\n            @change=\"handleTypeChange\">\r\n            <el-option \r\n              v-for=\"type in permissionTypes\"\r\n              :key=\"type.value\"\r\n              :label=\"type.label\"\r\n              :value=\"type.value\">\r\n              <span>{{ type.label }}</span>\r\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">\r\n                {{ type.description }}\r\n              </span>\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"父权限\" prop=\"parentId\">\r\n          <el-select \r\n            v-model=\"permissionForm.parentId\" \r\n            placeholder=\"请选择父权限\"\r\n            clearable>\r\n            <el-option\r\n              v-for=\"perm in permissionStore.permissions\"\r\n              :key=\"perm.id\"\r\n              :label=\"perm.permissionName\"\r\n              :value=\"perm.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"排序\" prop=\"order\">\r\n          <el-input-number \r\n            v-model=\"permissionForm.order\"\r\n            :min=\"0\"\r\n            :max=\"999\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"permissionForm.description\" \r\n            type=\"textarea\" \r\n            :rows=\"2\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-switch v-model=\"permissionForm.status\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { usePermissionStore } from '../stores/permission'\r\nimport { hasPermission } from '../utils/auth'\r\n\r\n// 获取权限store\r\nconst permissionStore = usePermissionStore()\r\n// 获取router实例\r\nconst router = useRouter()\r\n\r\n// 权限列表数据\r\nconst selectedPermissions = ref([])\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\n\r\n// 搜索表单数据\r\nconst searchForm = ref({\r\n  permissionName: '',\r\n  permissionCode: '',\r\n  status: ''\r\n})\r\n\r\n// 对话框相关数据\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('添加权限')\r\nconst permissionFormRef = ref(null)\r\n\r\n// 权限类型定义\r\nconst permissionTypes = [\r\n  { value: 'menu', label: '菜单权限', description: '控制菜单项的显示和访问' },\r\n  { value: 'operation', label: '操作权限', description: '控制按钮等操作的权限' },\r\n  { value: 'data', label: '数据权限', description: '控制数据的访问和修改权限' },\r\n  { value: 'api', label: 'API权限', description: '控制接口的访问权限' }\r\n]\r\n\r\n// 修改表单数据\r\nconst permissionForm = ref({\r\n  id: null,\r\n  permissionName: '',\r\n  permissionCode: '',\r\n  type: 'menu',\r\n  typeDescription: '',\r\n  description: '',\r\n  status: true,\r\n  parentId: null, // 父权限ID，用于权限继承\r\n  order: 0 // 显示顺序\r\n})\r\n\r\n// 修改验证规则\r\nconst rules = {\r\n  permissionName: [\r\n    { required: true, message: '请输入权限名称', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n  ],\r\n  permissionCode: [\r\n    { required: true, message: '请输入权限编码', trigger: 'blur' },\r\n    { pattern: /^[A-Z_]+$/, message: '权限编码只能包含大写字母和下划线', trigger: 'blur' }\r\n  ],\r\n  type: [\r\n    { required: true, message: '请选择权限类型', trigger: 'change' }\r\n  ],\r\n  description: [\r\n    { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\r\n  ],\r\n  order: [\r\n    { type: 'number', message: '请输入正确的排序号', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 计算过滤后的权限列表\r\nconst filteredPermissions = computed(() => {\r\n  let result = permissionStore.permissions\r\n\r\n  if (searchForm.value.permissionName) {\r\n    result = result.filter(item => \r\n      item.permissionName.toLowerCase().includes(searchForm.value.permissionName.toLowerCase())\r\n    )\r\n  }\r\n\r\n  if (searchForm.value.permissionCode) {\r\n    result = result.filter(item =>\r\n      item.permissionCode.toLowerCase().includes(searchForm.value.permissionCode.toLowerCase())\r\n    )\r\n  }\r\n\r\n  if (searchForm.value.status !== '') {\r\n    result = result.filter(item => item.status === searchForm.value.status)\r\n  }\r\n\r\n  return result.slice(\r\n    (currentPage.value - 1) * pageSize.value,\r\n    currentPage.value * pageSize.value\r\n  )\r\n})\r\n\r\n// 计算总数\r\nconst total = computed(() => {\r\n  let result = permissionStore.permissions\r\n\r\n  if (searchForm.value.permissionName) {\r\n    result = result.filter(item => \r\n      item.permissionName.toLowerCase().includes(searchForm.value.permissionName.toLowerCase())\r\n    )\r\n  }\r\n\r\n  if (searchForm.value.permissionCode) {\r\n    result = result.filter(item =>\r\n      item.permissionCode.toLowerCase().includes(searchForm.value.permissionCode.toLowerCase())\r\n    )\r\n  }\r\n\r\n  if (searchForm.value.status !== '') {\r\n    result = result.filter(item => item.status === searchForm.value.status)\r\n  }\r\n\r\n  return result.length\r\n})\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n}\r\n\r\n// 重置搜索\r\nconst handleReset = () => {\r\n  searchForm.value = {\r\n    permissionName: '',\r\n    permissionCode: '',\r\n    status: ''\r\n  }\r\n  currentPage.value = 1\r\n}\r\n\r\n// 处理多选\r\nconst handleSelectionChange = (selection) => {\r\n  selectedPermissions.value = selection\r\n}\r\n\r\n// 批量删除\r\nconst handleBatchDelete = () => {\r\n  if (!selectedPermissions.value.length) {\r\n    ElMessage.warning('请选择要删除的权限')\r\n    return\r\n  }\r\n  \r\n  ElMessageBox.confirm(\r\n    `确定要删除选中的 ${selectedPermissions.value.length} 个权限吗？`,\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(() => {\r\n    selectedPermissions.value.forEach(permission => {\r\n      permissionStore.removePermission(permission.permissionCode)\r\n    })\r\n    ElMessage.success('删除成功')\r\n  })\r\n}\r\n\r\n// 添加权限\r\nconst handleAdd = () => {\r\n  permissionForm.value = {\r\n    id: null,\r\n    permissionName: '',\r\n    permissionCode: '',\r\n    type: 'menu',\r\n    typeDescription: '',\r\n    description: '',\r\n    status: true,\r\n    parentId: null,\r\n    order: 0\r\n  }\r\n  dialogTitle.value = '添加权限'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑权限\r\nconst handleEdit = (row) => {\r\n  permissionForm.value = { ...row }\r\n  dialogTitle.value = '编辑权限'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 删除权限\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm(\r\n    '确定要删除该权限吗？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(() => {\r\n    permissionStore.removePermission(row.permissionCode)\r\n    ElMessage.success('删除成功')\r\n  })\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!permissionFormRef.value) return\r\n  \r\n  try {\r\n    await permissionFormRef.value.validate()\r\n    \r\n    if (permissionForm.value.id) {\r\n      // 编辑权限\r\n      const index = permissionStore.permissions.findIndex(p => p.id === permissionForm.value.id)\r\n      if (index > -1) {\r\n        permissionStore.permissions[index] = { ...permissionForm.value }\r\n      }\r\n    } else {\r\n      // 添加权限\r\n      permissionStore.addPermission({\r\n        id: Date.now(), // 生成临时ID\r\n        ...permissionForm.value\r\n      })\r\n    }\r\n    \r\n    ElMessage.success(permissionForm.value.id ? '更新成功' : '添加成功')\r\n    dialogVisible.value = false\r\n  } catch (error) {\r\n    if (error.name === 'ValidationError') {\r\n      ElMessage.error('请检查表单填写是否正确')\r\n    } else {\r\n      console.error('提交表单失败:', error)\r\n      ElMessage.error('操作失败，请重试')\r\n    }\r\n  }\r\n}\r\n\r\n// 分页大小改变\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  currentPage.value = 1\r\n}\r\n\r\n// 当前页改变\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n}\r\n\r\n// 检查权限\r\nconst checkPermission = (permission) => {\r\n  return hasPermission(permission)\r\n}\r\n\r\n// 按类型分组的权限列表\r\nconst groupedPermissions = computed(() => {\r\n  const groups = {}\r\n  permissionTypes.forEach(type => {\r\n    groups[type.value] = filteredPermissions.value.filter(p => p.type === type.value)\r\n  })\r\n  return groups\r\n})\r\n\r\n// 更新权限类型时的处理\r\nconst handleTypeChange = (value) => {\r\n  const selectedType = permissionTypes.find(t => t.value === value)\r\n  if (selectedType) {\r\n    permissionForm.value.typeDescription = selectedType.description\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  // 检查是否有权限访问\r\n  if (!checkPermission('VIEW_PERMISSIONS')) {\r\n    ElMessage.error('您没有权限访问此页面')\r\n    router.push('/403')\r\n    return\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.permission-manage {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.permission-tabs {\r\n  margin-top: 20px;\r\n}\r\n\r\n.permission-tabs :deep(.el-tabs__header) {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.permission-type-description {\r\n  color: #8492a6;\r\n  font-size: 13px;\r\n  margin-top: 5px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}