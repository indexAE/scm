{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"warehouse-stock-detail\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"info-section\"\n};\nvar _hoisted_4 = {\n  \"class\": \"table-section\"\n};\nvar _hoisted_5 = {\n  \"class\": \"pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  var _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", null, \"库存明细\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.$router.back();\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[3] || (_cache[3] = [_createTextVNode(\"返回\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_descriptions, {\n        column: 3,\n        border: \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_descriptions_item, {\n            label: \"仓库\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString($setup.route.query.warehouseName), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"商品\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString($setup.route.query.productName), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_descriptions_item, {\n            label: \"当前库存\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createTextVNode(_toDisplayString($setup.currentStock), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      })]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_table, {\n        data: $setup.tableData,\n        style: {\n          \"width\": \"100%\"\n        },\n        border: \"\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createVNode(_component_el_table_column, {\n            prop: \"operation_type\",\n            label: \"操作类型\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function (_ref) {\n              var row = _ref.row;\n              return [_createTextVNode(_toDisplayString($setup.getOperationType(row.operation_type)), 1 /* TEXT */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"quantity\",\n            label: \"变动数量\",\n            width: \"120\"\n          }, {\n            \"default\": _withCtx(function (_ref2) {\n              var row = _ref2.row;\n              return [_createElementVNode(\"span\", {\n                \"class\": _normalizeClass({\n                  'text-red': row.quantity < 0,\n                  'text-green': row.quantity > 0\n                })\n              }, _toDisplayString(row.quantity > 0 ? '+' + row.quantity : row.quantity), 3 /* TEXT, CLASS */)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_table_column, {\n            prop: \"before_quantity\",\n            label: \"变动前数量\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"after_quantity\",\n            label: \"变动后数量\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"operator_name\",\n            label: \"操作人\",\n            width: \"120\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"operation_time\",\n            label: \"操作时间\",\n            width: \"180\"\n          }), _createVNode(_component_el_table_column, {\n            prop: \"remark\",\n            label: \"备注\"\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_pagination, {\n        \"current-page\": $setup.currentPage,\n        \"onUpdate:currentPage\": _cache[1] || (_cache[1] = function ($event) {\n          return $setup.currentPage = $event;\n        }),\n        \"page-size\": $setup.pageSize,\n        \"onUpdate:pageSize\": _cache[2] || (_cache[2] = function ($event) {\n          return $setup.pageSize = $event;\n        }),\n        total: $setup.total,\n        \"page-sizes\": [10, 20, 50, 100],\n        layout: \"total, sizes, prev, pager, next\",\n        onSizeChange: $setup.handleSizeChange,\n        onCurrentChange: $setup.handleCurrentChange\n      }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])])])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","onClick","_cache","$event","_ctx","$router","back","_createTextVNode","_","_hoisted_3","_component_el_descriptions","column","border","_component_el_descriptions_item","label","_toDisplayString","$setup","route","query","warehouseName","productName","currentStock","_hoisted_4","_component_el_table","data","tableData","style","_component_el_table_column","prop","width","_ref","row","getOperationType","operation_type","_ref2","_normalizeClass","quantity","_hoisted_5","_component_el_pagination","currentPage","pageSize","total","layout","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange"],"sources":["C:\\Users\\indexae\\Desktop\\scm日志\\scm\\frontend\\src\\views\\warehouse\\stock\\detail\\index.vue"],"sourcesContent":["<template>\r\n  <div class=\"warehouse-stock-detail\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>库存明细</span>\r\n          <el-button @click=\"$router.back()\">返回</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <div class=\"info-section\">\r\n        <el-descriptions :column=\"3\" border>\r\n          <el-descriptions-item label=\"仓库\">{{ route.query.warehouseName }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"商品\">{{ route.query.productName }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"当前库存\">{{ currentStock }}</el-descriptions-item>\r\n        </el-descriptions>\r\n      </div>\r\n\r\n      <div class=\"table-section\">\r\n        <el-table :data=\"tableData\" style=\"width: 100%\" border>\r\n          <el-table-column prop=\"operation_type\" label=\"操作类型\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              {{ getOperationType(row.operation_type) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"quantity\" label=\"变动数量\" width=\"120\">\r\n            <template #default=\"{ row }\">\r\n              <span :class=\"{ 'text-red': row.quantity < 0, 'text-green': row.quantity > 0 }\">\r\n                {{ row.quantity > 0 ? '+' + row.quantity : row.quantity }}\r\n              </span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column prop=\"before_quantity\" label=\"变动前数量\" width=\"120\" />\r\n          <el-table-column prop=\"after_quantity\" label=\"变动后数量\" width=\"120\" />\r\n          <el-table-column prop=\"operator_name\" label=\"操作人\" width=\"120\" />\r\n          <el-table-column prop=\"operation_time\" label=\"操作时间\" width=\"180\" />\r\n          <el-table-column prop=\"remark\" label=\"备注\" />\r\n        </el-table>\r\n\r\n        <div class=\"pagination\">\r\n          <el-pagination\r\n            v-model:current-page=\"currentPage\"\r\n            v-model:page-size=\"pageSize\"\r\n            :total=\"total\"\r\n            :page-sizes=\"[10, 20, 50, 100]\"\r\n            layout=\"total, sizes, prev, pager, next\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst tableData = ref([])\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst total = ref(0)\r\nconst currentStock = ref(0)\r\n\r\n// 获取操作类型显示文本\r\nconst getOperationType = (type) => {\r\n  const types = {\r\n    'adjust': '调整',\r\n    'inbound': '入库',\r\n    'outbound': '出库'\r\n  }\r\n  return types[type] || type\r\n}\r\n\r\n// 获取库存明细记录\r\nconst getRecords = async () => {\r\n  try {\r\n    const offset = (currentPage.value - 1) * pageSize.value\r\n    const response = await fetch(`http://127.0.0.1:8080/api/warehouse/stocks/${route.query.id}/records?offset=${offset}&limit=${pageSize.value}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    \r\n    if (result.code === 0) {\r\n      tableData.value = result.data.list || []\r\n      total.value = result.data.total || 0\r\n    } else {\r\n      ElMessage.error(result.message || '获取库存明细记录失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取库存明细记录失败:', error)\r\n    ElMessage.error('获取库存明细记录失败')\r\n  }\r\n}\r\n\r\n// 分页大小改变\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  getRecords()\r\n}\r\n\r\n// 当前页改变\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  getRecords()\r\n}\r\n\r\n// 初始化\r\nonMounted(() => {\r\n  currentStock.value = route.query.quantity || 0\r\n  getRecords()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.warehouse-stock-detail {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.info-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.text-red {\r\n  color: #f56c6c;\r\n}\r\n\r\n.text-green {\r\n  color: #67c23a;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}