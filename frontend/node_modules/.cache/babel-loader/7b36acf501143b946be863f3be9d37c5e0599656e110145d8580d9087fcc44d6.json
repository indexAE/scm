{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"order-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nvar _hoisted_3 = {\n  key: 0,\n  \"class\": \"table-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_col = _resolveComponent(\"el-col\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_row = _resolveComponent(\"el-row\");\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_table = _resolveComponent(\"el-table\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($setup.formTitle), 1 /* TEXT */), _createVNode(_component_el_button, {\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.$router.back();\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[6] || (_cache[6] = [_createTextVNode(\"返回\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-width\": \"120px\",\n        \"class\": \"order-form\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" 基本信息 \"), _createVNode(_component_el_row, {\n            gutter: 20\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"订单编号\",\n                    prop: \"orderNo\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.form.orderNo,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                          return $setup.form.orderNo = $event;\n                        }),\n                        disabled: \"\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"客户\",\n                    prop: \"customerId\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_select, {\n                        modelValue: $setup.form.customerId,\n                        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                          return $setup.form.customerId = $event;\n                        }),\n                        placeholder: \"请选择客户\",\n                        disabled: $setup.isView,\n                        onChange: $setup.handleCustomerChange\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.customers, function (customer) {\n                            return _openBlock(), _createBlock(_component_el_option, {\n                              key: customer.id,\n                              label: customer.name,\n                              value: customer.id\n                            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                          }), 128 /* KEYED_FRAGMENT */))];\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"经办人\",\n                    prop: \"handlerId\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_select, {\n                        modelValue: $setup.form.handlerId,\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                          return $setup.form.handlerId = $event;\n                        }),\n                        placeholder: \"请选择经办人\",\n                        disabled: $setup.isView,\n                        onChange: $setup.handleHandlerChange\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.handlers, function (handler) {\n                            return _openBlock(), _createBlock(_component_el_option, {\n                              key: handler.id,\n                              label: handler.name,\n                              value: handler.id\n                            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                          }), 128 /* KEYED_FRAGMENT */))];\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" 商品列表 \"), _createVNode(_component_el_form_item, {\n            label: \"订单商品\",\n            prop: \"items\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_table, {\n                data: $setup.form.items,\n                border: \"\",\n                style: {\n                  \"width\": \"100%\"\n                }\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_table_column, {\n                    label: \"商品名称\",\n                    width: \"200\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_select, {\n                        modelValue: scope.row.productId,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.productId = $event;\n                        },\n                        placeholder: \"请选择商品\",\n                        disabled: $setup.isView,\n                        onChange: function onChange(val) {\n                          return $setup.handleProductChange(val, scope.$index);\n                        }\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, function (product) {\n                            return _openBlock(), _createBlock(_component_el_option, {\n                              key: product.id,\n                              label: product.name,\n                              value: product.id\n                            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                          }), 128 /* KEYED_FRAGMENT */))];\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    prop: \"productName\",\n                    label: \"商品名称\",\n                    width: \"200\"\n                  }), _createVNode(_component_el_table_column, {\n                    prop: \"productSpec\",\n                    label: \"规格\",\n                    width: \"120\"\n                  }), _createVNode(_component_el_table_column, {\n                    prop: \"unit\",\n                    label: \"单位\",\n                    width: \"80\"\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"数量\",\n                    width: \"150\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: scope.row.quantity,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.quantity = $event;\n                        },\n                        min: 1,\n                        disabled: $setup.isView,\n                        onChange: function onChange() {\n                          return $setup.calculateItemAmount(scope.$index);\n                        }\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"单价\",\n                    width: \"150\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: scope.row.unitPrice,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.unitPrice = $event;\n                        },\n                        precision: 2,\n                        disabled: $setup.isView,\n                        onChange: function onChange() {\n                          return $setup.calculateItemAmount(scope.$index);\n                        }\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), _createVNode(_component_el_table_column, {\n                    label: \"金额\",\n                    width: \"150\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: scope.row.totalPrice,\n                        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                          return scope.row.totalPrice = $event;\n                        },\n                        precision: 2,\n                        disabled: true\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  }), !$setup.isView ? (_openBlock(), _createBlock(_component_el_table_column, {\n                    key: 0,\n                    label: \"操作\",\n                    width: \"120\"\n                  }, {\n                    \"default\": _withCtx(function (scope) {\n                      return [_createVNode(_component_el_button, {\n                        link: \"\",\n                        type: \"danger\",\n                        onClick: function onClick($event) {\n                          return $setup.handleDeleteItem(scope.$index);\n                        }\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return _cache[7] || (_cache[7] = [_createTextVNode(\" 删除 \")]);\n                        }),\n                        _: 2 /* DYNAMIC */\n                      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })) : _createCommentVNode(\"v-if\", true)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"data\"]), !$setup.isView ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.handleAddItem\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[8] || (_cache[8] = [_createTextVNode(\"添加商品\")]);\n                }),\n                _: 1 /* STABLE */\n              })])) : _createCommentVNode(\"v-if\", true)];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"备注\",\n            prop: \"remark\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.remark,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                  return $setup.form.remark = $event;\n                }),\n                type: \"textarea\",\n                rows: 3,\n                placeholder: \"请输入备注信息\",\n                disabled: $setup.isView\n              }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [!$setup.isView ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"primary\",\n                onClick: $setup.handleSubmit,\n                loading: $setup.submitting\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[9] || (_cache[9] = [_createTextVNode(\" 保存 \")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"loading\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n                onClick: _cache[5] || (_cache[5] = function ($event) {\n                  return _ctx.$router.back();\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[10] || (_cache[10] = [_createTextVNode(\"取消\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["key","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_toDisplayString","$setup","formTitle","_component_el_button","onClick","_cache","$event","_ctx","$router","back","_createTextVNode","_","_component_el_form","ref","model","form","rules","_createCommentVNode","_component_el_row","gutter","_component_el_col","span","_component_el_form_item","label","prop","_component_el_input","modelValue","orderNo","disabled","_component_el_select","customerId","placeholder","isView","onChange","handleCustomerChange","_Fragment","_renderList","customers","customer","_createBlock","_component_el_option","id","name","value","handlerId","handleHandlerChange","handlers","handler","_component_el_table","data","items","border","style","_component_el_table_column","width","scope","row","productId","onUpdateModelValue","val","handleProductChange","$index","products","product","_component_el_input_number","quantity","min","calculateItemAmount","unitPrice","precision","totalPrice","link","type","handleDeleteItem","_hoisted_3","handleAddItem","remark","rows","handleSubmit","loading","submitting"],"sources":["C:\\Users\\indexae\\Desktop\\scm\\scm日志\\scm\\frontend\\src\\views\\sale\\order\\form.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-form\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>{{ formTitle }}</span>\r\n          <el-button @click=\"$router.back()\">返回</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"120px\"\r\n        class=\"order-form\"\r\n      >\r\n        <!-- 基本信息 -->\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"订单编号\" prop=\"orderNo\">\r\n              <el-input v-model=\"form.orderNo\" disabled />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"客户\" prop=\"customerId\">\r\n              <el-select\r\n                v-model=\"form.customerId\"\r\n                placeholder=\"请选择客户\"\r\n                :disabled=\"isView\"\r\n                @change=\"handleCustomerChange\"\r\n              >\r\n                <el-option\r\n                  v-for=\"customer in customers\"\r\n                  :key=\"customer.id\"\r\n                  :label=\"customer.name\"\r\n                  :value=\"customer.id\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"经办人\" prop=\"handlerId\">\r\n              <el-select\r\n                v-model=\"form.handlerId\"\r\n                placeholder=\"请选择经办人\"\r\n                :disabled=\"isView\"\r\n                @change=\"handleHandlerChange\"\r\n              >\r\n                <el-option\r\n                  v-for=\"handler in handlers\"\r\n                  :key=\"handler.id\"\r\n                  :label=\"handler.name\"\r\n                  :value=\"handler.id\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <!-- 商品列表 -->\r\n        <el-form-item label=\"订单商品\" prop=\"items\">\r\n          <el-table :data=\"form.items\" border style=\"width: 100%\">\r\n            <el-table-column label=\"商品名称\" width=\"200\">\r\n              <template #default=\"scope\">\r\n                <el-select\r\n                  v-model=\"scope.row.productId\"\r\n                  placeholder=\"请选择商品\"\r\n                  :disabled=\"isView\"\r\n                  @change=\"(val) => handleProductChange(val, scope.$index)\"\r\n                >\r\n                  <el-option\r\n                    v-for=\"product in products\"\r\n                    :key=\"product.id\"\r\n                    :label=\"product.name\"\r\n                    :value=\"product.id\"\r\n                  />\r\n                </el-select>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"productName\" label=\"商品名称\" width=\"200\" />\r\n            <el-table-column prop=\"productSpec\" label=\"规格\" width=\"120\" />\r\n            <el-table-column prop=\"unit\" label=\"单位\" width=\"80\" />\r\n            <el-table-column label=\"数量\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.quantity\"\r\n                  :min=\"1\"\r\n                  :disabled=\"isView\"\r\n                  @change=\"() => calculateItemAmount(scope.$index)\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"单价\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.unitPrice\"\r\n                  :precision=\"2\"\r\n                  :disabled=\"isView\"\r\n                  @change=\"() => calculateItemAmount(scope.$index)\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"金额\" width=\"150\">\r\n              <template #default=\"scope\">\r\n                <el-input-number\r\n                  v-model=\"scope.row.totalPrice\"\r\n                  :precision=\"2\"\r\n                  :disabled=\"true\"\r\n                />\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\" width=\"120\" v-if=\"!isView\">\r\n              <template #default=\"scope\">\r\n                <el-button\r\n                  link\r\n                  type=\"danger\"\r\n                  @click=\"handleDeleteItem(scope.$index)\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <div class=\"table-footer\" v-if=\"!isView\">\r\n            <el-button type=\"primary\" @click=\"handleAddItem\">添加商品</el-button>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input\r\n            v-model=\"form.remark\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入备注信息\"\r\n            :disabled=\"isView\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button\r\n            v-if=\"!isView\"\r\n            type=\"primary\"\r\n            @click=\"handleSubmit\"\r\n            :loading=\"submitting\"\r\n          >\r\n            保存\r\n          </el-button>\r\n          <el-button @click=\"$router.back()\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst formRef = ref(null)\r\nconst submitting = ref(false)\r\n\r\n// 获取路由参数\r\nconst id = route.query.id\r\nconst mode = route.query.mode\r\nconst isView = computed(() => mode === 'view')\r\n\r\n// 表单标题\r\nconst formTitle = computed(() => {\r\n  if (isView.value) return '查看销售订单'\r\n  return id ? '编辑销售订单' : '新增销售订单'\r\n})\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  orderNo: '',\r\n  customerId: '',\r\n  customerName: '',\r\n  handlerId: '',\r\n  handlerName: '',\r\n  totalAmount: 0,\r\n  remark: '',\r\n  items: []\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  customerId: [{ required: true, message: '请选择客户', trigger: 'change' }],\r\n  handlerId: [{ required: true, message: '请选择经办人', trigger: 'change' }],\r\n  items: [{ required: true, type: 'array', message: '请添加订单商品', trigger: 'change' }]\r\n}\r\n\r\n// 客户列表\r\nconst customers = ref([])\r\n// 经办人列表\r\nconst handlers = ref([])\r\n// 商品列表\r\nconst products = ref([])\r\n\r\n// 获取客户列表\r\nconst getCustomers = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8080/api/customers', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      customers.value = result.data.list || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取客户列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取客户列表失败:', error)\r\n    ElMessage.error('获取客户列表失败')\r\n  }\r\n}\r\n\r\n// 获取经办人列表\r\nconst getHandlers = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8080/api/handlers', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      handlers.value = result.data.list || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取经办人列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取经办人列表失败:', error)\r\n    ElMessage.error('获取经办人列表失败')\r\n  }\r\n}\r\n\r\n// 获取商品列表\r\nconst getProducts = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8080/api/products', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      products.value = result.data.list || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取商品列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取商品列表失败:', error)\r\n    ElMessage.error('获取商品列表失败')\r\n  }\r\n}\r\n\r\n// 获取订单详情\r\nconst getOrderDetail = async () => {\r\n  try {\r\n    const response = await fetch(`http://127.0.0.1:8080/api/sale/orders/${id}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      Object.assign(form, result.data)\r\n    } else {\r\n      ElMessage.error(result.message || '获取订单详情失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单详情失败:', error)\r\n    ElMessage.error('获取订单详情失败')\r\n  }\r\n}\r\n\r\n// 处理客户选择变化\r\nconst handleCustomerChange = (customerId) => {\r\n  const customer = customers.value.find(c => c.id === customerId)\r\n  if (customer) {\r\n    form.customerName = customer.name\r\n  }\r\n}\r\n\r\n// 处理经办人选择变化\r\nconst handleHandlerChange = (handlerId) => {\r\n  const handler = handlers.value.find(h => h.id === handlerId)\r\n  if (handler) {\r\n    form.handlerName = handler.name\r\n  }\r\n}\r\n\r\n// 处理商品选择变化\r\nconst handleProductChange = (productId, index) => {\r\n  const product = products.value.find(p => p.id === productId)\r\n  if (product) {\r\n    form.items[index] = {\r\n      ...form.items[index],\r\n      productId: product.id,\r\n      productName: product.name,\r\n      productSpec: product.spec,\r\n      unit: product.unit,\r\n      unitPrice: product.price,\r\n      quantity: 1\r\n    }\r\n    calculateItemAmount(index)\r\n  }\r\n}\r\n\r\n// 添加商品明细\r\nconst handleAddItem = () => {\r\n  form.items.push({\r\n    productId: '',\r\n    productName: '',\r\n    productSpec: '',\r\n    unit: '',\r\n    quantity: 1,\r\n    unitPrice: 0,\r\n    totalPrice: 0\r\n  })\r\n}\r\n\r\n// 删除商品明细\r\nconst handleDeleteItem = (index) => {\r\n  form.items.splice(index, 1)\r\n}\r\n\r\n// 计算商品金额\r\nconst calculateItemAmount = (index) => {\r\n  const item = form.items[index]\r\n  item.totalPrice = item.quantity * item.unitPrice\r\n  // 计算总金额\r\n  form.totalAmount = form.items.reduce((sum, item) => sum + (item.totalPrice || 0), 0)\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      if (form.items.length === 0) {\r\n        ElMessage.warning('请添加订单商品')\r\n        return\r\n      }\r\n\r\n      submitting.value = true\r\n      try {\r\n        const url = id\r\n          ? `http://127.0.0.1:8080/api/sale/orders/${id}`\r\n          : 'http://127.0.0.1:8080/api/sale/orders'\r\n        const method = id ? 'PUT' : 'POST'\r\n        \r\n        const response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(form)\r\n        })\r\n        \r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          ElMessage.success(id ? '更新成功' : '创建成功')\r\n          router.back()\r\n        } else {\r\n          ElMessage.error(result.message || (id ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(id ? '更新订单失败:' : '创建订单失败:', error)\r\n        ElMessage.error(id ? '更新失败' : '创建失败')\r\n      } finally {\r\n        submitting.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 初始化\r\nonMounted(async () => {\r\n  await Promise.all([getCustomers(), getHandlers(), getProducts()])\r\n  if (id) {\r\n    await getOrderDetail()\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.order-form {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.el-form {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.table-footer {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}