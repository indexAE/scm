{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\n\n// 创建axios实例\nvar service = axios.create({\n  baseURL: 'http://localhost:8080',\n  // API的base_url\n  timeout: 5000 // 请求超时时间\n});\n\n// 请求拦截器\nservice.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  var token = localStorage.getItem('token');\n  if (token && token !== 'undefined') {\n    config.headers['Authorization'] = \"Bearer \".concat(token);\n  }\n  // 设置跨域请求凭证\n  config.withCredentials = true;\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  console.log(error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(function (response) {\n  var res = response.data;\n  if (res.code && res.code !== 200) {\n    ElMessage({\n      message: res.message || 'Error',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    return Promise.reject(new Error(res.message || 'Error'));\n  } else {\n    return res;\n  }\n}, function (error) {\n  var _error$response;\n  console.log('err' + error);\n  ElMessage({\n    message: ((_error$response = error.response) === null || _error$response === void 0 || (_error$response = _error$response.data) === null || _error$response === void 0 ? void 0 : _error$response.message) || error.message || '请求失败',\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","ElMessage","service","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","concat","withCredentials","error","console","log","Promise","reject","response","res","data","code","message","type","duration","Error","_error$response"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport { ElMessage } from 'element-plus'\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: 'http://localhost:8080', // API的base_url\r\n  timeout: 5000 // 请求超时时间\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // 在发送请求之前做些什么\r\n    const token = localStorage.getItem('token')\r\n    if (token && token !== 'undefined') {\r\n      config.headers['Authorization'] = `Bearer ${token}`\r\n    }\r\n    // 设置跨域请求凭证\r\n    config.withCredentials = true\r\n    return config\r\n  },\r\n  error => {\r\n    // 对请求错误做些什么\r\n    console.log(error)\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const res = response.data\r\n    if (res.code && res.code !== 200) {\r\n      ElMessage({\r\n        message: res.message || 'Error',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n      return Promise.reject(new Error(res.message || 'Error'))\r\n    } else {\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    console.log('err' + error)\r\n    ElMessage({\r\n      message: error.response?.data?.message || error.message || '请求失败',\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service "],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;;AAExC;AACA,IAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAH,OAAO,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9B,UAAAC,MAAM,EAAI;EACR;EACA,IAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,IAAIA,KAAK,KAAK,WAAW,EAAE;IAClCD,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,aAAAC,MAAA,CAAaJ,KAAK,CAAE;EACrD;EACA;EACAD,MAAM,CAACM,eAAe,GAAG,IAAI;EAC7B,OAAON,MAAM;AACf,CAAC,EACD,UAAAO,KAAK,EAAI;EACP;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,OAAO,CAACI,YAAY,CAACe,QAAQ,CAACb,GAAG,CAC/B,UAAAa,QAAQ,EAAI;EACV,IAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,IAAI,IAAIF,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IAChCvB,SAAS,CAAC;MACRwB,OAAO,EAAEH,GAAG,CAACG,OAAO,IAAI,OAAO;MAC/BC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;IACF,OAAOR,OAAO,CAACC,MAAM,CAAC,IAAIQ,KAAK,CAACN,GAAG,CAACG,OAAO,IAAI,OAAO,CAAC,CAAC;EAC1D,CAAC,MAAM;IACL,OAAOH,GAAG;EACZ;AACF,CAAC,EACD,UAAAN,KAAK,EAAI;EAAA,IAAAa,eAAA;EACPZ,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,KAAK,CAAC;EAC1Bf,SAAS,CAAC;IACRwB,OAAO,EAAE,EAAAI,eAAA,GAAAb,KAAK,CAACK,QAAQ,cAAAQ,eAAA,gBAAAA,eAAA,GAAdA,eAAA,CAAgBN,IAAI,cAAAM,eAAA,uBAApBA,eAAA,CAAsBJ,OAAO,KAAIT,KAAK,CAACS,OAAO,IAAI,MAAM;IACjEC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOR,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}