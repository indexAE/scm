{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"variance-form\"\n};\nvar _hoisted_2 = {\n  \"class\": \"card-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_col = _resolveComponent(\"el-col\");\n  var _component_el_option = _resolveComponent(\"el-option\");\n  var _component_el_select = _resolveComponent(\"el-select\");\n  var _component_el_row = _resolveComponent(\"el-row\");\n  var _component_el_input_number = _resolveComponent(\"el-input-number\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, null, {\n    header: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($setup.formTitle), 1 /* TEXT */), _createVNode(_component_el_button, {\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.$router.back();\n        })\n      }, {\n        \"default\": _withCtx(function () {\n          return _cache[14] || (_cache[14] = [_createTextVNode(\"返回\")]);\n        }),\n        _: 1 /* STABLE */\n      })])];\n    }),\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-width\": \"120px\",\n        \"class\": \"variance-form\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" 基本信息 \"), _createVNode(_component_el_row, {\n            gutter: 20\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"差异单号\",\n                    prop: \"varianceNo\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.form.varianceNo,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                          return $setup.form.varianceNo = $event;\n                        }),\n                        disabled: \"\"\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"关联订单号\",\n                    prop: \"orderId\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_select, {\n                        modelValue: $setup.form.orderId,\n                        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                          return $setup.form.orderId = $event;\n                        }),\n                        placeholder: \"请选择关联订单\",\n                        disabled: $setup.isView || !!$setup.id,\n                        onChange: $setup.handleOrderChange\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.orders, function (order) {\n                            return _openBlock(), _createBlock(_component_el_option, {\n                              key: order.id,\n                              label: order.orderNo,\n                              value: order.id\n                            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                          }), 128 /* KEYED_FRAGMENT */))];\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"客户名称\",\n                    prop: \"customerName\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input, {\n                        modelValue: $setup.form.customerName,\n                        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                          return $setup.form.customerName = $event;\n                        }),\n                        disabled: \"\",\n                        placeholder: \"选择订单后自动填充\",\n                        \"class\": _normalizeClass({\n                          'readonly-input': true\n                        })\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_row, {\n            gutter: 20\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"商品名称\",\n                    prop: \"productId\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_select, {\n                        modelValue: $setup.form.productId,\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                          return $setup.form.productId = $event;\n                        }),\n                        placeholder: \"请选择商品\",\n                        disabled: $setup.isView || !!$setup.id,\n                        onChange: $setup.handleProductChange\n                      }, {\n                        \"default\": _withCtx(function () {\n                          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.products, function (product) {\n                            return _openBlock(), _createBlock(_component_el_option, {\n                              key: product.id,\n                              label: product.name,\n                              value: product.id\n                            }, null, 8 /* PROPS */, [\"label\", \"value\"]);\n                          }), 128 /* KEYED_FRAGMENT */))];\n                        }),\n                        _: 1 /* STABLE */\n                      }, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"订单数量\",\n                    prop: \"orderQuantity\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: $setup.form.orderQuantity,\n                        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = function ($event) {\n                          return $setup.form.orderQuantity = $event;\n                        }),\n                        min: 0,\n                        disabled: true\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"实际数量\",\n                    prop: \"actualQuantity\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: $setup.form.actualQuantity,\n                        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = function ($event) {\n                          return $setup.form.actualQuantity = $event;\n                        }),\n                        min: 0,\n                        disabled: $setup.isView,\n                        onChange: $setup.calculateVariance\n                      }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_row, {\n            gutter: 20\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"差异数量\",\n                    prop: \"varianceQuantity\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: $setup.form.varianceQuantity,\n                        \"onUpdate:modelValue\": _cache[7] || (_cache[7] = function ($event) {\n                          return $setup.form.varianceQuantity = $event;\n                        }),\n                        disabled: true\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"单价\",\n                    prop: \"unitPrice\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: $setup.form.unitPrice,\n                        \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n                          return $setup.form.unitPrice = $event;\n                        }),\n                        precision: 2,\n                        disabled: true\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              }), _createVNode(_component_el_col, {\n                span: 8\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createVNode(_component_el_form_item, {\n                    label: \"差异金额\",\n                    prop: \"amount\"\n                  }, {\n                    \"default\": _withCtx(function () {\n                      return [_createVNode(_component_el_input_number, {\n                        modelValue: $setup.form.amount,\n                        \"onUpdate:modelValue\": _cache[9] || (_cache[9] = function ($event) {\n                          return $setup.form.amount = $event;\n                        }),\n                        precision: 2,\n                        disabled: true\n                      }, null, 8 /* PROPS */, [\"modelValue\"])];\n                    }),\n                    _: 1 /* STABLE */\n                  })];\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"差异原因\",\n            prop: \"reason\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.reason,\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = function ($event) {\n                  return $setup.form.reason = $event;\n                }),\n                type: \"textarea\",\n                rows: 3,\n                placeholder: \"请输入差异原因\",\n                disabled: $setup.isView\n              }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"处理方案\",\n            prop: \"solution\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.solution,\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = function ($event) {\n                  return $setup.form.solution = $event;\n                }),\n                type: \"textarea\",\n                rows: 3,\n                placeholder: \"请输入处理方案\",\n                disabled: $setup.isView || $setup.form.status !== 'pending'\n              }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, {\n            label: \"备注\",\n            prop: \"remark\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.remark,\n                \"onUpdate:modelValue\": _cache[12] || (_cache[12] = function ($event) {\n                  return $setup.form.remark = $event;\n                }),\n                type: \"textarea\",\n                rows: 3,\n                placeholder: \"请输入备注信息\",\n                disabled: $setup.isView\n              }, null, 8 /* PROPS */, [\"modelValue\", \"disabled\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [!$setup.isView ? (_openBlock(), _createBlock(_component_el_button, {\n                key: 0,\n                type: \"primary\",\n                onClick: $setup.handleSubmit,\n                loading: $setup.submitting\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[15] || (_cache[15] = [_createTextVNode(\" 保存 \")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"loading\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n                onClick: _cache[13] || (_cache[13] = function ($event) {\n                  return _ctx.$router.back();\n                })\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[16] || (_cache[16] = [_createTextVNode(\"取消\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_toDisplayString","$setup","formTitle","_component_el_button","onClick","_cache","$event","_ctx","$router","back","_createTextVNode","_","_component_el_form","ref","model","form","rules","_createCommentVNode","_component_el_row","gutter","_component_el_col","span","_component_el_form_item","label","prop","_component_el_input","modelValue","varianceNo","disabled","_component_el_select","orderId","placeholder","isView","id","onChange","handleOrderChange","_Fragment","_renderList","orders","order","_createBlock","_component_el_option","key","orderNo","value","customerName","_normalizeClass","productId","handleProductChange","products","product","name","_component_el_input_number","orderQuantity","min","actualQuantity","calculateVariance","varianceQuantity","unitPrice","precision","amount","reason","type","rows","solution","status","remark","handleSubmit","loading","submitting"],"sources":["C:\\Users\\indexae\\Desktop\\scm\\scm\\frontend\\src\\views\\sale\\variance\\form.vue"],"sourcesContent":["<template>\r\n  <div class=\"variance-form\">\r\n    <el-card>\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>{{ formTitle }}</span>\r\n          <el-button @click=\"$router.back()\">返回</el-button>\r\n        </div>\r\n      </template>\r\n\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-width=\"120px\"\r\n        class=\"variance-form\"\r\n      >\r\n        <!-- 基本信息 -->\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"差异单号\" prop=\"varianceNo\">\r\n              <el-input v-model=\"form.varianceNo\" disabled />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"关联订单号\" prop=\"orderId\">\r\n              <el-select\r\n                v-model=\"form.orderId\"\r\n                placeholder=\"请选择关联订单\"\r\n                :disabled=\"isView || !!id\"\r\n                @change=\"handleOrderChange\"\r\n              >\r\n                <el-option\r\n                  v-for=\"order in orders\"\r\n                  :key=\"order.id\"\r\n                  :label=\"order.orderNo\"\r\n                  :value=\"order.id\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"客户名称\" prop=\"customerName\">\r\n              <el-input\r\n                v-model=\"form.customerName\"\r\n                disabled\r\n                placeholder=\"选择订单后自动填充\"\r\n                :class=\"{ 'readonly-input': true }\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"商品名称\" prop=\"productId\">\r\n              <el-select\r\n                v-model=\"form.productId\"\r\n                placeholder=\"请选择商品\"\r\n                :disabled=\"isView || !!id\"\r\n                @change=\"handleProductChange\"\r\n              >\r\n                <el-option\r\n                  v-for=\"product in products\"\r\n                  :key=\"product.id\"\r\n                  :label=\"product.name\"\r\n                  :value=\"product.id\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"订单数量\" prop=\"orderQuantity\">\r\n              <el-input-number\r\n                v-model=\"form.orderQuantity\"\r\n                :min=\"0\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"实际数量\" prop=\"actualQuantity\">\r\n              <el-input-number\r\n                v-model=\"form.actualQuantity\"\r\n                :min=\"0\"\r\n                :disabled=\"isView\"\r\n                @change=\"calculateVariance\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"差异数量\" prop=\"varianceQuantity\">\r\n              <el-input-number\r\n                v-model=\"form.varianceQuantity\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"单价\" prop=\"unitPrice\">\r\n              <el-input-number\r\n                v-model=\"form.unitPrice\"\r\n                :precision=\"2\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"8\">\r\n            <el-form-item label=\"差异金额\" prop=\"amount\">\r\n              <el-input-number\r\n                v-model=\"form.amount\"\r\n                :precision=\"2\"\r\n                :disabled=\"true\"\r\n              />\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n\r\n        <el-form-item label=\"差异原因\" prop=\"reason\">\r\n          <el-input\r\n            v-model=\"form.reason\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入差异原因\"\r\n            :disabled=\"isView\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"处理方案\" prop=\"solution\">\r\n          <el-input\r\n            v-model=\"form.solution\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入处理方案\"\r\n            :disabled=\"isView || form.status !== 'pending'\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"备注\" prop=\"remark\">\r\n          <el-input\r\n            v-model=\"form.remark\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"请输入备注信息\"\r\n            :disabled=\"isView\"\r\n          />\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button\r\n            v-if=\"!isView\"\r\n            type=\"primary\"\r\n            @click=\"handleSubmit\"\r\n            :loading=\"submitting\"\r\n          >\r\n            保存\r\n          </el-button>\r\n          <el-button @click=\"$router.back()\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useRoute, useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst route = useRoute()\r\nconst router = useRouter()\r\nconst formRef = ref(null)\r\nconst submitting = ref(false)\r\n\r\n// 获取路由参数\r\nconst id = route.query.id\r\nconst mode = route.query.mode\r\nconst isView = computed(() => mode === 'view')\r\n\r\n// 表单标题\r\nconst formTitle = computed(() => {\r\n  if (isView.value) return '查看销售差异'\r\n  return id ? '编辑销售差异' : '新增销售差异'\r\n})\r\n\r\n// 生成差异单号\r\nconst generateVarianceNo = () => {\r\n  const date = new Date()\r\n  const year = date.getFullYear()\r\n  const month = String(date.getMonth() + 1).padStart(2, '0')\r\n  const day = String(date.getDate()).padStart(2, '0')\r\n  const random = Math.floor(Math.random() * 10000).toString().padStart(4, '0')\r\n  return `CY${year}${month}${day}${random}`\r\n}\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  varianceNo: generateVarianceNo(),  // 初始化时生成差异单号\r\n  orderId: '',\r\n  orderNo: '',\r\n  customerId: '',\r\n  customerName: '',\r\n  productId: '',\r\n  productName: '',\r\n  orderQuantity: 0,\r\n  actualQuantity: 0,\r\n  varianceQuantity: 0,\r\n  unitPrice: 0,\r\n  amount: 0,\r\n  type: 'quantity',\r\n  reason: '',\r\n  solution: '',\r\n  remark: '',\r\n  status: 'pending'\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  orderId: [{ required: true, message: '请选择关联订单', trigger: 'change' }],\r\n  productId: [{ required: true, message: '请选择商品', trigger: 'change' }],\r\n  actualQuantity: [{ required: true, message: '请输入实际数量', trigger: 'blur' }],\r\n  reason: [{ required: true, message: '请输入差异原因', trigger: 'blur' }]\r\n}\r\n\r\n// 订单列表\r\nconst orders = ref([])\r\n// 商品列表\r\nconst products = ref([])\r\n\r\n// 获取订单列表\r\nconst getOrders = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8080/api/sale/orders?status=completed', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      orders.value = result.data.list || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取订单列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单列表失败:', error)\r\n    ElMessage.error('获取订单列表失败')\r\n  }\r\n}\r\n\r\n// 获取商品列表\r\nconst getProducts = async () => {\r\n  try {\r\n    const response = await fetch('http://127.0.0.1:8080/api/products', {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      products.value = result.data.list || []\r\n    } else {\r\n      ElMessage.error(result.message || '获取商品列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取商品列表失败:', error)\r\n    ElMessage.error('获取商品列表失败')\r\n  }\r\n}\r\n\r\n// 处理订单选择变化\r\nconst handleOrderChange = async (orderId) => {\r\n  try {\r\n    const response = await fetch(`http://127.0.0.1:8080/api/sale/orders/${orderId}`, {\r\n      headers: {\r\n        'Accept': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      const order = result.data\r\n      form.orderNo = order.orderNo\r\n      form.customerId = order.customerId\r\n      form.customerName = order.customerName\r\n      \r\n      // 清空之前选择的商品\r\n      form.productId = ''\r\n      form.productName = ''\r\n      form.orderQuantity = 0\r\n      form.actualQuantity = 0\r\n      form.varianceQuantity = 0\r\n      form.unitPrice = 0\r\n      form.amount = 0\r\n      \r\n      // 获取订单的商品列表\r\n      try {\r\n        const itemsResponse = await fetch(`http://127.0.0.1:8080/api/sale/orders/${orderId}/items`, {\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        })\r\n        const itemsResult = await itemsResponse.json()\r\n        if (itemsResult.code === 0) {\r\n          // 更新商品列表，只显示订单中的商品\r\n          const orderItems = itemsResult.data.list || []\r\n          products.value = products.value.filter(p => \r\n            orderItems.some(item => item.productId === p.id)\r\n          )\r\n        }\r\n      } catch (error) {\r\n        console.error('获取订单商品列表失败:', error)\r\n        ElMessage.error('获取订单商品列表失败')\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error('获取订单详情失败:', error)\r\n    ElMessage.error('获取订单详情失败')\r\n  }\r\n}\r\n\r\n// 处理商品选择变化\r\nconst handleProductChange = async (productId) => {\r\n  const product = products.value.find(p => p.id === productId)\r\n  if (product) {\r\n    form.productName = product.name\r\n    form.unitPrice = product.price\r\n    // 获取订单中该商品的数量\r\n    if (form.orderId) {\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:8080/api/sale/orders/${form.orderId}/items?productId=${productId}`, {\r\n          headers: {\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        })\r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          form.orderQuantity = result.data.quantity || 0\r\n          calculateVariance()\r\n        }\r\n      } catch (error) {\r\n        console.error('获取订单商品数量失败:', error)\r\n        ElMessage.error('获取订单商品数量失败')\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 计算差异\r\nconst calculateVariance = () => {\r\n  form.varianceQuantity = form.orderQuantity - form.actualQuantity\r\n  form.amount = form.varianceQuantity * form.unitPrice\r\n  // 根据差异数量自动设置差异类型\r\n  if (form.varianceQuantity !== 0) {\r\n    form.type = 'quantity'  // 数量差异\r\n  } else if (form.amount !== 0) {\r\n    form.type = 'amount'   // 金额差异\r\n  } else {\r\n    form.type = 'other'    // 其他差异\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      submitting.value = true\r\n      try {\r\n        const url = id\r\n          ? `http://127.0.0.1:8080/api/sale/variances/${id}`\r\n          : 'http://127.0.0.1:8080/api/sale/variances'\r\n        const method = id ? 'PUT' : 'POST'\r\n        \r\n        const response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          },\r\n          credentials: 'include',\r\n          body: JSON.stringify(form)\r\n        })\r\n        \r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          ElMessage.success(id ? '更新成功' : '创建成功')\r\n          router.back()\r\n        } else {\r\n          ElMessage.error(result.message || (id ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(id ? '更新差异单失败:' : '创建差异单失败:', error)\r\n        ElMessage.error(id ? '更新失败' : '创建失败')\r\n      } finally {\r\n        submitting.value = false\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 初始化\r\nonMounted(async () => {\r\n  // 先获取订单和商品列表\r\n  await Promise.all([getOrders(), getProducts()])\r\n  \r\n  // 如果是编辑或查看模式，获取差异单详情\r\n  if (id) {\r\n    try {\r\n      const response = await fetch(`http://127.0.0.1:8080/api/sale/variances/${id}`, {\r\n        headers: {\r\n          'Accept': 'application/json'\r\n        },\r\n        credentials: 'include'\r\n      })\r\n      const result = await response.json()\r\n      if (result.code === 0) {\r\n        const data = result.data\r\n        // 先设置订单ID，触发订单相关数据的加载\r\n        form.orderId = data.orderId\r\n        await handleOrderChange(data.orderId)\r\n        \r\n        // 再设置商品ID\r\n        form.productId = data.productId\r\n        // 根据商品ID获取商品详情\r\n        const product = products.value.find(p => p.id === data.productId)\r\n        if (product) {\r\n          data.productName = product.name\r\n          data.unitPrice = product.price\r\n        }\r\n        // 最后设置其他数据\r\n        Object.assign(form, data)\r\n      } else {\r\n        ElMessage.error(result.message || '获取差异单详情失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('获取差异单详情失败:', error)\r\n      ElMessage.error('获取差异单详情失败')\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.variance-form {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.el-form {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.readonly-input :deep(.el-input__inner) {\r\n  background-color: var(--el-input-disabled-bg);\r\n  color: var(--el-text-color-regular);\r\n  cursor: not-allowed;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}