{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { useRouter } from 'vue-router';\nimport { useSettingsStore } from '../stores/settings';\nexport default {\n  __name: 'Profile',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var profileForm = ref({\n      username: '',\n      roleName: '',\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    var router = useRouter();\n    var settingsStore = useSettingsStore();\n\n    // 获取个人信息\n    var getProfile = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var userId, userRes, userData;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              userId = localStorage.getItem('userId');\n              if (userId) {\n                _context.next = 6;\n                break;\n              }\n              ElMessage.error('请先登录');\n              router.push('/login');\n              return _context.abrupt(\"return\");\n            case 6:\n              _context.next = 8;\n              return fetch(\"http://localhost:8080/api/users/\".concat(userId), {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n            case 8:\n              userRes = _context.sent;\n              _context.next = 11;\n              return userRes.json();\n            case 11:\n              userData = _context.sent;\n              if (userData.code === 0) {\n                profileForm.value.username = userData.data.username;\n                profileForm.value.roleName = userData.data.role || '未分配角色';\n              } else {\n                ElMessage.error(userData.message || '获取用户信息失败');\n              }\n              _context.next = 19;\n              break;\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取个人信息失败:', _context.t0);\n              ElMessage.error('获取个人信息失败');\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 15]]);\n      }));\n      return function getProfile() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 提交修改\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var userId, res, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (profileForm.value.oldPassword) {\n                _context2.next = 3;\n                break;\n              }\n              ElMessage.error('请输入原密码');\n              return _context2.abrupt(\"return\");\n            case 3:\n              if (profileForm.value.newPassword) {\n                _context2.next = 6;\n                break;\n              }\n              ElMessage.error('请输入新密码');\n              return _context2.abrupt(\"return\");\n            case 6:\n              if (profileForm.value.confirmPassword) {\n                _context2.next = 9;\n                break;\n              }\n              ElMessage.error('请确认新密码');\n              return _context2.abrupt(\"return\");\n            case 9:\n              if (!(profileForm.value.newPassword.length < settingsStore.passwordMinLength)) {\n                _context2.next = 12;\n                break;\n              }\n              ElMessage.error(\"\\u65B0\\u5BC6\\u7801\\u957F\\u5EA6\\u4E0D\\u80FD\\u5C0F\\u4E8E\".concat(settingsStore.passwordMinLength, \"\\u4F4D\"));\n              return _context2.abrupt(\"return\");\n            case 12:\n              if (!(profileForm.value.newPassword !== profileForm.value.confirmPassword)) {\n                _context2.next = 15;\n                break;\n              }\n              ElMessage.error('两次输入的新密码不一致');\n              return _context2.abrupt(\"return\");\n            case 15:\n              _context2.prev = 15;\n              userId = localStorage.getItem('userId');\n              if (userId) {\n                _context2.next = 21;\n                break;\n              }\n              ElMessage.error('请先登录');\n              router.push('/login');\n              return _context2.abrupt(\"return\");\n            case 21:\n              _context2.next = 23;\n              return fetch(\"http://localhost:8080/api/users/\".concat(userId, \"/password\"), {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  oldPassword: profileForm.value.oldPassword,\n                  newPassword: profileForm.value.newPassword\n                })\n              });\n            case 23:\n              res = _context2.sent;\n              _context2.next = 26;\n              return res.json();\n            case 26:\n              data = _context2.sent;\n              if (data.code === 0) {\n                ElMessage.success('密码修改成功');\n                // 清空表单\n                profileForm.value.oldPassword = '';\n                profileForm.value.newPassword = '';\n                profileForm.value.confirmPassword = '';\n              } else {\n                ElMessage.error(data.message || '修改密码失败');\n              }\n              _context2.next = 34;\n              break;\n            case 30:\n              _context2.prev = 30;\n              _context2.t0 = _context2[\"catch\"](15);\n              console.error('修改密码失败:', _context2.t0);\n              ElMessage.error('修改密码失败');\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[15, 30]]);\n      }));\n      return function handleSubmit() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      getProfile();\n    });\n    var __returned__ = {\n      profileForm: profileForm,\n      router: router,\n      settingsStore: settingsStore,\n      getProfile: getProfile,\n      handleSubmit: handleSubmit,\n      ref: ref,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useSettingsStore() {\n        return useSettingsStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","useRouter","useSettingsStore","profileForm","username","roleName","oldPassword","newPassword","confirmPassword","router","settingsStore","getProfile","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","userRes","userData","wrap","_callee$","_context","prev","next","localStorage","getItem","error","push","abrupt","fetch","concat","headers","sent","json","code","value","data","role","message","t0","console","stop","apply","arguments","handleSubmit","_ref3","_callee2","res","_callee2$","_context2","length","passwordMinLength","method","body","JSON","stringify","success"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/views/Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>个人信息</span>\n        </div>\n      </template>\n      \n      <el-form :model=\"profileForm\" label-width=\"100px\">\n        <el-form-item label=\"用户名\">\n          <el-input v-model=\"profileForm.username\" disabled />\n        </el-form-item>\n        \n        <el-form-item label=\"角色类型\">\n          <el-input v-model=\"profileForm.roleName\" disabled />\n        </el-form-item>\n        \n        <el-form-item label=\"原密码\">\n          <el-input v-model=\"profileForm.oldPassword\" type=\"password\" placeholder=\"请输入原密码\" />\n        </el-form-item>\n        \n        <el-form-item label=\"新密码\">\n          <el-input v-model=\"profileForm.newPassword\" type=\"password\" placeholder=\"请输入新密码\" />\n        </el-form-item>\n        \n        <el-form-item label=\"确认新密码\">\n          <el-input v-model=\"profileForm.confirmPassword\" type=\"password\" placeholder=\"请再次输入新密码\" />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSubmit\">保存修改</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { useRouter } from 'vue-router'\nimport { useSettingsStore } from '../stores/settings'\n\nconst profileForm = ref({\n  username: '',\n  roleName: '',\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\n\nconst router = useRouter()\nconst settingsStore = useSettingsStore()\n\n// 获取个人信息\nconst getProfile = async () => {\n  try {\n    const userId = localStorage.getItem('userId')\n    if (!userId) {\n      ElMessage.error('请先登录')\n      router.push('/login')\n      return\n    }\n\n    // 获取用户基本信息和角色信息\n    const userRes = await fetch(`http://localhost:8080/api/users/${userId}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const userData = await userRes.json()\n    if (userData.code === 0) {\n      profileForm.value.username = userData.data.username\n      profileForm.value.roleName = userData.data.role || '未分配角色'\n    } else {\n      ElMessage.error(userData.message || '获取用户信息失败')\n    }\n  } catch (error) {\n    console.error('获取个人信息失败:', error)\n    ElMessage.error('获取个人信息失败')\n  }\n}\n\n// 提交修改\nconst handleSubmit = async () => {\n  // 表单验证\n  if (!profileForm.value.oldPassword) {\n    ElMessage.error('请输入原密码')\n    return\n  }\n  if (!profileForm.value.newPassword) {\n    ElMessage.error('请输入新密码')\n    return\n  }\n  if (!profileForm.value.confirmPassword) {\n    ElMessage.error('请确认新密码')\n    return\n  }\n  \n  // 验证新密码长度\n  if (profileForm.value.newPassword.length < settingsStore.passwordMinLength) {\n    ElMessage.error(`新密码长度不能小于${settingsStore.passwordMinLength}位`)\n    return\n  }\n  \n  // 验证新密码\n  if (profileForm.value.newPassword !== profileForm.value.confirmPassword) {\n    ElMessage.error('两次输入的新密码不一致')\n    return\n  }\n\n  try {\n    const userId = localStorage.getItem('userId')\n    if (!userId) {\n      ElMessage.error('请先登录')\n      router.push('/login')\n      return\n    }\n\n    const res = await fetch(`http://localhost:8080/api/users/${userId}/password`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        oldPassword: profileForm.value.oldPassword,\n        newPassword: profileForm.value.newPassword\n      })\n    })\n    \n    const data = await res.json()\n    if (data.code === 0) {\n      ElMessage.success('密码修改成功')\n      // 清空表单\n      profileForm.value.oldPassword = ''\n      profileForm.value.newPassword = ''\n      profileForm.value.confirmPassword = ''\n    } else {\n      ElMessage.error(data.message || '修改密码失败')\n    }\n  } catch (error) {\n    console.error('修改密码失败:', error)\n    ElMessage.error('修改密码失败')\n  }\n}\n\nonMounted(() => {\n  getProfile()\n})\n</script>\n\n<style scoped>\n.profile {\n  padding: 20px;\n}\n\n.box-card {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}