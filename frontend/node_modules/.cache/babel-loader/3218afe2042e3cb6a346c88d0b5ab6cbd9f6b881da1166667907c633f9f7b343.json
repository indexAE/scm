{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { usePermissionStore } from '../stores/permission';\n\n// 获取权限store\n\nexport default {\n  __name: 'RoleManage',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var permissionStore = usePermissionStore();\n\n    // 角色列表数据\n    var roles = ref([]);\n    var total = ref(0);\n    var currentPage = ref(1);\n    var pageSize = ref(10);\n    var selectedRoles = ref([]);\n\n    // 搜索表单数据\n    var searchForm = ref({\n      roleName: '',\n      roleCode: '',\n      status: ''\n    });\n\n    // 对话框相关数据\n    var dialogVisible = ref(false);\n    var dialogTitle = ref('添加角色');\n    var roleFormRef = ref(null);\n    var roleForm = ref({\n      id: null,\n      roleName: '',\n      roleCode: '',\n      description: '',\n      status: true\n    });\n\n    // 表单验证规则\n    var rules = {\n      roleName: [{\n        required: true,\n        message: '请输入角色名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      roleCode: [{\n        required: true,\n        message: '请输入角色编码',\n        trigger: 'blur'\n      }, {\n        pattern: /^[A-Z_]+$/,\n        message: '角色编码只能包含大写字母和下划线',\n        trigger: 'blur'\n      }],\n      description: [{\n        max: 200,\n        message: '描述不能超过200个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 权限分配相关数据\n    var permissionDialogVisible = ref(false);\n    var currentRole = ref({});\n    var selectedPermissions = ref([]);\n    var permissionTree = ref(null);\n\n    // 权限树配置\n    var defaultProps = {\n      children: 'children',\n      label: 'permissionName'\n    };\n\n    // 构建权限树数据\n    var permissionTreeData = computed(function () {\n      return buildPermissionTree(permissionStore.permissions);\n    });\n\n    // 构建树形结构\n    var buildPermissionTree = function buildPermissionTree(permissions) {\n      var tree = [];\n      var map = {};\n\n      // 首先创建所有节点的映射\n      permissions.forEach(function (permission) {\n        map[permission.id] = _objectSpread(_objectSpread({}, permission), {}, {\n          children: []\n        });\n      });\n\n      // 构建树结构\n      permissions.forEach(function (permission) {\n        var node = map[permission.id];\n        if (permission.parentId) {\n          var parent = map[permission.parentId];\n          if (parent) {\n            parent.children.push(node);\n          } else {\n            tree.push(node);\n          }\n        } else {\n          tree.push(node);\n        }\n      });\n      return tree;\n    };\n\n    // 获取角色列表\n    var getRoles = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, res, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              // 构建查询参数\n              params = new URLSearchParams({\n                page: currentPage.value,\n                size: pageSize.value\n              });\n              if (searchForm.value.roleName) {\n                params.append('roleName', searchForm.value.roleName);\n              }\n              if (searchForm.value.roleCode) {\n                params.append('roleCode', searchForm.value.roleCode);\n              }\n              if (searchForm.value.status !== '') {\n                params.append('status', searchForm.value.status);\n              }\n              _context.next = 7;\n              return fetch(\"http://localhost:8000/api/roles?\".concat(params.toString()), {\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include'\n              });\n            case 7:\n              res = _context.sent;\n              _context.next = 10;\n              return res.json();\n            case 10:\n              data = _context.sent;\n              if (data.code === 0) {\n                roles.value = data.data.list || [];\n                total.value = data.data.total || 0;\n              } else {\n                ElMessage.error(data.message || '获取角色列表失败');\n              }\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取角色列表失败:', _context.t0);\n              ElMessage.error('网络错误,请稍后重试');\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 14]]);\n      }));\n      return function getRoles() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 搜索\n    var handleSearch = function handleSearch() {\n      currentPage.value = 1;\n      getRoles();\n    };\n\n    // 重置搜索\n    var handleReset = function handleReset() {\n      searchForm.value = {\n        roleName: '',\n        roleCode: '',\n        status: ''\n      };\n      currentPage.value = 1;\n      getRoles();\n    };\n\n    // 处理多选\n    var handleSelectionChange = function handleSelectionChange(selection) {\n      selectedRoles.value = selection;\n    };\n\n    // 批量删除\n    var handleBatchDelete = function handleBatchDelete() {\n      if (!selectedRoles.value.length) {\n        ElMessage.warning('请选择要删除的角色');\n        return;\n      }\n      ElMessageBox.confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u9009\\u4E2D\\u7684 \".concat(selectedRoles.value.length, \" \\u4E2A\\u89D2\\u8272\\u5417\\uFF1F\"), '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var deletePromises, results, hasError;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              deletePromises = selectedRoles.value.map(function (role) {\n                return fetch(\"http://localhost:8000/api/roles/\".concat(role.id), {\n                  method: 'DELETE',\n                  credentials: 'include'\n                }).then(function (res) {\n                  return res.json();\n                });\n              });\n              _context2.next = 4;\n              return Promise.all(deletePromises);\n            case 4:\n              results = _context2.sent;\n              hasError = results.some(function (result) {\n                return result.code !== 0;\n              });\n              if (hasError) {\n                ElMessage.warning('部分角色删除失败');\n              } else {\n                ElMessage.success('删除成功');\n              }\n              getRoles();\n              _context2.next = 14;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('批量删除失败:', _context2.t0);\n              ElMessage.error('网络错误,请稍后重试');\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 10]]);\n      })));\n    };\n\n    // 添加角色\n    var handleAdd = function handleAdd() {\n      roleForm.value = {\n        id: null,\n        roleName: '',\n        roleCode: '',\n        description: '',\n        status: true\n      };\n      dialogTitle.value = '添加角色';\n      dialogVisible.value = true;\n    };\n\n    // 编辑角色\n    var handleEdit = function handleEdit(row) {\n      roleForm.value = _objectSpread({}, row);\n      dialogTitle.value = '编辑角色';\n      dialogVisible.value = true;\n    };\n\n    // 删除角色\n    var handleDelete = function handleDelete(row) {\n      ElMessageBox.confirm('确定要删除该角色吗？', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(\"http://localhost:8000/api/roles/\".concat(row.id), {\n                method: 'DELETE',\n                credentials: 'include'\n              });\n            case 3:\n              res = _context3.sent;\n              _context3.next = 6;\n              return res.json();\n            case 6:\n              data = _context3.sent;\n              if (data.code === 0) {\n                ElMessage.success('删除成功');\n                getRoles();\n              } else {\n                ElMessage.error(data.message || '删除失败');\n              }\n              _context3.next = 14;\n              break;\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('删除角色失败:', _context3.t0);\n              ElMessage.error('网络错误,请稍后重试');\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 10]]);\n      })));\n    };\n\n    // 打开权限分配对话框\n    var handleAssignPermissions = function handleAssignPermissions(role) {\n      currentRole.value = role;\n      // 获取角色当前的权限\n      selectedPermissions.value = permissionStore.rolePermissions[role.roleCode] || [];\n      permissionDialogVisible.value = true;\n    };\n\n    // 处理权限变更\n    var handlePermissionChange = function handlePermissionChange() {\n      var checkedNodes = permissionTree.value.getCheckedNodes();\n      selectedPermissions.value = checkedNodes.map(function (node) {\n        return node.permissionCode;\n      });\n    };\n\n    // 保存权限配置\n    var handleSavePermissions = function handleSavePermissions() {\n      permissionStore.updateRolePermissions(currentRole.value.roleCode, selectedPermissions.value);\n      ElMessage.success('权限配置已保存');\n      permissionDialogVisible.value = false;\n    };\n\n    // 提交表单\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var url, method, res, data;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (roleFormRef.value) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.prev = 2;\n              _context4.next = 5;\n              return roleFormRef.value.validate();\n            case 5:\n              url = roleForm.value.id ? \"http://localhost:8000/api/roles/\".concat(roleForm.value.id) : 'http://localhost:8000/api/roles';\n              method = roleForm.value.id ? 'PUT' : 'POST';\n              _context4.next = 9;\n              return fetch(url, {\n                method: method,\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify(roleForm.value)\n              });\n            case 9:\n              res = _context4.sent;\n              _context4.next = 12;\n              return res.json();\n            case 12:\n              data = _context4.sent;\n              if (data.code === 0) {\n                ElMessage.success(roleForm.value.id ? '更新成功' : '添加成功');\n                dialogVisible.value = false;\n                getRoles();\n              } else {\n                ElMessage.error(data.message || (roleForm.value.id ? '更新失败' : '添加失败'));\n              }\n              _context4.next = 19;\n              break;\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](2);\n              if (_context4.t0.name === 'ValidationError') {\n                ElMessage.error('请检查表单填写是否正确');\n              } else {\n                console.error('提交表单失败:', _context4.t0);\n                ElMessage.error('网络错误,请稍后重试');\n              }\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2, 16]]);\n      }));\n      return function handleSubmit() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    // 分页大小改变\n    var handleSizeChange = function handleSizeChange(val) {\n      pageSize.value = val;\n      getRoles();\n    };\n\n    // 当前页改变\n    var handleCurrentChange = function handleCurrentChange(val) {\n      currentPage.value = val;\n      getRoles();\n    };\n    onMounted(function () {\n      getRoles();\n    });\n    var __returned__ = {\n      permissionStore: permissionStore,\n      roles: roles,\n      total: total,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      selectedRoles: selectedRoles,\n      searchForm: searchForm,\n      dialogVisible: dialogVisible,\n      dialogTitle: dialogTitle,\n      roleFormRef: roleFormRef,\n      roleForm: roleForm,\n      rules: rules,\n      permissionDialogVisible: permissionDialogVisible,\n      currentRole: currentRole,\n      selectedPermissions: selectedPermissions,\n      permissionTree: permissionTree,\n      defaultProps: defaultProps,\n      permissionTreeData: permissionTreeData,\n      buildPermissionTree: buildPermissionTree,\n      getRoles: getRoles,\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      handleSelectionChange: handleSelectionChange,\n      handleBatchDelete: handleBatchDelete,\n      handleAdd: handleAdd,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete,\n      handleAssignPermissions: handleAssignPermissions,\n      handlePermissionChange: handlePermissionChange,\n      handleSavePermissions: handleSavePermissions,\n      handleSubmit: handleSubmit,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      ref: ref,\n      onMounted: onMounted,\n      computed: computed,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get usePermissionStore() {\n        return usePermissionStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","ElMessage","ElMessageBox","usePermissionStore","permissionStore","roles","total","currentPage","pageSize","selectedRoles","searchForm","roleName","roleCode","status","dialogVisible","dialogTitle","roleFormRef","roleForm","id","description","rules","required","message","trigger","min","max","pattern","permissionDialogVisible","currentRole","selectedPermissions","permissionTree","defaultProps","children","label","permissionTreeData","buildPermissionTree","permissions","tree","map","forEach","permission","_objectSpread","node","parentId","parent","push","getRoles","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","res","data","wrap","_callee$","_context","prev","next","URLSearchParams","page","value","size","append","fetch","concat","toString","headers","credentials","sent","json","code","list","error","t0","console","stop","apply","arguments","handleSearch","handleReset","handleSelectionChange","selection","handleBatchDelete","length","warning","confirm","confirmButtonText","cancelButtonText","type","then","_callee2","deletePromises","results","hasError","_callee2$","_context2","role","method","Promise","all","some","result","success","handleAdd","handleEdit","row","handleDelete","_callee3","_callee3$","_context3","handleAssignPermissions","rolePermissions","handlePermissionChange","checkedNodes","getCheckedNodes","permissionCode","handleSavePermissions","updateRolePermissions","handleSubmit","_ref5","_callee4","url","_callee4$","_context4","abrupt","validate","body","JSON","stringify","name","handleSizeChange","val","handleCurrentChange"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/views/RoleManage.vue"],"sourcesContent":["<template>\r\n  <div class=\"role-manage\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>角色管理</span>\r\n          <div class=\"header-buttons\">\r\n            <el-button type=\"danger\" :disabled=\"!selectedRoles.length\" @click=\"handleBatchDelete\">批量删除</el-button>\r\n            <el-button type=\"primary\" @click=\"handleAdd\">添加角色</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 搜索表单 -->\r\n      <el-form :inline=\"true\" :model=\"searchForm\" class=\"search-form\">\r\n        <el-form-item label=\"角色名称\">\r\n          <el-input v-model=\"searchForm.roleName\" placeholder=\"请输入角色名称\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色编码\">\r\n          <el-input v-model=\"searchForm.roleCode\" placeholder=\"请输入角色编码\" clearable />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"searchForm.status\" placeholder=\"请选择状态\" clearable>\r\n            <el-option label=\"启用\" :value=\"true\" />\r\n            <el-option label=\"禁用\" :value=\"false\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\r\n          <el-button @click=\"handleReset\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <!-- 角色列表 -->\r\n      <el-table \r\n        :data=\"roles\" \r\n        style=\"width: 100%\"\r\n        @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" />\r\n        <el-table-column prop=\"roleName\" label=\"角色名称\" />\r\n        <el-table-column prop=\"roleCode\" label=\"角色编码\" />\r\n        <el-table-column prop=\"description\" label=\"描述\" />\r\n        <el-table-column prop=\"status\" label=\"状态\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.status ? 'success' : 'danger'\">\r\n              {{ scope.row.status ? '启用' : '禁用' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"primary\"\r\n              @click=\"handleAssignPermissions(scope.row)\"\r\n            >分配权限</el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"handleDelete(scope.row)\"\r\n            >删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-model:current-page=\"currentPage\"\r\n          v-model:page-size=\"pageSize\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑角色对话框 -->\r\n    <el-dialog \r\n      :title=\"dialogTitle\" \r\n      v-model=\"dialogVisible\" \r\n      width=\"500px\">\r\n      <el-form \r\n        :model=\"roleForm\"\r\n        :rules=\"rules\" \r\n        ref=\"roleFormRef\"\r\n        label-width=\"100px\">\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"roleForm.roleName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色编码\" prop=\"roleCode\">\r\n          <el-input v-model=\"roleForm.roleCode\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"roleForm.description\" \r\n            type=\"textarea\" \r\n            :rows=\"2\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-switch v-model=\"roleForm.status\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n\r\n    <!-- 权限分配对话框 -->\r\n    <el-dialog\r\n      v-model=\"permissionDialogVisible\"\r\n      :title=\"'分配权限 - ' + currentRole.roleName\"\r\n      width=\"50%\"\r\n    >\r\n      <el-tree\r\n        ref=\"permissionTree\"\r\n        :data=\"permissionTreeData\"\r\n        :props=\"defaultProps\"\r\n        show-checkbox\r\n        node-key=\"id\"\r\n        :default-checked-keys=\"selectedPermissions\"\r\n        @check=\"handlePermissionChange\"\r\n      >\r\n        <template #default=\"{ data }\">\r\n          <span class=\"custom-tree-node\">\r\n            <span>{{ data.permissionName }}</span>\r\n            <span class=\"permission-code\">{{ data.permissionCode }}</span>\r\n          </span>\r\n        </template>\r\n      </el-tree>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"permissionDialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSavePermissions\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { usePermissionStore } from '../stores/permission'\r\n\r\n// 获取权限store\r\nconst permissionStore = usePermissionStore()\r\n\r\n// 角色列表数据\r\nconst roles = ref([])\r\nconst total = ref(0)\r\nconst currentPage = ref(1)\r\nconst pageSize = ref(10)\r\nconst selectedRoles = ref([])\r\n\r\n// 搜索表单数据\r\nconst searchForm = ref({\r\n  roleName: '',\r\n  roleCode: '',\r\n  status: ''\r\n})\r\n\r\n// 对话框相关数据\r\nconst dialogVisible = ref(false)\r\nconst dialogTitle = ref('添加角色')\r\nconst roleFormRef = ref(null)\r\nconst roleForm = ref({\r\n  id: null,\r\n  roleName: '',\r\n  roleCode: '',\r\n  description: '',\r\n  status: true\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  roleName: [\r\n    { required: true, message: '请输入角色名称', trigger: 'blur' },\r\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\r\n  ],\r\n  roleCode: [\r\n    { required: true, message: '请输入角色编码', trigger: 'blur' },\r\n    { pattern: /^[A-Z_]+$/, message: '角色编码只能包含大写字母和下划线', trigger: 'blur' }\r\n  ],\r\n  description: [\r\n    { max: 200, message: '描述不能超过200个字符', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 权限分配相关数据\r\nconst permissionDialogVisible = ref(false)\r\nconst currentRole = ref({})\r\nconst selectedPermissions = ref([])\r\nconst permissionTree = ref(null)\r\n\r\n// 权限树配置\r\nconst defaultProps = {\r\n  children: 'children',\r\n  label: 'permissionName'\r\n}\r\n\r\n// 构建权限树数据\r\nconst permissionTreeData = computed(() => {\r\n  return buildPermissionTree(permissionStore.permissions)\r\n})\r\n\r\n// 构建树形结构\r\nconst buildPermissionTree = (permissions) => {\r\n  const tree = []\r\n  const map = {}\r\n  \r\n  // 首先创建所有节点的映射\r\n  permissions.forEach(permission => {\r\n    map[permission.id] = {\r\n      ...permission,\r\n      children: []\r\n    }\r\n  })\r\n  \r\n  // 构建树结构\r\n  permissions.forEach(permission => {\r\n    const node = map[permission.id]\r\n    if (permission.parentId) {\r\n      const parent = map[permission.parentId]\r\n      if (parent) {\r\n        parent.children.push(node)\r\n      } else {\r\n        tree.push(node)\r\n      }\r\n    } else {\r\n      tree.push(node)\r\n    }\r\n  })\r\n  \r\n  return tree\r\n}\r\n\r\n// 获取角色列表\r\nconst getRoles = async () => {\r\n  try {\r\n    // 构建查询参数\r\n    const params = new URLSearchParams({\r\n      page: currentPage.value,\r\n      size: pageSize.value\r\n    })\r\n    \r\n    if (searchForm.value.roleName) {\r\n      params.append('roleName', searchForm.value.roleName)\r\n    }\r\n    if (searchForm.value.roleCode) {\r\n      params.append('roleCode', searchForm.value.roleCode)\r\n    }\r\n    if (searchForm.value.status !== '') {\r\n      params.append('status', searchForm.value.status)\r\n    }\r\n    \r\n    const res = await fetch(`http://localhost:8000/api/roles?${params.toString()}`, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include'\r\n    })\r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      roles.value = data.data.list || []\r\n      total.value = data.data.total || 0\r\n    } else {\r\n      ElMessage.error(data.message || '获取角色列表失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取角色列表失败:', error)\r\n    ElMessage.error('网络错误,请稍后重试')\r\n  }\r\n}\r\n\r\n// 搜索\r\nconst handleSearch = () => {\r\n  currentPage.value = 1\r\n  getRoles()\r\n}\r\n\r\n// 重置搜索\r\nconst handleReset = () => {\r\n  searchForm.value = {\r\n    roleName: '',\r\n    roleCode: '',\r\n    status: ''\r\n  }\r\n  currentPage.value = 1\r\n  getRoles()\r\n}\r\n\r\n// 处理多选\r\nconst handleSelectionChange = (selection) => {\r\n  selectedRoles.value = selection\r\n}\r\n\r\n// 批量删除\r\nconst handleBatchDelete = () => {\r\n  if (!selectedRoles.value.length) {\r\n    ElMessage.warning('请选择要删除的角色')\r\n    return\r\n  }\r\n  \r\n  ElMessageBox.confirm(\r\n    `确定要删除选中的 ${selectedRoles.value.length} 个角色吗？`,\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      const deletePromises = selectedRoles.value.map(role => \r\n        fetch(`http://localhost:8000/api/roles/${role.id}`, {\r\n          method: 'DELETE',\r\n          credentials: 'include'\r\n        }).then(res => res.json())\r\n      )\r\n      \r\n      const results = await Promise.all(deletePromises)\r\n      const hasError = results.some(result => result.code !== 0)\r\n      \r\n      if (hasError) {\r\n        ElMessage.warning('部分角色删除失败')\r\n      } else {\r\n        ElMessage.success('删除成功')\r\n      }\r\n      getRoles()\r\n    } catch (error) {\r\n      console.error('批量删除失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  })\r\n}\r\n\r\n// 添加角色\r\nconst handleAdd = () => {\r\n  roleForm.value = {\r\n    id: null,\r\n    roleName: '',\r\n    roleCode: '',\r\n    description: '',\r\n    status: true\r\n  }\r\n  dialogTitle.value = '添加角色'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑角色\r\nconst handleEdit = (row) => {\r\n  roleForm.value = { ...row }\r\n  dialogTitle.value = '编辑角色'\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 删除角色\r\nconst handleDelete = (row) => {\r\n  ElMessageBox.confirm(\r\n    '确定要删除该角色吗？',\r\n    '警告',\r\n    {\r\n      confirmButtonText: '确定',\r\n      cancelButtonText: '取消',\r\n      type: 'warning',\r\n    }\r\n  ).then(async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:8000/api/roles/${row.id}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include'\r\n      })\r\n      const data = await res.json()\r\n      if (data.code === 0) {\r\n        ElMessage.success('删除成功')\r\n        getRoles()\r\n      } else {\r\n        ElMessage.error(data.message || '删除失败')\r\n      }\r\n    } catch (error) {\r\n      console.error('删除角色失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  })\r\n}\r\n\r\n// 打开权限分配对话框\r\nconst handleAssignPermissions = (role) => {\r\n  currentRole.value = role\r\n  // 获取角色当前的权限\r\n  selectedPermissions.value = permissionStore.rolePermissions[role.roleCode] || []\r\n  permissionDialogVisible.value = true\r\n}\r\n\r\n// 处理权限变更\r\nconst handlePermissionChange = () => {\r\n  const checkedNodes = permissionTree.value.getCheckedNodes()\r\n  selectedPermissions.value = checkedNodes.map(node => node.permissionCode)\r\n}\r\n\r\n// 保存权限配置\r\nconst handleSavePermissions = () => {\r\n  permissionStore.updateRolePermissions(currentRole.value.roleCode, selectedPermissions.value)\r\n  ElMessage.success('权限配置已保存')\r\n  permissionDialogVisible.value = false\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!roleFormRef.value) return\r\n  \r\n  try {\r\n    await roleFormRef.value.validate()\r\n    \r\n    const url = roleForm.value.id \r\n      ? `http://localhost:8000/api/roles/${roleForm.value.id}`\r\n      : 'http://localhost:8000/api/roles'\r\n    const method = roleForm.value.id ? 'PUT' : 'POST'\r\n    \r\n    const res = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify(roleForm.value)\r\n    })\r\n    \r\n    const data = await res.json()\r\n    if (data.code === 0) {\r\n      ElMessage.success(roleForm.value.id ? '更新成功' : '添加成功')\r\n      dialogVisible.value = false\r\n      getRoles()\r\n    } else {\r\n      ElMessage.error(data.message || (roleForm.value.id ? '更新失败' : '添加失败'))\r\n    }\r\n  } catch (error) {\r\n    if (error.name === 'ValidationError') {\r\n      ElMessage.error('请检查表单填写是否正确')\r\n    } else {\r\n      console.error('提交表单失败:', error)\r\n      ElMessage.error('网络错误,请稍后重试')\r\n    }\r\n  }\r\n}\r\n\r\n// 分页大小改变\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  getRoles()\r\n}\r\n\r\n// 当前页改变\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  getRoles()\r\n}\r\n\r\nonMounted(() => {\r\n  getRoles()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.role-manage {\r\n  padding: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.header-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.search-form {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}