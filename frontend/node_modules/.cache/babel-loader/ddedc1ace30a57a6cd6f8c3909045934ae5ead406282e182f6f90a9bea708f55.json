{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u65E5\\u5FD7/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\n\n// 分类数据\n\nexport default {\n  __name: 'index',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var categoryData = ref([]);\n    var dialogVisible = ref(false);\n    var isEdit = ref(false);\n    var formRef = ref(null);\n\n    // 表单数据\n    var form = reactive({\n      parentId: null,\n      name: '',\n      code: '',\n      sort: 0\n    });\n\n    // 表单验证规则\n    var rules = {\n      name: [{\n        required: true,\n        message: '请输入分类名称',\n        trigger: 'blur'\n      }],\n      code: [{\n        required: true,\n        message: '请输入分类编码',\n        trigger: 'blur'\n      }]\n    };\n\n    // 获取分类数据\n    var getCategoryData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/api/product/categories/tree');\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              result = _context.sent;\n              if (result.code === 0) {\n                categoryData.value = result.data;\n              } else {\n                ElMessage.error(result.message || '获取分类数据失败');\n              }\n              _context.next = 14;\n              break;\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取分类数据失败:', _context.t0);\n              ElMessage.error('获取分类数据失败');\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 10]]);\n      }));\n      return function getCategoryData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 创建默认分类数据\n    var createDefaultCategories = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var defaultCategories, _i, _defaultCategories, category, parentResponse, parentResult, _iterator, _step, child, childResponse, childResult;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              defaultCategories = [{\n                name: '电子产品',\n                code: 'ELECTRONICS',\n                sort: 1,\n                status: 'enabled',\n                children: [{\n                  name: '手机',\n                  code: 'PHONE',\n                  sort: 1,\n                  status: 'enabled'\n                }, {\n                  name: '电脑',\n                  code: 'COMPUTER',\n                  sort: 2,\n                  status: 'enabled'\n                }]\n              }, {\n                name: '服装',\n                code: 'CLOTHING',\n                sort: 2,\n                status: 'enabled',\n                children: [{\n                  name: '男装',\n                  code: 'MENS',\n                  sort: 1,\n                  status: 'enabled'\n                }, {\n                  name: '女装',\n                  code: 'WOMENS',\n                  sort: 2,\n                  status: 'enabled'\n                }]\n              }];\n              _context2.prev = 1;\n              _i = 0, _defaultCategories = defaultCategories;\n            case 3:\n              if (!(_i < _defaultCategories.length)) {\n                _context2.next = 37;\n                break;\n              }\n              category = _defaultCategories[_i];\n              _context2.next = 7;\n              return fetch('/api/product/categories', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  name: category.name,\n                  code: category.code,\n                  sort: category.sort,\n                  status: category.status\n                })\n              });\n            case 7:\n              parentResponse = _context2.sent;\n              _context2.next = 10;\n              return parentResponse.json();\n            case 10:\n              parentResult = _context2.sent;\n              if (!(parentResult.code === 0 && parentResult.data)) {\n                _context2.next = 34;\n                break;\n              }\n              // 创建子分类\n              _iterator = _createForOfIteratorHelper(category.children);\n              _context2.prev = 13;\n              _iterator.s();\n            case 15:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 26;\n                break;\n              }\n              child = _step.value;\n              _context2.next = 19;\n              return fetch('/api/product/categories', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  parentId: parentResult.data.id,\n                  name: child.name,\n                  code: child.code,\n                  sort: child.sort,\n                  status: child.status\n                })\n              });\n            case 19:\n              childResponse = _context2.sent;\n              _context2.next = 22;\n              return childResponse.json();\n            case 22:\n              childResult = _context2.sent;\n              if (childResult.code !== 0) {\n                console.error('创建子分类失败:', childResult.message);\n              }\n            case 24:\n              _context2.next = 15;\n              break;\n            case 26:\n              _context2.next = 31;\n              break;\n            case 28:\n              _context2.prev = 28;\n              _context2.t0 = _context2[\"catch\"](13);\n              _iterator.e(_context2.t0);\n            case 31:\n              _context2.prev = 31;\n              _iterator.f();\n              return _context2.finish(31);\n            case 34:\n              _i++;\n              _context2.next = 3;\n              break;\n            case 37:\n              ElMessage.success('测试数据添加成功');\n              _context2.next = 40;\n              return getCategoryData();\n            case 40:\n              _context2.next = 46;\n              break;\n            case 42:\n              _context2.prev = 42;\n              _context2.t1 = _context2[\"catch\"](1);\n              console.error('添加测试数据失败:', _context2.t1);\n              ElMessage.error('添加测试数据失败');\n            case 46:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 42], [13, 28, 31, 34]]);\n      }));\n      return function createDefaultCategories() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    // 新增分类\n    var handleAdd = function handleAdd() {\n      isEdit.value = false;\n      form.parentId = null;\n      form.name = '';\n      form.code = '';\n      form.sort = 0;\n      dialogVisible.value = true;\n    };\n\n    // 编辑分类\n    var handleEdit = function handleEdit(row) {\n      isEdit.value = true;\n      form.id = row.id;\n      form.parentId = row.parentId;\n      form.name = row.name;\n      form.code = row.code;\n      form.sort = row.sort;\n      dialogVisible.value = true;\n    };\n\n    // 切换状态\n    var handleToggleStatus = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(row) {\n        var action, response, result;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              action = row.status === 'enabled' ? '禁用' : '启用';\n              _context3.prev = 1;\n              _context3.next = 4;\n              return ElMessageBox.confirm(\"\\u786E\\u8BA4\".concat(action, \"\\u8BE5\\u5206\\u7C7B\\u5417\\uFF1F\"), '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 4:\n              _context3.next = 6;\n              return fetch(\"/api/product/categories/\".concat(row.id, \"/status\"), {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  status: row.status === 'enabled' ? 'disabled' : 'enabled'\n                })\n              });\n            case 6:\n              response = _context3.sent;\n              _context3.next = 9;\n              return response.json();\n            case 9:\n              result = _context3.sent;\n              if (!(result.code === 0)) {\n                _context3.next = 16;\n                break;\n              }\n              ElMessage.success('状态更新成功');\n              _context3.next = 14;\n              return getCategoryData();\n            case 14:\n              _context3.next = 17;\n              break;\n            case 16:\n              ElMessage.error(result.message || '状态更新失败');\n            case 17:\n              _context3.next = 22;\n              break;\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](1);\n              if (_context3.t0 !== 'cancel') {\n                console.error('更新状态失败:', _context3.t0);\n                ElMessage.error('更新状态失败');\n              }\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[1, 19]]);\n      }));\n      return function handleToggleStatus(_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    // 提交表单\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (formRef.value) {\n                _context5.next = 2;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 2:\n              _context5.next = 4;\n              return formRef.value.validate(/*#__PURE__*/function () {\n                var _ref6 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(valid) {\n                  var url, method, response, result;\n                  return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                    while (1) switch (_context4.prev = _context4.next) {\n                      case 0:\n                        if (!valid) {\n                          _context4.next = 24;\n                          break;\n                        }\n                        _context4.prev = 1;\n                        url = isEdit.value ? \"/api/product/categories/\".concat(form.id) : '/api/product/categories';\n                        method = isEdit.value ? 'PUT' : 'POST';\n                        _context4.next = 6;\n                        return fetch(url, {\n                          method: method,\n                          headers: {\n                            'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify(form)\n                        });\n                      case 6:\n                        response = _context4.sent;\n                        _context4.next = 9;\n                        return response.json();\n                      case 9:\n                        result = _context4.sent;\n                        if (!(result.code === 0)) {\n                          _context4.next = 17;\n                          break;\n                        }\n                        ElMessage.success(isEdit.value ? '更新成功' : '创建成功');\n                        dialogVisible.value = false;\n                        _context4.next = 15;\n                        return getCategoryData();\n                      case 15:\n                        _context4.next = 18;\n                        break;\n                      case 17:\n                        ElMessage.error(result.message || (isEdit.value ? '更新失败' : '创建失败'));\n                      case 18:\n                        _context4.next = 24;\n                        break;\n                      case 20:\n                        _context4.prev = 20;\n                        _context4.t0 = _context4[\"catch\"](1);\n                        console.error(isEdit.value ? '更新分类失败:' : '创建分类失败:', _context4.t0);\n                        ElMessage.error(isEdit.value ? '更新失败' : '创建失败');\n                      case 24:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }, _callee4, null, [[1, 20]]);\n                }));\n                return function (_x2) {\n                  return _ref6.apply(this, arguments);\n                };\n              }());\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      return function handleSubmit() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      getCategoryData();\n    });\n    var __returned__ = {\n      categoryData: categoryData,\n      dialogVisible: dialogVisible,\n      isEdit: isEdit,\n      formRef: formRef,\n      form: form,\n      rules: rules,\n      getCategoryData: getCategoryData,\n      createDefaultCategories: createDefaultCategories,\n      handleAdd: handleAdd,\n      handleEdit: handleEdit,\n      handleToggleStatus: handleToggleStatus,\n      handleSubmit: handleSubmit,\n      ref: ref,\n      reactive: reactive,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","categoryData","dialogVisible","isEdit","formRef","form","parentId","name","code","sort","rules","required","message","trigger","getCategoryData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","sent","json","value","data","error","t0","console","stop","apply","arguments","createDefaultCategories","_ref3","_callee2","defaultCategories","_i","_defaultCategories","category","parentResponse","parentResult","_iterator","_step","child","childResponse","childResult","_callee2$","_context2","status","children","length","method","headers","body","JSON","stringify","_createForOfIteratorHelper","s","n","done","id","e","f","finish","success","t1","handleAdd","handleEdit","row","handleToggleStatus","_ref4","_callee3","action","_callee3$","_context3","confirm","concat","confirmButtonText","cancelButtonText","type","_x","handleSubmit","_ref5","_callee5","_callee5$","_context5","abrupt","validate","_ref6","_callee4","valid","url","_callee4$","_context4","_x2"],"sources":["C:/Users/indexae/Desktop/scm日志/scm/frontend/src/views/product/category/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"category-manage\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>商品分类管理</span>\r\n          <div>\r\n            <el-button type=\"primary\" @click=\"handleAdd\">新增分类</el-button>\r\n            <el-button type=\"warning\" @click=\"createDefaultCategories\">添加测试数据</el-button>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <!-- 分类树形表格 -->\r\n      <el-table\r\n        :data=\"categoryData\"\r\n        row-key=\"id\"\r\n        border\r\n        :tree-props=\"{ children: 'children' }\"\r\n      >\r\n        <el-table-column prop=\"name\" label=\"分类名称\" />\r\n        <el-table-column prop=\"code\" label=\"分类编码\" />\r\n        <el-table-column prop=\"sort\" label=\"排序\" width=\"100\" />\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\r\n          <template #default=\"scope\">\r\n            <el-tag :type=\"scope.row.status === 'enabled' ? 'success' : 'danger'\">\r\n              {{ scope.row.status === 'enabled' ? '启用' : '禁用' }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\">\r\n          <template #default=\"scope\">\r\n            <el-button link @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n            <el-button\r\n              :type=\"scope.row.status === 'enabled' ? 'danger' : 'success'\"\r\n              link\r\n              @click=\"handleToggleStatus(scope.row)\"\r\n            >\r\n              {{ scope.row.status === 'enabled' ? '禁用' : '启用' }}\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n\r\n    <!-- 分类表单对话框 -->\r\n    <el-dialog\r\n      :title=\"isEdit ? '编辑分类' : '新增分类'\"\r\n      v-model=\"dialogVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\r\n        <el-form-item label=\"上级分类\">\r\n          <el-cascader\r\n            v-model=\"form.parentId\"\r\n            :options=\"categoryData\"\r\n            :props=\"{\r\n              checkStrictly: true,\r\n              label: 'name',\r\n              value: 'id',\r\n              emitPath: false\r\n            }\"\r\n            clearable\r\n            placeholder=\"请选择上级分类\"\r\n          />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"请输入分类名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"分类编码\" prop=\"code\">\r\n          <el-input v-model=\"form.code\" placeholder=\"请输入分类编码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"排序\" prop=\"sort\">\r\n          <el-input-number v-model=\"form.sort\" :min=\"0\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\n// 分类数据\r\nconst categoryData = ref([])\r\nconst dialogVisible = ref(false)\r\nconst isEdit = ref(false)\r\nconst formRef = ref(null)\r\n\r\n// 表单数据\r\nconst form = reactive({\r\n  parentId: null,\r\n  name: '',\r\n  code: '',\r\n  sort: 0\r\n})\r\n\r\n// 表单验证规则\r\nconst rules = {\r\n  name: [\r\n    { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n  ],\r\n  code: [\r\n    { required: true, message: '请输入分类编码', trigger: 'blur' }\r\n  ]\r\n}\r\n\r\n// 获取分类数据\r\nconst getCategoryData = async () => {\r\n  try {\r\n    const response = await fetch('/api/product/categories/tree')\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      categoryData.value = result.data\r\n    } else {\r\n      ElMessage.error(result.message || '获取分类数据失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取分类数据失败:', error)\r\n    ElMessage.error('获取分类数据失败')\r\n  }\r\n}\r\n\r\n// 创建默认分类数据\r\nconst createDefaultCategories = async () => {\r\n  const defaultCategories = [\r\n    {\r\n      name: '电子产品',\r\n      code: 'ELECTRONICS',\r\n      sort: 1,\r\n      status: 'enabled',\r\n      children: [\r\n        {\r\n          name: '手机',\r\n          code: 'PHONE',\r\n          sort: 1,\r\n          status: 'enabled'\r\n        },\r\n        {\r\n          name: '电脑',\r\n          code: 'COMPUTER',\r\n          sort: 2,\r\n          status: 'enabled'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      name: '服装',\r\n      code: 'CLOTHING',\r\n      sort: 2,\r\n      status: 'enabled',\r\n      children: [\r\n        {\r\n          name: '男装',\r\n          code: 'MENS',\r\n          sort: 1,\r\n          status: 'enabled'\r\n        },\r\n        {\r\n          name: '女装',\r\n          code: 'WOMENS',\r\n          sort: 2,\r\n          status: 'enabled'\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n\r\n  try {\r\n    for (const category of defaultCategories) {\r\n      // 创建父分类\r\n      const parentResponse = await fetch('/api/product/categories', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          name: category.name,\r\n          code: category.code,\r\n          sort: category.sort,\r\n          status: category.status\r\n        })\r\n      })\r\n      const parentResult = await parentResponse.json()\r\n      \r\n      if (parentResult.code === 0 && parentResult.data) {\r\n        // 创建子分类\r\n        for (const child of category.children) {\r\n          const childResponse = await fetch('/api/product/categories', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              parentId: parentResult.data.id,\r\n              name: child.name,\r\n              code: child.code,\r\n              sort: child.sort,\r\n              status: child.status\r\n            })\r\n          })\r\n          const childResult = await childResponse.json()\r\n          if (childResult.code !== 0) {\r\n            console.error('创建子分类失败:', childResult.message)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    ElMessage.success('测试数据添加成功')\r\n    await getCategoryData() // 刷新分类数据\r\n  } catch (error) {\r\n    console.error('添加测试数据失败:', error)\r\n    ElMessage.error('添加测试数据失败')\r\n  }\r\n}\r\n\r\n// 新增分类\r\nconst handleAdd = () => {\r\n  isEdit.value = false\r\n  form.parentId = null\r\n  form.name = ''\r\n  form.code = ''\r\n  form.sort = 0\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 编辑分类\r\nconst handleEdit = (row) => {\r\n  isEdit.value = true\r\n  form.id = row.id\r\n  form.parentId = row.parentId\r\n  form.name = row.name\r\n  form.code = row.code\r\n  form.sort = row.sort\r\n  dialogVisible.value = true\r\n}\r\n\r\n// 切换状态\r\nconst handleToggleStatus = async (row) => {\r\n  const action = row.status === 'enabled' ? '禁用' : '启用'\r\n  try {\r\n    await ElMessageBox.confirm(\r\n      `确认${action}该分类吗？`,\r\n      '提示',\r\n      {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }\r\n    )\r\n    \r\n    const response = await fetch(`/api/product/categories/${row.id}/status`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        status: row.status === 'enabled' ? 'disabled' : 'enabled'\r\n      })\r\n    })\r\n    const result = await response.json()\r\n    if (result.code === 0) {\r\n      ElMessage.success('状态更新成功')\r\n      await getCategoryData()\r\n    } else {\r\n      ElMessage.error(result.message || '状态更新失败')\r\n    }\r\n  } catch (error) {\r\n    if (error !== 'cancel') {\r\n      console.error('更新状态失败:', error)\r\n      ElMessage.error('更新状态失败')\r\n    }\r\n  }\r\n}\r\n\r\n// 提交表单\r\nconst handleSubmit = async () => {\r\n  if (!formRef.value) return\r\n  \r\n  await formRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const url = isEdit.value \r\n          ? `/api/product/categories/${form.id}`\r\n          : '/api/product/categories'\r\n        \r\n        const method = isEdit.value ? 'PUT' : 'POST'\r\n        const response = await fetch(url, {\r\n          method,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(form)\r\n        })\r\n\r\n        const result = await response.json()\r\n        if (result.code === 0) {\r\n          ElMessage.success(isEdit.value ? '更新成功' : '创建成功')\r\n          dialogVisible.value = false\r\n          await getCategoryData()\r\n        } else {\r\n          ElMessage.error(result.message || (isEdit.value ? '更新失败' : '创建失败'))\r\n        }\r\n      } catch (error) {\r\n        console.error(isEdit.value ? '更新分类失败:' : '创建分类失败:', error)\r\n        ElMessage.error(isEdit.value ? '更新失败' : '创建失败')\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nonMounted(() => {\r\n  getCategoryData()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.category-manage {\r\n  height: 100%;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.dialog-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}