{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { useRouter } from 'vue-router';\nimport { useSettingsStore } from '../stores/settings';\nimport axios from 'axios';\nexport default {\n  __name: 'Profile',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var profileForm = ref({\n      username: '',\n      roleName: '',\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    var router = useRouter();\n    var settingsStore = useSettingsStore();\n\n    // 获取个人信息\n    var getProfile = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var userId, res, _res$data$data, username, roleId, roleName;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              userId = localStorage.getItem('userId');\n              if (userId) {\n                _context.next = 6;\n                break;\n              }\n              ElMessage.error('请先登录');\n              router.push('/login');\n              return _context.abrupt(\"return\");\n            case 6:\n              _context.next = 8;\n              return axios.get(\"http://localhost:8080/api/users/current\");\n            case 8:\n              res = _context.sent;\n              if (res.data.code === 0) {\n                _res$data$data = res.data.data, username = _res$data$data.username, roleId = _res$data$data.roleId, roleName = _res$data$data.roleName;\n                profileForm.value.username = username;\n                profileForm.value.roleName = roleName || '管理员';\n              } else {\n                ElMessage.error(res.data.msg || '获取个人信息失败');\n              }\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取个人信息失败:', _context.t0);\n              ElMessage.error('获取个人信息失败');\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n      return function getProfile() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // 提交修改\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (profileForm.value.oldPassword) {\n                _context2.next = 3;\n                break;\n              }\n              ElMessage.error('请输入原密码');\n              return _context2.abrupt(\"return\");\n            case 3:\n              if (profileForm.value.newPassword) {\n                _context2.next = 6;\n                break;\n              }\n              ElMessage.error('请输入新密码');\n              return _context2.abrupt(\"return\");\n            case 6:\n              if (profileForm.value.confirmPassword) {\n                _context2.next = 9;\n                break;\n              }\n              ElMessage.error('请确认新密码');\n              return _context2.abrupt(\"return\");\n            case 9:\n              if (!(profileForm.value.newPassword.length < settingsStore.passwordMinLength)) {\n                _context2.next = 12;\n                break;\n              }\n              ElMessage.error(\"\\u65B0\\u5BC6\\u7801\\u957F\\u5EA6\\u4E0D\\u80FD\\u5C0F\\u4E8E\".concat(settingsStore.passwordMinLength, \"\\u4F4D\"));\n              return _context2.abrupt(\"return\");\n            case 12:\n              if (!(profileForm.value.newPassword !== profileForm.value.confirmPassword)) {\n                _context2.next = 15;\n                break;\n              }\n              ElMessage.error('两次输入的新密码不一致');\n              return _context2.abrupt(\"return\");\n            case 15:\n              _context2.prev = 15;\n              _context2.next = 18;\n              return axios.put('http://localhost:8080/api/users/password', {\n                oldPassword: profileForm.value.oldPassword,\n                newPassword: profileForm.value.newPassword\n              });\n            case 18:\n              res = _context2.sent;\n              if (res.data.code === 0) {\n                ElMessage.success('密码修改成功');\n                // 清空表单\n                profileForm.value.oldPassword = '';\n                profileForm.value.newPassword = '';\n                profileForm.value.confirmPassword = '';\n              } else {\n                ElMessage.error(res.data.msg || '修改密码失败');\n              }\n              _context2.next = 26;\n              break;\n            case 22:\n              _context2.prev = 22;\n              _context2.t0 = _context2[\"catch\"](15);\n              console.error('修改密码失败:', _context2.t0);\n              ElMessage.error('修改密码失败');\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[15, 22]]);\n      }));\n      return function handleSubmit() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    onMounted(function () {\n      getProfile();\n    });\n    var __returned__ = {\n      profileForm: profileForm,\n      router: router,\n      settingsStore: settingsStore,\n      getProfile: getProfile,\n      handleSubmit: handleSubmit,\n      ref: ref,\n      onMounted: onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useSettingsStore() {\n        return useSettingsStore;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","ElMessage","useRouter","useSettingsStore","axios","profileForm","username","roleName","oldPassword","newPassword","confirmPassword","router","settingsStore","getProfile","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userId","res","_res$data$data","roleId","wrap","_callee$","_context","prev","next","localStorage","getItem","error","push","abrupt","get","sent","data","code","value","msg","t0","console","stop","apply","arguments","handleSubmit","_ref3","_callee2","_callee2$","_context2","length","passwordMinLength","concat","put","success"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/views/Profile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>个人信息</span>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form :model=\"profileForm\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"profileForm.username\" disabled />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"角色类型\">\r\n          <el-input v-model=\"profileForm.roleName\" disabled />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"原密码\">\r\n          <el-input v-model=\"profileForm.oldPassword\" type=\"password\" placeholder=\"请输入原密码\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"新密码\">\r\n          <el-input v-model=\"profileForm.newPassword\" type=\"password\" placeholder=\"请输入新密码\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"确认新密码\">\r\n          <el-input v-model=\"profileForm.confirmPassword\" type=\"password\" placeholder=\"请再次输入新密码\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">保存修改</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useRouter } from 'vue-router'\r\nimport { useSettingsStore } from '../stores/settings'\r\nimport axios from 'axios'\r\n\r\nconst profileForm = ref({\r\n  username: '',\r\n  roleName: '',\r\n  oldPassword: '',\r\n  newPassword: '',\r\n  confirmPassword: ''\r\n})\r\n\r\nconst router = useRouter()\r\nconst settingsStore = useSettingsStore()\r\n\r\n// 获取个人信息\r\nconst getProfile = async () => {\r\n  try {\r\n    const userId = localStorage.getItem('userId')\r\n    if (!userId) {\r\n      ElMessage.error('请先登录')\r\n      router.push('/login')\r\n      return\r\n    }\r\n\r\n    const res = await axios.get(`http://localhost:8080/api/users/current`)\r\n    if (res.data.code === 0) {\r\n      const { username, roleId, roleName } = res.data.data\r\n      profileForm.value.username = username\r\n      profileForm.value.roleName = roleName || '管理员'\r\n    } else {\r\n      ElMessage.error(res.data.msg || '获取个人信息失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('获取个人信息失败:', error)\r\n    ElMessage.error('获取个人信息失败')\r\n  }\r\n}\r\n\r\n// 提交修改\r\nconst handleSubmit = async () => {\r\n  // 表单验证\r\n  if (!profileForm.value.oldPassword) {\r\n    ElMessage.error('请输入原密码')\r\n    return\r\n  }\r\n  if (!profileForm.value.newPassword) {\r\n    ElMessage.error('请输入新密码')\r\n    return\r\n  }\r\n  if (!profileForm.value.confirmPassword) {\r\n    ElMessage.error('请确认新密码')\r\n    return\r\n  }\r\n  \r\n  // 验证新密码长度\r\n  if (profileForm.value.newPassword.length < settingsStore.passwordMinLength) {\r\n    ElMessage.error(`新密码长度不能小于${settingsStore.passwordMinLength}位`)\r\n    return\r\n  }\r\n  \r\n  // 验证新密码\r\n  if (profileForm.value.newPassword !== profileForm.value.confirmPassword) {\r\n    ElMessage.error('两次输入的新密码不一致')\r\n    return\r\n  }\r\n\r\n  try {\r\n    const res = await axios.put('http://localhost:8080/api/users/password', {\r\n      oldPassword: profileForm.value.oldPassword,\r\n      newPassword: profileForm.value.newPassword\r\n    })\r\n    \r\n    if (res.data.code === 0) {\r\n      ElMessage.success('密码修改成功')\r\n      // 清空表单\r\n      profileForm.value.oldPassword = ''\r\n      profileForm.value.newPassword = ''\r\n      profileForm.value.confirmPassword = ''\r\n    } else {\r\n      ElMessage.error(res.data.msg || '修改密码失败')\r\n    }\r\n  } catch (error) {\r\n    console.error('修改密码失败:', error)\r\n    ElMessage.error('修改密码失败')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  getProfile()\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.profile {\r\n  padding: 20px;\r\n}\r\n\r\n.box-card {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}