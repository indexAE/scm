{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/indexae/Desktop/scm\\u9000\\u8D27/scm/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { defineStore } from 'pinia';\nexport var usePermissionStore = defineStore('permission', {\n  state: function state() {\n    return {\n      roles: [],\n      permissions: []\n    };\n  },\n  getters: {\n    // 检查是否有权限\n    hasPermission: function hasPermission(state) {\n      return function (module, action) {\n        // 如果是管理员，拥有所有权限\n        if (state.roles.some(function (role) {\n          return role.roleCode === 'ROLE_ADMIN';\n        })) {\n          return true;\n        }\n        return state.permissions.some(function (permission) {\n          return permission.module === module && permission.action === action;\n        });\n      };\n    },\n    // 检查是否有角色\n    hasRole: function hasRole(state) {\n      return function (roleCode) {\n        // 处理角色编码前缀\n        var targetRoleCode = roleCode.startsWith('ROLE_') ? roleCode : \"ROLE_\".concat(roleCode);\n        return state.roles.some(function (role) {\n          return role.roleCode === targetRoleCode;\n        });\n      };\n    },\n    // 是否是管理员\n    isAdmin: function isAdmin(state) {\n      return state.roles.some(function (role) {\n        return role.roleCode === 'ROLE_ADMIN';\n      });\n    }\n  },\n  actions: {\n    // 设置角色和权限\n    setRolesAndPermissions: function setRolesAndPermissions(roles, permissions) {\n      this.roles = roles;\n      this.permissions = permissions;\n    },\n    // 清除角色和权限\n    clearRolesAndPermissions: function clearRolesAndPermissions() {\n      this.roles = [];\n      this.permissions = [];\n    },\n    // 获取用户的角色和权限\n    fetchUserPermissions: function fetchUserPermissions() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('/api/users/current/permissions', {\n                headers: {\n                  'Accept': 'application/json',\n                  'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n                },\n                credentials: 'include'\n              });\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n            case 6:\n              result = _context.sent;\n              if (!(result.code === 0 && result.data)) {\n                _context.next = 12;\n                break;\n              }\n              _this.setRolesAndPermissions(result.data.roles, result.data.permissions);\n              return _context.abrupt(\"return\", result.data);\n            case 12:\n              throw new Error(result.message || '获取权限信息失败');\n            case 13:\n              _context.next = 19;\n              break;\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('获取用户权限失败:', _context.t0);\n              throw _context.t0;\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 15]]);\n      }))();\n    }\n  }\n});","map":{"version":3,"names":["defineStore","usePermissionStore","state","roles","permissions","getters","hasPermission","module","action","some","role","roleCode","permission","hasRole","targetRoleCode","startsWith","concat","isAdmin","actions","setRolesAndPermissions","clearRolesAndPermissions","fetchUserPermissions","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_callee$","_context","prev","next","fetch","headers","localStorage","getItem","credentials","sent","json","code","data","abrupt","Error","message","t0","console","error","stop"],"sources":["C:/Users/indexae/Desktop/scm退货/scm/frontend/src/stores/permission.js"],"sourcesContent":["import { defineStore } from 'pinia'\r\n\r\nexport const usePermissionStore = defineStore('permission', {\r\n  state: () => ({\r\n    roles: [],\r\n    permissions: []\r\n  }),\r\n\r\n  getters: {\r\n    // 检查是否有权限\r\n    hasPermission: (state) => (module, action) => {\r\n      // 如果是管理员，拥有所有权限\r\n      if (state.roles.some(role => role.roleCode === 'ROLE_ADMIN')) {\r\n        return true\r\n      }\r\n      return state.permissions.some(permission => \r\n        permission.module === module && permission.action === action\r\n      )\r\n    },\r\n\r\n    // 检查是否有角色\r\n    hasRole: (state) => (roleCode) => {\r\n      // 处理角色编码前缀\r\n      const targetRoleCode = roleCode.startsWith('ROLE_') ? roleCode : `ROLE_${roleCode}`\r\n      return state.roles.some(role => role.roleCode === targetRoleCode)\r\n    },\r\n\r\n    // 是否是管理员\r\n    isAdmin: (state) => {\r\n      return state.roles.some(role => role.roleCode === 'ROLE_ADMIN')\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // 设置角色和权限\r\n    setRolesAndPermissions(roles, permissions) {\r\n      this.roles = roles\r\n      this.permissions = permissions\r\n    },\r\n\r\n    // 清除角色和权限\r\n    clearRolesAndPermissions() {\r\n      this.roles = []\r\n      this.permissions = []\r\n    },\r\n\r\n    // 获取用户的角色和权限\r\n    async fetchUserPermissions() {\r\n      try {\r\n        const response = await fetch('/api/users/current/permissions', {\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          },\r\n          credentials: 'include'\r\n        })\r\n        const result = await response.json()\r\n        if (result.code === 0 && result.data) {\r\n          this.setRolesAndPermissions(result.data.roles, result.data.permissions)\r\n          return result.data\r\n        } else {\r\n          throw new Error(result.message || '获取权限信息失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取用户权限失败:', error)\r\n        throw error\r\n      }\r\n    }\r\n  }\r\n}) "],"mappings":";;;;;;;;;AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,IAAMC,kBAAkB,GAAGD,WAAW,CAAC,YAAY,EAAE;EAC1DE,KAAK,EAAE,SAAPA,KAAKA,CAAA;IAAA,OAAS;MACZC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE;IACf,CAAC;EAAA,CAAC;EAEFC,OAAO,EAAE;IACP;IACAC,aAAa,EAAE,SAAfA,aAAaA,CAAGJ,KAAK;MAAA,OAAK,UAACK,MAAM,EAAEC,MAAM,EAAK;QAC5C;QACA,IAAIN,KAAK,CAACC,KAAK,CAACM,IAAI,CAAC,UAAAC,IAAI;UAAA,OAAIA,IAAI,CAACC,QAAQ,KAAK,YAAY;QAAA,EAAC,EAAE;UAC5D,OAAO,IAAI;QACb;QACA,OAAOT,KAAK,CAACE,WAAW,CAACK,IAAI,CAAC,UAAAG,UAAU;UAAA,OACtCA,UAAU,CAACL,MAAM,KAAKA,MAAM,IAAIK,UAAU,CAACJ,MAAM,KAAKA,MAAM;QAAA,CAC9D,CAAC;MACH,CAAC;IAAA;IAED;IACAK,OAAO,EAAE,SAATA,OAAOA,CAAGX,KAAK;MAAA,OAAK,UAACS,QAAQ,EAAK;QAChC;QACA,IAAMG,cAAc,GAAGH,QAAQ,CAACI,UAAU,CAAC,OAAO,CAAC,GAAGJ,QAAQ,WAAAK,MAAA,CAAWL,QAAQ,CAAE;QACnF,OAAOT,KAAK,CAACC,KAAK,CAACM,IAAI,CAAC,UAAAC,IAAI;UAAA,OAAIA,IAAI,CAACC,QAAQ,KAAKG,cAAc;QAAA,EAAC;MACnE,CAAC;IAAA;IAED;IACAG,OAAO,EAAE,SAATA,OAAOA,CAAGf,KAAK,EAAK;MAClB,OAAOA,KAAK,CAACC,KAAK,CAACM,IAAI,CAAC,UAAAC,IAAI;QAAA,OAAIA,IAAI,CAACC,QAAQ,KAAK,YAAY;MAAA,EAAC;IACjE;EACF,CAAC;EAEDO,OAAO,EAAE;IACP;IACAC,sBAAsB,WAAtBA,sBAAsBA,CAAChB,KAAK,EAAEC,WAAW,EAAE;MACzC,IAAI,CAACD,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAChC,CAAC;IAED;IACAgB,wBAAwB,WAAxBA,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACjB,KAAK,GAAG,EAAE;MACf,IAAI,CAACC,WAAW,GAAG,EAAE;IACvB,CAAC;IAED;IACMiB,oBAAoB,WAApBA,oBAAoBA,CAAA,EAAG;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,QAAA,EAAAC,MAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEFC,KAAK,CAAC,gCAAgC,EAAE;gBAC7DC,OAAO,EAAE;kBACP,QAAQ,EAAE,kBAAkB;kBAC5B,eAAe,YAAAnB,MAAA,CAAYoB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;gBAC1D,CAAC;gBACDC,WAAW,EAAE;cACf,CAAC,CAAC;YAAA;cANIX,QAAQ,GAAAI,QAAA,CAAAQ,IAAA;cAAAR,QAAA,CAAAE,IAAA;cAAA,OAOON,QAAQ,CAACa,IAAI,CAAC,CAAC;YAAA;cAA9BZ,MAAM,GAAAG,QAAA,CAAAQ,IAAA;cAAA,MACRX,MAAM,CAACa,IAAI,KAAK,CAAC,IAAIb,MAAM,CAACc,IAAI;gBAAAX,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAClCX,KAAI,CAACH,sBAAsB,CAACS,MAAM,CAACc,IAAI,CAACvC,KAAK,EAAEyB,MAAM,CAACc,IAAI,CAACtC,WAAW,CAAC;cAAA,OAAA2B,QAAA,CAAAY,MAAA,WAChEf,MAAM,CAACc,IAAI;YAAA;cAAA,MAEZ,IAAIE,KAAK,CAAChB,MAAM,CAACiB,OAAO,IAAI,UAAU,CAAC;YAAA;cAAAd,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAe,EAAA,GAAAf,QAAA;cAG/CgB,OAAO,CAACC,KAAK,CAAC,WAAW,EAAAjB,QAAA,CAAAe,EAAO,CAAC;cAAA,MAAAf,QAAA,CAAAe,EAAA;YAAA;YAAA;cAAA,OAAAf,QAAA,CAAAkB,IAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA;IAGrC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}