<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scm.mapper.PurchaseInboundMapper">
    
    <resultMap id="BaseResultMap" type="com.scm.entity.PurchaseInbound">
        <id column="id" property="id" />
        <result column="code" property="code" />
        <result column="order_id" property="orderId" />
        <result column="order_code" property="orderCode" />
        <result column="warehouse_id" property="warehouseId" />
        <result column="warehouse" property="warehouse" />
        <result column="handler_id" property="handlerId" />
        <result column="handler" property="handler" />
        <result column="status" property="status" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <resultMap id="ItemResultMap" type="com.scm.entity.PurchaseInboundItem">
        <id column="id" property="id" />
        <result column="inbound_id" property="inboundId" />
        <result column="product_id" property="productId" />
        <result column="product_name" property="productName" />
        <result column="product_spec" property="productSpec" />
        <result column="unit" property="unit" />
        <result column="quantity" property="quantity" />
        <result column="remark" property="remark" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <sql id="Base_Column_List">
        id, code, order_id, order_code, warehouse_id, warehouse, handler_id, handler,
        status, remark, create_time, update_time
    </sql>
    
    <sql id="Item_Column_List">
        id, inbound_id, product_id, product_name, product_spec, unit,
        quantity, remark, create_time, update_time
    </sql>
    
    <insert id="insert" parameterType="com.scm.entity.PurchaseInbound" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO purchase_inbound (
            code, order_id, order_code, supplier_id, supplier, warehouse_id, warehouse, handler_id, handler,
            status, remark, create_time, update_time
        ) VALUES (
            #{code}, #{orderId}, #{orderCode}, #{supplierId}, #{supplier}, #{warehouseId}, #{warehouse}, #{handlerId}, #{handler},
            #{status}, #{remark}, NOW(), NOW()
        )
    </insert>
    
    <insert id="insertItem" parameterType="com.scm.entity.PurchaseInboundItem">
        INSERT INTO purchase_inbound_item (
            inbound_id, product_id, product_name, product_spec, unit,
            quantity, price, amount, remark, create_time, update_time
        ) VALUES (
            #{inboundId}, #{productId}, #{productName}, #{productSpec}, #{unit},
            #{quantity}, #{price}, #{amount}, #{remark}, NOW(), NOW()
        )
    </insert>
    
    <update id="update" parameterType="com.scm.entity.PurchaseInbound">
        UPDATE purchase_inbound
        <set>
            <if test="warehouseId != null">warehouse_id = #{warehouseId},</if>
            <if test="warehouse != null">warehouse = #{warehouse},</if>
            <if test="handlerId != null">handler_id = #{handlerId},</if>
            <if test="handler != null">handler = #{handler},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>
    
    <update id="updateStatus">
        UPDATE purchase_inbound SET status = #{status}, update_time = NOW()
        WHERE id = #{id}
    </update>
    
    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM purchase_inbound
        WHERE id = #{id}
    </select>
    
    <select id="selectItemsByInboundId" resultMap="ItemResultMap">
        SELECT <include refid="Item_Column_List" />
        FROM purchase_inbound_item
        WHERE inbound_id = #{inboundId}
    </select>
    
    <select id="selectList" resultMap="BaseResultMap">
        SELECT 
            id, code, order_id, order_code, warehouse_id, warehouse, 
            handler_id, handler, status, remark, create_time, update_time
        FROM purchase_inbound
        <where>
            <if test="code != null and code != ''">
                AND code LIKE CONCAT('%', #{code}, '%')
            </if>
            <if test="orderCode != null and orderCode != ''">
                AND order_code LIKE CONCAT('%', #{orderCode}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        ORDER BY create_time DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>
    
    <select id="selectCount" resultType="int">
        SELECT COUNT(1) FROM purchase_inbound
        <where>
            <if test="code != null and code != ''">
                AND code LIKE CONCAT('%', #{code}, '%')
            </if>
            <if test="orderCode != null and orderCode != ''">
                AND order_code LIKE CONCAT('%', #{orderCode}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
    </select>
    
    <select id="selectOrderById" resultType="com.scm.entity.PurchaseOrder">
        SELECT 
            id, code, requisition_id, requisition_code, supplier_id, supplier,
            amount, purchaser_id, purchaser, expected_delivery_date, actual_delivery_date,
            status, remark, create_time, update_time
        FROM purchase_order
        WHERE id = #{orderId}
    </select>
    
</mapper> 